@charset "UTF-8";
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0;font:200 21px/1.5 "Inter","MS Sans Serif",sans-serif;background:#fff}details,main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font:1em monospace,monospace}a,button{background:0 0}a{text-decoration:none}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button{font:100%/1.15 inherit;margin:0;overflow:visible;text-transform:none;border:0;cursor:pointer;-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}input{font:100%/1.15 inherit;margin:0;overflow:visible}optgroup,select,textarea{font:100%/1.15 inherit;margin:0}select{text-transform:none}textarea{overflow:auto}[type=button],[type=reset],[type=submit]{-webkit-appearance:button}fieldset{padding:.35em .75em .625em}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{vertical-align:baseline}[type=checkbox],[type=radio],legend{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button{height:auto}[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}[type=search]::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}::after,::before{padding:0;margin:0;border:0;-webkit-box-sizing:border-box;box-sizing:border-box}li,ol,ul{list-style:none}@font-face{font-family:"Inter";font-style:normal;font-weight:200;src:url(/font/Inter-ExtraLight.woff2) format("woff2");font-display:swap}@font-face{font-family:"Inter";font-style:normal;font-weight:400;src:url(/font/Inter-Regular.woff2) format("woff2");font-display:swap}@font-face{font-family:"Inter";font-style:normal;font-weight:700;src:url(/font/Inter-Bold.woff2) format("woff2");font-display:swap}.visually-hidden{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;white-space:nowrap;border:0;clip:rect(0 0 0 0);-webkit-clip-path:inset(100%);clip-path:inset(100%)}.title{font-size:40px;font-weight:700;line-height:48px;letter-spacing:0;text-align:left;margin-top:0;margin-bottom:20px}.wrapper{max-width:1440px;margin-left:auto;margin-right:auto;padding-left:16px;padding-right:16px;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.btn-arrow,.dev__web-services ul,.wrapper{display:-webkit-box;display:-ms-flexbox;display:flex}.btn-arrow{width:75px;height:75px}.btn-white,.dev__web-container p{font-size:40px;font-weight:700;line-height:48px}.btn-white{background:#fff;color:#0e0e0e}.btn-black{background:#0e0e0e;font-size:24px;font-weight:700;line-height:29px;color:#fff}.dev__web-container{padding-top:88px;padding-bottom:10px;display:grid;grid-template-columns:10fr 1fr 1fr;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.dev__web-container p{margin-top:0;margin-bottom:20px}.dev__web-container button{width:60px;justify-self:end}.dev__web-services ul{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0;margin:120px 0;gap:100px}.dev__web-services li{display:grid;grid-template-columns:250px 70px auto 250px;gap:20px}.dev__web-title{text-align:end;font-size:24px;font-weight:200;line-height:29px}.dev__web-number{justify-self:center;font-size:24px;font-weight:700;line-height:29px}.dev__web-description{padding-right:20px;font-size:24px;font-weight:200;line-height:29px}.dev__web-description span,.dev__web-order p{font-size:24px;font-weight:700;line-height:29px}.dev__web-order{justify-self:end}.dev__web-order button{padding:5px 45px;border-radius:50px}.form .wrapper{position:relative}.form fieldset{padding:0}.form fieldset input{position:absolute;width:1px;height:1px;overflow:hidden;clip:rect(0 0 0 0)}.form__option{background:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none'%3E%3Crect width='15' height='15' x='.5' y='.5' fill='%23fff' rx='3.5'/%3E%3Crect width='15' height='15' x='.5' y='.5' stroke='%23E8E7E7' rx='3.5'/%3E%3C/svg%3E") no-repeat;cursor:pointer;width:16px;height:16px;margin-right:10px}fieldset input:checked+.form__option,fieldset input:checked:hover+.form__option{background:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none'%3E%3Crect width='15' height='15' x='.5' y='.5' fill='%23fff' rx='3.5'/%3E%3Cpath stroke='%23000' d='M4 7.143 7.2 10 12 5'/%3E%3Crect width='15' height='15' x='.5' y='.5' stroke='%23000' rx='3.5'/%3E%3C/svg%3E") no-repeat}.form__intro{background:#fff;padding-top:88px;display:grid;grid-template-columns:repeat(3,1fr)}.form__intro h2{grid-column:2/3;justify-self:center}.form__progress{background:#eaecf0;position:absolute;width:6px;height:100vw;-webkit-box-shadow:1px 1px 2px 0 #a6abbd inset;box-shadow:1px 1px 2px 0 #a6abbd inset;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-item-align:center;align-self:center;top:150px;z-index:-2;border-radius:6px}.form__progress-bar{background:#0e0e0e;position:fixed;width:6px;height:50vh;top:0;bottom:50vh;z-index:-1}.form__progress-overlay-bottom,.form__progress-overlay-top{position:absolute;top:0;bottom:auto;left:0;right:0;z-index:1}.form__progress-overlay-top{background:#0e0e0e;width:6px;height:20vh}.form__progress-overlay-bottom{background:linear-gradient(top,#040404 50%,#fff 50%);width:100%;height:25vh}.form__stages{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.form__stages-container{display:grid;grid-template-columns:2fr 5fr}.form__stages-container h3{grid-column:1/2;grid-row:1/2}.form__stages-container small{grid-column:1/2;grid-row:2/3;font-size:14px;font-weight:400;line-height:17px}.form__stages-toggle{background:#eaecf0;margin-top:0;border-radius:30px;width:58px;height:58px;position:sticky;top:50vh;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-shadow:3px 3px 3px 0 #aeb8c0 inset;box-shadow:3px 3px 3px 0 #aeb8c0 inset}.form__stages-toggle--active{background:#000;font-size:24px;font-weight:700;line-height:29px;color:#fff;-webkit-box-shadow:none;box-shadow:none}.form__stages fieldset{margin-bottom:25px;position:relative;border:0;display:grid;grid-template-columns:1fr 1fr 60px 1fr 1fr;gap:50px}.form__stages fieldset:not(:first-of-type){margin-top:25px}.form__stages fieldset h4{grid-column:2/3;font-size:24px;font-weight:200;line-height:29px;text-align:end;margin-top:14px}.form__stages-btn{background:#fff;display:grid;grid-template-columns:repeat(3,1fr);padding-top:50px}.form__stages-btn .btn-white{grid-column:2/3;border:3px solid #0e0e0e;border-radius:60px}.form__stages-btn .btn-arrow{grid-column:3/4;justify-self:end;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.form__stages-list,.form__stages-list label{display:-webkit-box;display:-ms-flexbox;display:flex}.form__stages-list{grid-column:4/-1;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:8px;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.form__stages-list label{position:relative;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;font-size:16px;font-weight:200;line-height:19px}.form__stages-list label:hover{font-weight:700;line-height:19px}.form__stages-list label:hover .form__stages-tooltip{visibility:visible}.form__ready-card label input,.form__stages-list input{margin-right:10px}.form__stages-tooltip{background:#fff;visibility:hidden;width:197px;-webkit-box-shadow:6px 6px 16px 8px rgba(174,174,192,.35);box-shadow:6px 6px 16px 8px rgba(174,174,192,.35);text-align:initial;padding:22px 14px;border-radius:6px;border:1px solid rgba(175,185,193,.69);position:absolute;z-index:1;top:-5px;left:105%;font-size:10px;font-weight:200;line-height:12px;color:#0e0e0e}.form__label-stages-branding .form__stages-tooltip::after{content:"Изучение бренда для решения конкретных маркетинговых задач, в том числе повышение конкурентноспособности, формирование уникального образа, повышение симпатии потребителей, а также закрепление и дальнейшее развитие позиции на рынке."}.form__label-stages-rebranding .form__stages-tooltip::after{content:"Обновление уже имеющихся концептов и реализованных идей на основе полученного опыта компании на рынке, в том числе и полное реконструкция образа компании с нуля."}.form__label-stages-retail-branding .form__stages-tooltip::after{content:"Проектирование и оптимизация торгового пространства, развитие качества взаимодействия торговых точек с клиентами."}.form__label-stages-localization .form__stages-tooltip::after{content:"Перевод и адаптирование иностранной продукции под Российский сегмент (в том числе по программе импортозамещения)."}.form__label-stages-cjm .form__stages-tooltip::after,.form__label-stages-customer-experience .form__stages-tooltip::after,.form__label-stages-marketing-analysis .form__stages-tooltip::after{content:"Проводится полный анализ взаимодействия между брендом и клиентом, напрямую влияющий на уровень клиентского опыта. Включает в себя весь путь клиента от потребности до результата (customer journey), все точки контакта клиента с брендом (brand touchpoints), а также окружение при взаимодействии (environment)."}.form__label-stages-brand-audit .form__stages-tooltip::after{content:"Аудит бренда — один из самых надёжных методов анализа составляющих бренда, а именно: его конкурентоспособности, текущего положения бренда на рынке, включая исследование потенциала для его дальнейшего развития."}.form__label-stages-structuring-of-the-received-data .form__stages-tooltip::after{content:"Все полученные данные затем структурируются для подбора оптимальной стратегии позиционирования, сегментирования ключевых групп целевой аудитории, выявлении сильных и слабых сторон позиционирования бренда относительно конкурентов. Мы используем собственные и международные методики изучения брендов, применяя самые результативные модели."}.form__ready{background:#fff;padding-top:83px}.form__ready h3{padding-left:100px;max-width:755px}.form__ready-cards{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.form__ready-cards fieldset{border:0}.form__ready-card{aspect-ratio:314/451;height:451px;display:grid;grid-template-rows:70px auto auto;justify-items:center;padding:8px 30px 43px;border:2px solid #d3d3d3;border-radius:7px;overflow:hidden}.form__ready-card h4,.form__ready-container p{font-size:24px;font-weight:700;line-height:29px;text-align:center}.form__ready-card h4{margin-top:10px;margin-bottom:13px}.form__ready-card label,.form__ready-list{display:-webkit-box;display:-ms-flexbox;display:flex}.form__ready-card label p{font-size:16px;font-weight:200;line-height:19px;margin:0}.form__ready-list{height:210px;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:8px;margin-top:24px;margin-bottom:0;padding:20px}.form__ready-list label{display:grid;grid-template-columns:auto 1fr}.form__ready-container{margin-top:20px}.form__ready-container p{margin:5px 0}.form__ready-container button{padding:5px 36px;border-radius:84px}.form__ready-commentary{display:-webkit-box;display:-ms-flexbox;display:flex;width:314px;font-size:16px;font-weight:200;line-height:19px}.header{background:#fff;padding-top:27px;padding-bottom:10px;position:relative;z-index:1}.header .wrapper,.header__nav{display:-webkit-box;display:-ms-flexbox;display:flex}.header .wrapper{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__nav{-ms-flex-wrap:wrap;flex-wrap:wrap;gap:50px;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline}.header a{font:200 16px/19px "Inter","MS Sans Serif",sans-serif;letter-spacing:0;text-align:left;color:#000}.header p{text-align:center}.preform{background:#fff;font-size:40px;line-height:48px;padding-top:88px;padding-bottom:10px;position:relative;z-index:1}.preform .wrapper{display:grid;grid-template-columns:3fr 1fr}.preform p{font-weight:200;margin:0}.preform span,.projects__nav a:hover,.projects__nav a[aria-selected=true]{font-weight:700}.preform button{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;-webkit-box-align:end;-ms-flex-align:end;align-items:end;-ms-flex-item-align:end;align-self:end}.projects{--mt-inside-card:10px}.projects__nav{padding:0;display:grid;grid-template-columns:repeat(auto-fit,minmax(100px,1fr));text-align:center;gap:50px;margin:20px 0 50px}.projects__nav a{font-size:16px;font-weight:200;line-height:19px;color:#0e0e0e;width:100%}.projects__nav a:focus-visible{font-weight:700}.projects li{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;min-height:30px;border:1px solid #0e0e0e;border-radius:84px}.projects__card{text-align:center;padding:60px 0;border-top:1px solid #0e0e0e}.projects__card p{font-weight:700}.projects__cta{display:grid;grid-template-columns:200px 50px auto 200px;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;gap:45px}.projects h3,.projects h4,.projects__card p{font-size:24px;line-height:29px;color:#0e0e0e;margin-top:var(--mt-inside-card)}.projects h3{font-weight:700;max-width:200px;text-align:left}.projects h4{font-weight:200;max-width:180px;text-align:end}.video__item{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}*{-webkit-box-sizing:border-box;box-sizing:border-box}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */