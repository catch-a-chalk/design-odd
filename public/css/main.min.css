@charset "UTF-8";
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0;font:200 21px/1.5 "Inter","MS Sans Serif",sans-serif;background:#fff}details,main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font:1em monospace,monospace}a,button{background:0 0}a{text-decoration:none}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button{font:100%/1.15 inherit;margin:0;overflow:visible;text-transform:none;border:0;cursor:pointer;-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}input{font:100%/1.15 inherit;margin:0;overflow:visible}optgroup,select,textarea{font:100%/1.15 inherit;margin:0}select{text-transform:none}textarea{overflow:auto}[type=button],[type=reset],[type=submit]{-webkit-appearance:button}fieldset{padding:.35em .75em .625em}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{vertical-align:baseline}[type=checkbox],[type=radio],legend{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button{height:auto}[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}[type=search]::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}::after,::before{padding:0;margin:0;border:0;-webkit-box-sizing:border-box;box-sizing:border-box}li,ol,ul{list-style:none}@font-face{font-family:"Inter";font-style:normal;font-weight:200;src:url(/font/Inter-ExtraLight.woff2) format("woff2");font-display:swap}@font-face{font-family:"Inter";font-style:normal;font-weight:400;src:url(/font/Inter-Regular.woff2) format("woff2");font-display:swap}@font-face{font-family:"Inter";font-style:normal;font-weight:700;src:url(/font/Inter-Bold.woff2) format("woff2");font-display:swap}.visually-hidden{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;white-space:nowrap;border:0;clip:rect(0 0 0 0);-webkit-clip-path:inset(100%);clip-path:inset(100%)}.title{font-size:40px;font-weight:700;line-height:48px;letter-spacing:0;text-align:left;margin-top:0;margin-bottom:20px}.wrapper{max-width:1440px;margin-left:auto;margin-right:auto;padding-left:16px;padding-right:16px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.is-active{font-weight:700;font-size:18px;line-height:22px;letter-spacing:0;text-align:left}.btn-arrow,.form form{display:-webkit-box;display:-ms-flexbox;display:flex}.btn-arrow{width:100px;height:100px}.btn-white{font-size:40px;font-weight:700;line-height:48px}.form{margin-top:88px}.form__intro{display:grid;grid-template-columns:repeat(3,1fr)}.form__intro h2{grid-column:2/3;justify-self:center}.form__intro button{grid-column:3/4;justify-self:end;justify-items:baseline}.form form{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.form fieldset{margin-bottom:25px;position:relative;border:0;display:grid;grid-template-columns:1fr 1fr 60px 1fr 1fr;gap:50px}.form fieldset:not(:first-of-type){margin-top:25px}.form fieldset h4{grid-column:2/3;font-size:24px;font-weight:200;line-height:29px;text-align:end;margin-top:8px}.form fieldset p{margin-top:8px;justify-self:center}.form__stage{display:grid;grid-template-columns:2fr 5fr}.form__stage h3{grid-column:1/2;grid-row:1/2}.form__stage small{grid-column:1/2;grid-row:2/3;font-size:14px;font-weight:400;line-height:17px}.form__list,.form__list label{display:-webkit-box;display:-ms-flexbox;display:flex}.form__list{grid-column:4/-1;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:8px;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.form__list label{position:relative;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;font-size:16px;font-weight:200;line-height:19px}.form__list label .form__tooltip{background:#fff;visibility:hidden;width:197px;-webkit-box-shadow:6px 6px 16px 8px rgba(174,174,192,.35);box-shadow:6px 6px 16px 8px rgba(174,174,192,.35);text-align:initial;padding:22px 14px;border-radius:6px;border:1px solid rgba(175,185,193,.69);position:absolute;z-index:1;top:-5px;left:105%;font-size:10px;font-weight:200;line-height:12px;color:#0e0e0e}.form__list label:hover .form__tooltip{visibility:visible}.form__list input{margin-right:10px}.form__buttons{display:grid;grid-template-columns:repeat(3,1fr)}.form__buttons .btn-white{grid-column:2/3;border:3px solid #0e0e0e;border-radius:60px}.form__buttons .btn-arrow{grid-column:3/4;justify-self:end;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.form__label-branding .form__tooltip::after{content:"Изучение бренда для решения конкретных маркетинговых задач, в том числе повышение конкурентноспособности, формирование уникального образа, повышение симпатии потребителей, а также закрепление и дальнейшее развитие позиции на рынке."}.form__label-rebranding .form__tooltip::after{content:"Обновление уже имеющихся концептов и реализованных идей на основе полученного опыта компании на рынке, в том числе и полное реконструкция образа компании с нуля."}.form__label-retail-branding .form__tooltip::after{content:"Проектирование и оптимизация торгового пространства, развитие качества взаимодействия торговых точек с клиентами."}.form__label-localization .form__tooltip::after{content:"Перевод и адаптирование иностранной продукции под Российский сегмент (в том числе по программе импортозамещения)."}.form__label-cjm .form__tooltip::after,.form__label-customer-experience .form__tooltip::after,.form__label-marketing-analysis .form__tooltip::after{content:"Проводится полный анализ взаимодействия между брендом и клиентом, напрямую влияющий на уровень клиентского опыта. Включает в себя весь путь клиента от потребности до результата (customer journey), все точки контакта клиента с брендом (brand touchpoints), а также окружение при взаимодействии (environment)."}.form__label-brand-audit .form__tooltip::after{content:"Аудит бренда — один из самых надёжных методов анализа составляющих бренда, а именно: его конкурентоспособности, текущего положения бренда на рынке, включая исследование потенциала для его дальнейшего развития."}.form__label-structuring-of-the-received-data .form__tooltip::after{content:"Все полученные данные затем структурируются для подбора оптимальной стратегии позиционирования, сегментирования ключевых групп целевой аудитории, выявлении сильных и слабых сторон позиционирования бренда относительно конкурентов. Мы используем собственные и международные методики изучения брендов, применяя самые результативные модели."}.header{margin-top:27px;margin-bottom:10px}.header .wrapper,.header__nav{display:-webkit-box;display:-ms-flexbox;display:flex}.header .wrapper{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__nav{-ms-flex-wrap:wrap;flex-wrap:wrap;gap:50px;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline}.header a{font:200 16px/19px "Inter","MS Sans Serif",sans-serif;letter-spacing:0;text-align:left;color:#000}.header p{text-align:center}.preform{font-size:40px;line-height:48px;margin-top:88px;margin-bottom:10px}.preform .wrapper{display:grid;grid-template-columns:3fr 1fr}.preform p{font-weight:200;margin:0}.preform span,.projects__nav a:hover,.projects__nav a[aria-selected=true]{font-weight:700}.preform button{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;-webkit-box-align:end;-ms-flex-align:end;align-items:end;-ms-flex-item-align:end;align-self:end}.projects{--mt-inside-card:10px}.projects__nav{padding:0;display:grid;grid-template-columns:repeat(auto-fit,minmax(100px,1fr));text-align:center;gap:50px;margin:20px 0 50px}.projects__nav a{font-size:16px;font-weight:200;line-height:19px;color:#0e0e0e;width:100%}.projects__nav a:focus-visible{font-weight:700}.projects li{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;min-height:30px;border:1px solid #0e0e0e;border-radius:84px}.projects__card{text-align:center;padding:60px 0;border-top:1px solid #0e0e0e}.projects__card p{font-weight:700}.projects__cta{display:grid;grid-template-columns:200px 50px auto 200px;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;gap:45px}.projects h3,.projects h4,.projects__card p{font-size:24px;line-height:29px;color:#0e0e0e;margin-top:var(--mt-inside-card)}.projects h3{font-weight:700;max-width:200px;text-align:left}.projects h4{font-weight:200;max-width:180px;text-align:end}.video__item{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}*{-webkit-box-sizing:border-box;box-sizing:border-box}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uY3NzIiwibWFpbi5taW4uY3NzIiwidmVuZG9yL25vcm1hbGl6ZS5zY3NzIiwiZ2xvYmFsL3V0aWxpcy5zY3NzIiwiZ2xvYmFsL2ZvbnRzLnNjc3MiLCJibG9jay9mb3JtLnNjc3MiLCJibG9jay9oZWFkZXIuc2NzcyIsImJsb2NrL3ByZWZvcm0uc2NzcyIsImJsb2NrL3Byb2plY3RzLnNjc3MiLCJibG9jay92aWRlby5zY3NzIiwibWFpbi5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCOztBQzRLQSxJLENEREEsZ0IsQ0NHRSw2QixDRENGLEksQ0NHRSxRLENBaXNCQSxvRCxDQUNBLGUsQ0E5ZUYsTyxDQWpOQSxJLENEREEsYSxDQ0tBLEUsQ0NiQyxhLENGYUQsYyxDQ0tBLEUsQ0NkQyw4QixDRmNELHNCLENDR0UsUSxDQ2ZGLGdCLENEMENBLEksQ0FJQSxHLENBM0JBLEcsQ0ErQkEsSSxDQy9DQSw0QixDRG9CQSxDLENBdURBLE0sQ0NuQkEsYyxDRHBDQSxDLENFM0xFLG9CLENGK0xGLFcsQ0NqQkEsa0IsQ0FFQyx3QyxDQUNBLGdDLENGbUJELEMsQ0FJQSxNLENDREUsa0IsQ0FtQkYsSyxDRERBLGEsQ0FHQSxHLENBUUEsRyxDQ0dFLGEsQ0NyQkYsYSxDQUNDLGlCLENBQ0EsdUIsQ0ZRRCxHLENFZEMsYSxDRnNCRCxHLENFZkMsUyxDRHlCRCxHLENDdEJBLGlCLENEMEJBLE0sQ0N0QkMsc0IsQ0FDQSxRLENGc0JELGdCLENDR0UsbUIsQ0N0QkQsUSxDQUNBLGMsQ0FDQSx5QixDRCtERCwrQixDQ2xCQSw4QixDRDRDQSwrQixDRGhFQSx3QixDQ0dFLGlCLENDeEJGLFMsQ0RnRUEsNEIsQ0FhQSwyQixDRFFBLDRCLENFbkZDLHFCLENBQ0MsNkIsQ0FHRCxLLENBQ0Msc0IsQ0Z5QkYsUSxDQ0dFLGdCLENEQ0YsUSxDRXBCQyxNLENGK0JELFEsQ0V6QkMsc0IsQ0FDQyxRLENBUEQsTSxDRDhCQyxtQixDRENGLFEsQ0V2QkUsYSxDRCtCRixhLENBYUEsWSxDQWFBLGEsQ0QzQkEseUIsQ0N3Q0EsUSxDQ2xDQSwwQixDRmlDQSxNLENBR0EsYSxDRTlCRSxhLENBQ0UsYyxDRmlDSixrQixDQ1FBLFEsQ0RKQSx1QixDQ1FBLGUsQ0FNQSxZLENEekJBLE0sQ0FlQSw2QixDQ01FLHFCLENDckNGLFMsQ0QrQ0Esd0MsQ0N6Q0EsVyxDRDZDQSx3QyxDQ3ZDQyxXLENEMkNELGEsQ0RMQSw0QixDQ09FLG1CLENESEYsd0MsQ0NPRSx1QixDQUdGLHlDLENDMUNDLHlCLENGc0NELFksQ0NhQSxPLENETEEsaUIsQ0FPQSxRLENDRUEsUSxDR25ZRSxZLENIZ1pGLE8sQ0UzWkEsUSxDQUdFLFMsQ0FDQSxRLENBQ0EsUSxDQUNBLDZCLENBQ0EscUIsQ0ZrYUYsRSxDRXhaQSxFLENGc1pBLEUsQ0VwWkUsZSxDRjBaRixXRXRaRSxtQixDQUNBLGlCLENIaVpGLGUsQ0NRRSxxRCxDRXRaRixrQixBRjBaQSxXRXRaRSxtQixDQUNBLGlCLENBQ0EsZSxDQUFBLGtELENBQUEsa0IsQUY0WkYsV0FDRSxtQixDRFhGLGlCLENDYUUsZSxDRTNaRiwrQyxDQUNBLGtCRitaQSxnQixDRTNaQSxpQixDSGlaQSxTLENDYUUsVSxDRTFaQSxXLENBQ0UsUyxDQUFBLGUsQ0FBQSxrQixDQUNBLFEsQ0FDQSxrQixDSGdaSiw2QixDRzdZRSxxQixDRitaRixNLENEYkEsYyxDQ2VFLGUsQ0lyZEYsZ0IsQ0FDRSxnQixDTHljRixlLENLdmNFLFksQ0FDRSxrQixDQUdBLFEsQ0FDRSxnQixDQUNBLGdCLENMeWNOLGlCLENLdGNJLGlCLENBQ0Usa0IsQ0FDQSxtQixDQUNBLG1CLENMd2NOLFksQ0twY0UsMkIsQ0FDRSw0QixDQUFBLHlCLENBQUEscUIsQ0p3ZEosVSxDQUNFLGUsQ0RsQkYsYyxDS25jRSxnQixDQUNFLGdCLENBTUEsZSxDSnFkSixVLENJN2FBLFUsQ0FDRSxtQixDQUNBLG1CLENBQUEsWSxDSjJhRixVLENJeGRNLFcsQ0wwY04sWSxDQ3NCQSxVLENJcGRNLGMsQ0FDQSxlLENBQ0EsZ0IsQ0FJRixLLENBQ0UsZSxDQUtKLFksQ0FDRSxZLENBQ0EsbUMsQ0pxZEosZSxDSWpkTSxlLENMZ2NOLG1CLENDc0JBLG1CLENJaGRNLGUsQ0FDQSxnQixDQUNBLHNCLENBS04sVSxDQUVFLDJCLENBQ0EsNEIsQ0FBQSx5QixDSm1kQSxxQixDQUdGLGMsQ0lwZEUsa0IsQ0FBQSxpQixDTDZiRixRLENLM2JFLFksQ0FDRSwwQyxDQUNBLFEsQ0p5ZEosbUJJeGRJLGUsQ0p5ZEYsZSxDQUdGLGlCLENJemRJLGUsQ0w2YkosYyxDSzNiSSxlLENBQ0UsZ0IsQ0FDQSxjLENBQ0EsYyxDSjZkTixnQixDSTFkTSxjLENBQ0EsbUIsQ0o4ZE4sWSxDSTFkTSxZLENBQ0EsNkIsQ0o4ZE4sZSxDSXpkTSxlLENMNGJOLFksQ0FHQSxrQixDS3ZiRSxlLENBQ0UsWSxDTHliSixjLENDZ0NFLGUsQ0lyZEYsZ0IsQ0wwYkEsVyxDQVdBLGlCLENLbmJBLG1CLENBQ0EsbUIsQ0FDRSxZLENMc2FGLFcsQ0t0YkUsZ0IsQ0wyYkYsMkIsQ0tyYkUsNEIsQ0FDRSx5QixDQUNBLHFCLENBQ0EsTyxDSnNkRix5QixDQUNBLHNCLENJdGRFLGlCLENMdWJKLGlCLENDb0NFLGlCLENEL0JGLDBCLENDb0NFLHVCLENJeGRGLG9CLENBQ0UsYyxDTHViRixlLENDb0NFLGdCLENEaENGLGdDLENDb0NFLGUsQ0kxZEYsaUIsQ0FDRSxXLENMeWJGLHlELENDb0NFLGlELENJMWRGLGtCLENBQ0EsaUIsQ0FDRSxpQixDTHliRixzQyxDQ29DRSxpQixDSTNkRixTLENBQ0UsUSxDTDBiRixTLENDb0NFLGMsQ0k1ZEYsZSxDQUNFLGdCLENMMmJGLGEsQ0NzQ0Esc0MsQ0RsQ0Esa0IsQ0NzQ0EsaUIsQ0RsQ0EsaUIsQ0NzQ0EsYyxDS25vQkUsWSxDTmttQkYsbUMsQ0NzQ0EseUIsQ0tyb0JJLGUsQ0FDQSx3QixDQUFBLGtCLENMMG9CSix5QixDQUNFLGUsQ0FDQSxnQixDSzFvQkUsd0IsQ0w0b0JGLHFCLENBQ0Esa0IsQ0QzQ0YsZ0MsQ00vbEJFLDRCLENBQ0Usd0IsQ0xpcEJKLDJDLENLOW9CSSxpUCxDTmltQkosNkMsQ005bEJFLDJLLENMbXBCRixrRCxDSy9vQkksMkgsQ0xtcEJKLCtDLENEaERBLDJILENDMERBLHNDLENBSUEsc0QsQ012ckJBLHFELENBQ0UsNFQsQ04wckJGLDhDLENEaERBLDJOLENBR0EsbUUsQ08xbkJFLDBWLENOK3FCRixPLENNNXFCRSxlLENOOHFCQSxrQixDQUdGLGdCLENPM3JCSSxZLENBQ0UsbUIsQ0FDQSxtQixDQUNBLFksQ1B3ckJOLGdCLENPdnNCRSw2QixDUnNwQkYsNEIsQ1FwcEJFLHNCLENBQ0Usa0IsQ0FDQSx3QixDQUNBLHFCLENBQ0EsNkIsQ0FDQSx3QixDQUNBLHFCLENBQ0Esa0IsQ0FHQSxZLENBSUUsa0IsQ0FDQSxjLENSc3BCTixRLENRcHBCTSwwQixDQUVFLHVCLENScXBCUixvQixDQUdBLFMsQ1Evb0JFLHFELENBQ0UsZ0IsQ0FBQSxlLENBQUEsVSxDUDJzQkosUyxDT3pzQkksaUIsQ1JtcEJKLFEsQ1E5b0JFLGMsQ0FDRSxnQixDQUNBLGUsQ0FDQSxrQixDUDRzQkosaUIsQ092c0JNLFksQ0FDQSw2QixDUmlwQk4sVSxDUTNvQkUsZSxDQUNFLFEsQ1B5c0JKLGEsQ0F1Q0Esc0IsQ0FEQSxvQyxDQXJDRSxlLENPcHNCQSxlLENBQ0Usc0IsQ0FDQSxtQixDQUNBLDBCLENBQ0EscUIsQ0FDQSxrQixDQUNBLGUsQ0FDQSx1QixDUjRvQkosYyxDQytEQSxTLENPcnNCSSxxQixDUHlzQkosYyxDT3JzQkksUyxDUHdzQkYsWSxDUXR4QkYsd0QsQ0FDQyxpQixDQUNBLFEsQ1J5eEJDLGtCLENTanhCRixnQixDQUNFLGMsQ1RxeEJBLGUsQ0Q3REYsZ0IsQ0MrREUsYSxDU3B4QkYsVSxDVDZ4QkEsOEIsQ0FDRSxlLENBR0YsWSxDQUNFLG1CLENBQ0EsbUIsQ0FDQSxZLENBQ0Esd0IsQ0FDQSxxQixDQUNBLGtCLENBQ0EsZSxDQUNBLHdCLENBQ0Esa0IsQ0FHRixlLENBQ0UsaUIsQ0FDQSxjLENBQ0EsNEIsQ0FHRixpQixDQUVFLGUsQ0FNRixjLENBQ0UsWSxDQUNBLDJDLENBQ0Esc0IsQ0FDQSxtQixDQUNBLHFCLENBQ0EsUSxDQUdGLFksQ0FVQSxZLENBM0JBLGlCLENBNEJFLGMsQ0FFQSxnQixDQUNBLGEsQ0FDQSxnQyxDQWZGLFksQ0FFRSxlLENBSUEsZSxDQUNBLGUsQ0FHRixZLENBRUUsZSxDQUlBLGUsQ0FDQSxjLENBR0YsWSxDQUNFLFUsQ0FDQSxXLENBQ0EsbUIsQ0FDQSxnQixDQUdGLEMsQ0FDRSw2QixDQUNBLHFCIiwiZmlsZSI6Im1haW4ubWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBjaGFyc2V0IFwiVVRGLThcIjtcbi8qISBub3JtYWxpemUuY3NzIHY4LjAuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cbiAqL1xuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cbiAqL1xuLyoqXG4gKiBSZW5kZXIgdGhlIGBtYWluYCBlbGVtZW50IGNvbnNpc3RlbnRseSBpbiBJRS5cbiAqL1xuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuLyoqXG4gKiBDb3JyZWN0IHRoZSBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXG4gKi9cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXG4gKi9cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cbi8qIEludGVyYWN0aXZlXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFIDEwKywgYW5kIEZpcmVmb3guXG4gKi9cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbi8qIE1pc2NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cbiAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC5cbiAqL1xuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG59XG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbm1haW4ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgaGVpZ2h0OiAwO1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICBmb250LXNpemU6IDFlbTtcbn1cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG59XG5cbmIge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG5jb2RlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICBmb250LXNpemU6IDFlbTtcbn1cblxua2JkIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICBmb250LXNpemU6IDFlbTtcbn1cblxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAxZW07XG59XG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbnN1YiB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgdG9wOiAtMC41ZW07XG59XG5cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuYnV0dG9uIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIG1hcmdpbjogMDtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBib3JkZXI6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG59XG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5idXR0b246LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbmlucHV0IHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIG1hcmdpbjogMDtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbm9wdGdyb3VwIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIG1hcmdpbjogMDtcbn1cblxuc2VsZWN0IHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIG1hcmdpbjogMDtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbnRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIG1hcmdpbjogMDtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cblt0eXBlPWJ1dHRvbl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbn1cblt0eXBlPWJ1dHRvbl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5bdHlwZT1idXR0b25dOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG5bdHlwZT1yZXNldF0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbn1cblt0eXBlPXJlc2V0XTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblt0eXBlPXJlc2V0XTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuW3R5cGU9c3VibWl0XSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xufVxuW3R5cGU9c3VibWl0XTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblt0eXBlPXN1Ym1pdF06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtO1xufVxuXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZGlzcGxheTogdGFibGU7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMDtcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbn1cblxucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cblt0eXBlPWNoZWNrYm94XSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHBhZGRpbmc6IDA7XG59XG5cblt0eXBlPXJhZGlvXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHBhZGRpbmc6IDA7XG59XG5cblt0eXBlPW51bWJlcl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5bdHlwZT1udW1iZXJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG5bdHlwZT1zZWFyY2hdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xufVxuW3R5cGU9c2VhcmNoXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblt0eXBlPXNlYXJjaF06Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIGZvbnQ6IGluaGVyaXQ7XG59XG5cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qXG5DVVNUT00gU0VUVElOR1NcbiovXG4qOjpiZWZvcmUsXG4qOjphZnRlciB7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgYm9yZGVyOiAwO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG51bCxcbm9sLFxubGkge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiSW50ZXJcIjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogMjAwO1xuICBzcmM6IHVybChcIi9mb250L0ludGVyLUV4dHJhTGlnaHQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIik7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJJbnRlclwiO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIHNyYzogdXJsKFwiL2ZvbnQvSW50ZXItUmVndWxhci53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIkludGVyXCI7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgc3JjOiB1cmwoXCIvZm9udC9JbnRlci1Cb2xkLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG4udmlzdWFsbHktaGlkZGVuIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDFweDtcbiAgbWFyZ2luOiAtMXB4O1xuICBwYWRkaW5nOiAwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBib3JkZXI6IDA7XG4gIGNsaXA6IHJlY3QoMCAwIDAgMCk7XG4gIGNsaXAtcGF0aDogaW5zZXQoMTAwJSk7XG59XG5cbi50aXRsZSB7XG4gIGZvbnQtc2l6ZTogNDBweDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbGluZS1oZWlnaHQ6IDQ4cHg7XG4gIGxldHRlci1zcGFjaW5nOiAwZW07XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi53cmFwcGVyIHtcbiAgbWF4LXdpZHRoOiAxNDQwcHg7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIHBhZGRpbmctbGVmdDogMTZweDtcbiAgcGFkZGluZy1yaWdodDogMTZweDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLmlzLWFjdGl2ZSB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGxldHRlci1zcGFjaW5nOiAwZW07XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbi5idG4tYXJyb3cge1xuICBkaXNwbGF5OiBmbGV4O1xuICB3aWR0aDogMTAwcHg7XG4gIGhlaWdodDogMTAwcHg7XG59XG4uYnRuLXdoaXRlIHtcbiAgZm9udC1zaXplOiA0MHB4O1xuICBmb250LXdlaWdodDogNzAwO1xuICBsaW5lLWhlaWdodDogNDhweDtcbn1cblxuLmZvcm0ge1xuICBtYXJnaW4tdG9wOiA4OHB4O1xufVxuLmZvcm1fX2ludHJvIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMywgMWZyKTtcbn1cbi5mb3JtX19pbnRybyBoMiB7XG4gIGdyaWQtY29sdW1uOiAyLzM7XG4gIGp1c3RpZnktc2VsZjogY2VudGVyO1xufVxuLmZvcm1fX2ludHJvIGJ1dHRvbiB7XG4gIGdyaWQtY29sdW1uOiAzLzQ7XG4gIGp1c3RpZnktc2VsZjogZW5kO1xuICBqdXN0aWZ5LWl0ZW1zOiBiYXNlbGluZTtcbn1cbi5mb3JtIGZvcm0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuLmZvcm0gZmllbGRzZXQge1xuICBtYXJnaW4tYm90dG9tOiAyNXB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJvcmRlcjogbm9uZTtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDYwcHggMWZyIDFmcjtcbiAgZ2FwOiA1MHB4O1xufVxuLmZvcm0gZmllbGRzZXQ6bm90KDpmaXJzdC1vZi10eXBlKSB7XG4gIG1hcmdpbi10b3A6IDI1cHg7XG59XG4uZm9ybSBmaWVsZHNldCBoNCB7XG4gIGdyaWQtY29sdW1uOiAyLzM7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgZm9udC13ZWlnaHQ6IDIwMDtcbiAgbGluZS1oZWlnaHQ6IDI5cHg7XG4gIHRleHQtYWxpZ246IGVuZDtcbiAgbWFyZ2luLXRvcDogOHB4O1xufVxuLmZvcm0gZmllbGRzZXQgcCB7XG4gIG1hcmdpbi10b3A6IDhweDtcbiAganVzdGlmeS1zZWxmOiBjZW50ZXI7XG59XG4uZm9ybV9fc3RhZ2Uge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDJmciA1ZnI7XG59XG4uZm9ybV9fc3RhZ2UgaDMge1xuICBncmlkLWNvbHVtbjogMS8yO1xuICBncmlkLXJvdzogMS8yO1xufVxuLmZvcm1fX3N0YWdlIHNtYWxsIHtcbiAgZ3JpZC1jb2x1bW46IDEvMjtcbiAgZ3JpZC1yb3c6IDIvMztcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogMTdweDtcbn1cblxuLmZvcm1fX2xpc3Qge1xuICBncmlkLWNvbHVtbjogNC8tMTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgZ2FwOiA4cHg7XG4gIHdpZHRoOiBmaXQtY29udGVudDtcbn1cbi5mb3JtX19saXN0IGxhYmVsIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogYmFzZWxpbmU7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC13ZWlnaHQ6IDIwMDtcbiAgbGluZS1oZWlnaHQ6IDE5cHg7XG59XG4uZm9ybV9fbGlzdCBsYWJlbCAuZm9ybV9fdG9vbHRpcCB7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgd2lkdGg6IDE5N3B4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICBib3gtc2hhZG93OiA2cHggNnB4IDE2cHggOHB4IHJnYmEoMTc0LCAxNzQsIDE5MiwgMC4zNSk7XG4gIHRleHQtYWxpZ246IGluaXRpYWw7XG4gIHBhZGRpbmc6IDIycHggMTRweDtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDE3NSwgMTg1LCAxOTMsIDAuNjkpO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDE7XG4gIHRvcDogLTVweDtcbiAgbGVmdDogMTA1JTtcbiAgZm9udC1zaXplOiAxMHB4O1xuICBmb250LXdlaWdodDogMjAwO1xuICBsaW5lLWhlaWdodDogMTJweDtcbiAgY29sb3I6ICMwZTBlMGU7XG59XG4uZm9ybV9fbGlzdCBsYWJlbDpob3ZlciAuZm9ybV9fdG9vbHRpcCB7XG4gIHZpc2liaWxpdHk6IHZpc2libGU7XG59XG4uZm9ybV9fbGlzdCBpbnB1dCB7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbn1cblxuLmZvcm1fX2J1dHRvbnMge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCAxZnIpO1xufVxuLmZvcm1fX2J1dHRvbnMgLmJ0bi13aGl0ZSB7XG4gIGdyaWQtY29sdW1uOiAyLzM7XG4gIGJvcmRlcjogM3B4IHNvbGlkICMwZTBlMGU7XG4gIGJvcmRlci1yYWRpdXM6IDYwcHg7XG59XG4uZm9ybV9fYnV0dG9ucyAuYnRuLWFycm93IHtcbiAgZ3JpZC1jb2x1bW46IDMvNDtcbiAganVzdGlmeS1zZWxmOiBlbmQ7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XG59XG5cbi8qINCS0JjQlCDQoNCQ0JfQoNCQ0JHQntCi0JrQmCAqL1xuLmZvcm1fX2xhYmVsLWJyYW5kaW5nIC5mb3JtX190b29sdGlwOjphZnRlciB7XG4gIGNvbnRlbnQ6IFwi0JjQt9GD0YfQtdC90LjQtSDQsdGA0LXQvdC00LAg0LTQu9GPwqDRgNC10YjQtdC90LjRjyDQutC+0L3QutGA0LXRgtC90YvRhSDQvNCw0YDQutC10YLQuNC90LPQvtCy0YvRhSDQt9Cw0LTQsNGHLCDQssKg0YLQvtC8wqDRh9C40YHQu9C1INC/0L7QstGL0YjQtdC90LjQtSDQutC+0L3QutGD0YDQtdC90YLQvdC+0YHQv9C+0YHQvtCx0L3QvtGB0YLQuCwg0YTQvtGA0LzQuNGA0L7QstCw0L3QuNC1INGD0L3QuNC60LDQu9GM0L3QvtCz0L4g0L7QsdGA0LDQt9CwLCDQv9C+0LLRi9GI0LXQvdC40LUg0YHQuNC80L/QsNGC0LjQuCDQv9C+0YLRgNC10LHQuNGC0LXQu9C10LksINCwwqDRgtCw0LrQttC1INC30LDQutGA0LXQv9C70LXQvdC40LUg0LjCoNC00LDQu9GM0L3QtdC50YjQtdC1INGA0LDQt9Cy0LjRgtC40LUg0L/QvtC30LjRhtC40Lgg0L3QsMKg0YDRi9C90LrQtS5cIjtcbn1cblxuLmZvcm1fX2xhYmVsLXJlYnJhbmRpbmcgLmZvcm1fX3Rvb2x0aXA6OmFmdGVyIHtcbiAgY29udGVudDogXCLQntCx0L3QvtCy0LvQtdC90LjQtSDRg9C20LXCoNC40LzQtdGO0YnQuNGF0YHRjyDQutC+0L3RhtC10L/RgtC+0LIg0LjCoNGA0LXQsNC70LjQt9C+0LLQsNC90L3Ri9GFINC40LTQtdC5INC90LDCoNC+0YHQvdC+0LLQtSDQv9C+0LvRg9GH0LXQvdC90L7Qs9C+INC+0L/Ri9GC0LAg0LrQvtC80L/QsNC90LjQuCDQvdCwwqDRgNGL0L3QutC1LCDQssKg0YLQvtC8wqDRh9C40YHQu9C1INC4wqDQv9C+0LvQvdC+0LUg0YDQtdC60L7QvdGB0YLRgNGD0LrRhtC40Y8g0L7QsdGA0LDQt9CwINC60L7QvNC/0LDQvdC40Lgg0YHCoNC90YPQu9GPLlwiO1xufVxuXG4uZm9ybV9fbGFiZWwtcmV0YWlsLWJyYW5kaW5nIC5mb3JtX190b29sdGlwOjphZnRlciB7XG4gIGNvbnRlbnQ6IFwi0J/RgNC+0LXQutGC0LjRgNC+0LLQsNC90LjQtSDQuMKg0L7Qv9GC0LjQvNC40LfQsNGG0LjRjyDRgtC+0YDQs9C+0LLQvtCz0L4g0L/RgNC+0YHRgtGA0LDQvdGB0YLQstCwLCDRgNCw0LfQstC40YLQuNC1INC60LDRh9C10YHRgtCy0LAg0LLQt9Cw0LjQvNC+0LTQtdC50YHRgtCy0LjRjyDRgtC+0YDQs9C+0LLRi9GFINGC0L7Rh9C10Log0YHCoNC60LvQuNC10L3RgtCw0LzQuC5cIjtcbn1cblxuLmZvcm1fX2xhYmVsLWxvY2FsaXphdGlvbiAuZm9ybV9fdG9vbHRpcDo6YWZ0ZXIge1xuICBjb250ZW50OiBcItCf0LXRgNC10LLQvtC0INC4INCw0LTQsNC/0YLQuNGA0L7QstCw0L3QuNC1INC40L3QvtGB0YLRgNCw0L3QvdC+0Lkg0L/RgNC+0LTRg9C60YbQuNC4INC/0L7QtCDQoNC+0YHRgdC40LnRgdC60LjQuSDRgdC10LPQvNC10L3RgiAo0LIg0YLQvtC8INGH0LjRgdC70LUg0L/QviDQv9GA0L7Qs9GA0LDQvNC80LUg0LjQvNC/0L7RgNGC0L7Qt9Cw0LzQtdGJ0LXQvdC40Y8pLlwiO1xufVxuXG4vKiDQmNCh0KHQm9CV0JTQntCS0JDQndCY0JUgKi9cbi5mb3JtX19sYWJlbC1tYXJrZXRpbmctYW5hbHlzaXMgLmZvcm1fX3Rvb2x0aXA6OmFmdGVyIHtcbiAgY29udGVudDogXCLQn9GA0L7QstC+0LTQuNGC0YHRjyDQv9C+0LvQvdGL0Lkg0LDQvdCw0LvQuNC3INCy0LfQsNC40LzQvtC00LXQudGB0YLQstC40Y8g0LzQtdC20LTRg8Kg0LHRgNC10L3QtNC+0Lwg0LjCoNC60LvQuNC10L3RgtC+0LwsINC90LDQv9GA0Y/QvNGD0Y4g0LLQu9C40Y/RjtGJ0LjQuSDQvdCwwqDRg9GA0L7QstC10L3RjCDQutC70LjQtdC90YLRgdC60L7Qs9C+INC+0L/Ri9GC0LAuINCS0LrQu9GO0YfQsNC10YIg0LLCoNGB0LXQsdGPINCy0LXRgdGMINC/0YPRgtGMINC60LvQuNC10L3RgtCwINC+0YLCoNC/0L7RgtGA0LXQsdC90L7RgdGC0Lgg0LTQvsKg0YDQtdC30YPQu9GM0YLQsNGC0LAgKGN1c3RvbWVyIGpvdXJuZXkpLCDQstGB0LXCoNGC0L7Rh9C60Lgg0LrQvtC90YLQsNC60YLQsCDQutC70LjQtdC90YLQsCDRgcKg0LHRgNC10L3QtNC+0LwgKGJyYW5kIHRvdWNocG9pbnRzKSwg0LDCoNGC0LDQutC20LUg0L7QutGA0YPQttC10L3QuNC1INC/0YDQuMKg0LLQt9Cw0LjQvNC+0LTQtdC50YHRgtCy0LjQuCAoZW52aXJvbm1lbnQpLlwiO1xufVxuXG4uZm9ybV9fbGFiZWwtY2ptIC5mb3JtX190b29sdGlwOjphZnRlciB7XG4gIGNvbnRlbnQ6IFwi0J/RgNC+0LLQvtC00LjRgtGB0Y8g0L/QvtC70L3Ri9C5INCw0L3QsNC70LjQtyDQstC30LDQuNC80L7QtNC10LnRgdGC0LLQuNGPINC80LXQttC00YPCoNCx0YDQtdC90LTQvtC8INC4wqDQutC70LjQtdC90YLQvtC8LCDQvdCw0L/RgNGP0LzRg9GOINCy0LvQuNGP0Y7RidC40Lkg0L3QsMKg0YPRgNC+0LLQtdC90Ywg0LrQu9C40LXQvdGC0YHQutC+0LPQviDQvtC/0YvRgtCwLiDQktC60LvRjtGH0LDQtdGCINCywqDRgdC10LHRjyDQstC10YHRjCDQv9GD0YLRjCDQutC70LjQtdC90YLQsCDQvtGCwqDQv9C+0YLRgNC10LHQvdC+0YHRgtC4INC00L7CoNGA0LXQt9GD0LvRjNGC0LDRgtCwIChjdXN0b21lciBqb3VybmV5KSwg0LLRgdC1wqDRgtC+0YfQutC4INC60L7QvdGC0LDQutGC0LAg0LrQu9C40LXQvdGC0LAg0YHCoNCx0YDQtdC90LTQvtC8IChicmFuZCB0b3VjaHBvaW50cyksINCwwqDRgtCw0LrQttC1INC+0LrRgNGD0LbQtdC90LjQtSDQv9GA0LjCoNCy0LfQsNC40LzQvtC00LXQudGB0YLQstC40LggKGVudmlyb25tZW50KS5cIjtcbn1cblxuLmZvcm1fX2xhYmVsLWN1c3RvbWVyLWV4cGVyaWVuY2UgLmZvcm1fX3Rvb2x0aXA6OmFmdGVyIHtcbiAgY29udGVudDogXCLQn9GA0L7QstC+0LTQuNGC0YHRjyDQv9C+0LvQvdGL0Lkg0LDQvdCw0LvQuNC3INCy0LfQsNC40LzQvtC00LXQudGB0YLQstC40Y8g0LzQtdC20LTRg8Kg0LHRgNC10L3QtNC+0Lwg0LjCoNC60LvQuNC10L3RgtC+0LwsINC90LDQv9GA0Y/QvNGD0Y4g0LLQu9C40Y/RjtGJ0LjQuSDQvdCwwqDRg9GA0L7QstC10L3RjCDQutC70LjQtdC90YLRgdC60L7Qs9C+INC+0L/Ri9GC0LAuINCS0LrQu9GO0YfQsNC10YIg0LLCoNGB0LXQsdGPINCy0LXRgdGMINC/0YPRgtGMINC60LvQuNC10L3RgtCwINC+0YLCoNC/0L7RgtGA0LXQsdC90L7RgdGC0Lgg0LTQvsKg0YDQtdC30YPQu9GM0YLQsNGC0LAgKGN1c3RvbWVyIGpvdXJuZXkpLCDQstGB0LXCoNGC0L7Rh9C60Lgg0LrQvtC90YLQsNC60YLQsCDQutC70LjQtdC90YLQsCDRgcKg0LHRgNC10L3QtNC+0LwgKGJyYW5kIHRvdWNocG9pbnRzKSwg0LDCoNGC0LDQutC20LUg0L7QutGA0YPQttC10L3QuNC1INC/0YDQuMKg0LLQt9Cw0LjQvNC+0LTQtdC50YHRgtCy0LjQuCAoZW52aXJvbm1lbnQpLlwiO1xufVxuXG4uZm9ybV9fbGFiZWwtYnJhbmQtYXVkaXQgLmZvcm1fX3Rvb2x0aXA6OmFmdGVyIHtcbiAgY29udGVudDogXCLQkNGD0LTQuNGCINCx0YDQtdC90LTQsMKg4oCUINC+0LTQuNC9INC40LfCoNGB0LDQvNGL0YUg0L3QsNC00ZHQttC90YvRhSDQvNC10YLQvtC00L7QsiDQsNC90LDQu9C40LfQsCDRgdC+0YHRgtCw0LLQu9GP0Y7RidC40YUg0LHRgNC10L3QtNCwLCDQsMKg0LjQvNC10L3QvdC+OiDQtdCz0L7CoNC60L7QvdC60YPRgNC10L3RgtC+0YHQv9C+0YHQvtCx0L3QvtGB0YLQuCwg0YLQtdC60YPRidC10LPQviDQv9C+0LvQvtC20LXQvdC40Y8g0LHRgNC10L3QtNCwINC90LDCoNGA0YvQvdC60LUsINCy0LrQu9GO0YfQsNGPINC40YHRgdC70LXQtNC+0LLQsNC90LjQtSDQv9C+0YLQtdC90YbQuNCw0LvQsCDQtNC70Y/CoNC10LPQvsKg0LTQsNC70YzQvdC10LnRiNC10LPQviDRgNCw0LfQstC40YLQuNGPLlwiO1xufVxuXG4uZm9ybV9fbGFiZWwtc3RydWN0dXJpbmctb2YtdGhlLXJlY2VpdmVkLWRhdGEgLmZvcm1fX3Rvb2x0aXA6OmFmdGVyIHtcbiAgY29udGVudDogXCLQktGB0LXCoNC/0L7Qu9GD0YfQtdC90L3Ri9C1INC00LDQvdC90YvQtSDQt9Cw0YLQtdC8INGB0YLRgNGD0LrRgtGD0YDQuNGA0YPRjtGC0YHRjyDQtNC70Y/CoNC/0L7QtNCx0L7RgNCwINC+0L/RgtC40LzQsNC70YzQvdC+0Lkg0YHRgtGA0LDRgtC10LPQuNC4INC/0L7Qt9C40YbQuNC+0L3QuNGA0L7QstCw0L3QuNGPLCDRgdC10LPQvNC10L3RgtC40YDQvtCy0LDQvdC40Y8g0LrQu9GO0YfQtdCy0YvRhSDQs9GA0YPQv9C/INGG0LXQu9C10LLQvtC5INCw0YPQtNC40YLQvtGA0LjQuCwg0LLRi9GP0LLQu9C10L3QuNC4INGB0LjQu9GM0L3Ri9GFINC4wqDRgdC70LDQsdGL0YUg0YHRgtC+0YDQvtC9INC/0L7Qt9C40YbQuNC+0L3QuNGA0L7QstCw0L3QuNGPINCx0YDQtdC90LTQsCDQvtGC0L3QvtGB0LjRgtC10LvRjNC90L4g0LrQvtC90LrRg9GA0LXQvdGC0L7Qsi4g0JzRi8Kg0LjRgdC/0L7Qu9GM0LfRg9C10Lwg0YHQvtCx0YHRgtCy0LXQvdC90YvQtSDQuMKg0LzQtdC20LTRg9C90LDRgNC+0LTQvdGL0LUg0LzQtdGC0L7QtNC40LrQuCDQuNC30YPRh9C10L3QuNGPINCx0YDQtdC90LTQvtCyLCDQv9GA0LjQvNC10L3Rj9GPINGB0LDQvNGL0LUg0YDQtdC30YPQu9GM0YLQsNGC0LjQstC90YvQtSDQvNC+0LTQtdC70LguXCI7XG59XG5cbi5oZWFkZXIge1xuICBtYXJnaW4tdG9wOiAyN3B4O1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuLmhlYWRlciAud3JhcHBlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5oZWFkZXJfX25hdiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgZ2FwOiA1MHB4O1xuICBhbGlnbi1pdGVtczogYmFzZWxpbmU7XG59XG4uaGVhZGVyIGEge1xuICBmb250LWZhbWlseTogXCJJbnRlclwiLCBcIk1TIFNhbnMgU2VyaWZcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXdlaWdodDogMjAwO1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgbGV0dGVyLXNwYWNpbmc6IDBlbTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgY29sb3I6IHJnYigwLCAwLCAwKTtcbn1cbi5oZWFkZXIgcCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnByZWZvcm0ge1xuICBmb250LXNpemU6IDQwcHg7XG4gIGxpbmUtaGVpZ2h0OiA0OHB4O1xuICBtYXJnaW4tdG9wOiA4OHB4O1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuLnByZWZvcm0gLndyYXBwZXIge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDNmciAxZnI7XG59XG4ucHJlZm9ybSBwIHtcbiAgZm9udC13ZWlnaHQ6IDIwMDtcbiAgbWFyZ2luOiAwO1xufVxuLnByZWZvcm0gc3BhbiB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG4ucHJlZm9ybSBidXR0b24ge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWl0ZW1zOiBlbmQ7XG4gIGFsaWduLXNlbGY6IGVuZDtcbn1cblxuLnByb2plY3RzIHtcbiAgLS1tdC1pbnNpZGUtY2FyZDogMTBweDtcbn1cbi5wcm9qZWN0c19fbmF2IHtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDEwMHB4LCAxZnIpKTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBnYXA6IDUwcHg7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIG1hcmdpbi1ib3R0b206IDUwcHg7XG59XG4ucHJvamVjdHNfX25hdiBhIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXdlaWdodDogMjAwO1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICMwZTBlMGU7XG4gIHdpZHRoOiAxMDAlO1xufVxuLnByb2plY3RzX19uYXYgYVthcmlhLXNlbGVjdGVkPXRydWVdLCAucHJvamVjdHNfX25hdiBhOmhvdmVyIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cbi5wcm9qZWN0c19fbmF2IGE6Zm9jdXMtdmlzaWJsZSB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG4ucHJvamVjdHMgbGkge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtaW4taGVpZ2h0OiAzMHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjMGUwZTBlO1xuICBib3JkZXItcmFkaXVzOiA4NHB4O1xufVxuLnByb2plY3RzX19jYXJkIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nOiA2MHB4IDA7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjMGUwZTBlO1xufVxuLnByb2plY3RzX19jYXJkIHAge1xuICBmb250LXNpemU6IDI0cHg7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGxpbmUtaGVpZ2h0OiAyOXB4O1xuICBjb2xvcjogIzBlMGUwZTtcbiAgbWFyZ2luLXRvcDogdmFyKC0tbXQtaW5zaWRlLWNhcmQpO1xufVxuLnByb2plY3RzX19jdGEge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDIwMHB4IDUwcHggYXV0byAyMDBweDtcbiAganVzdGlmeS1jb250ZW50OiBzdGFydDtcbiAgZ2FwOiA0NXB4O1xufVxuLnByb2plY3RzIGgzIHtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBmb250LXdlaWdodDogNzAwO1xuICBsaW5lLWhlaWdodDogMjlweDtcbiAgY29sb3I6ICMwZTBlMGU7XG4gIG1hcmdpbi10b3A6IHZhcigtLW10LWluc2lkZS1jYXJkKTtcbiAgbWF4LXdpZHRoOiAyMDBweDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cbi5wcm9qZWN0cyBoNCB7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgZm9udC13ZWlnaHQ6IDIwMDtcbiAgbGluZS1oZWlnaHQ6IDI5cHg7XG4gIGNvbG9yOiAjMGUwZTBlO1xuICBtYXJnaW4tdG9wOiB2YXIoLS1tdC1pbnNpZGUtY2FyZCk7XG4gIG1heC13aWR0aDogMTgwcHg7XG4gIHRleHQtYWxpZ246IGVuZDtcbn1cblxuLnZpZGVvX19pdGVtIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG59XG5cbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5ib2R5IHtcbiAgZm9udC1zaXplOiAyMXB4O1xuICBmb250LWZhbWlseTogXCJJbnRlclwiLCBcIk1TIFNhbnMgU2VyaWZcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDIwMDtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbn0iLCJAY2hhcnNldCBcIlVURi04XCI7XG5cbi8qISBub3JtYWxpemUuY3NzIHY4LjAuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXG4gKi9cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbi8qKlxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXG4gKi9cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuXG4vKipcbiAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbi8qKlxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxuICovXG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXG4gKi9cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFIDEwKywgYW5kIEZpcmVmb3guXG4gKi9cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cbiAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxuICovXG5cbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xufVxuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG5tYWluIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbmhyIHtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGhlaWdodDogMDtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbnByZSB7XG4gIGZvbnQ6IDFlbSBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbn1cblxuYSB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xufVxuXG5iIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuY29kZSB7XG4gIGZvbnQ6IDFlbSBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbn1cblxua2JkIHtcbiAgZm9udDogMWVtIG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xufVxuXG5zYW1wIHtcbiAgZm9udDogMWVtIG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xufVxuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG5zdWIge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gIHRvcDogLTAuNWVtO1xufVxuXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbmJ1dHRvbiB7XG4gIGZvbnQ6IDEwMCUvMS4xNSBpbmhlcml0O1xuICBtYXJnaW46IDA7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYm9yZGVyOiBub25lO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xufVxuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuaW5wdXQge1xuICBmb250OiAxMDAlLzEuMTUgaW5oZXJpdDtcbiAgbWFyZ2luOiAwO1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxub3B0Z3JvdXAge1xuICBmb250OiAxMDAlLzEuMTUgaW5oZXJpdDtcbiAgbWFyZ2luOiAwO1xufVxuXG5zZWxlY3Qge1xuICBmb250OiAxMDAlLzEuMTUgaW5oZXJpdDtcbiAgbWFyZ2luOiAwO1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxudGV4dGFyZWEge1xuICBmb250OiAxMDAlLzEuMTUgaW5oZXJpdDtcbiAgbWFyZ2luOiAwO1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuW3R5cGU9YnV0dG9uXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xufVxuXG5bdHlwZT1idXR0b25dOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG5bdHlwZT1idXR0b25dOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG5bdHlwZT1yZXNldF0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbn1cblxuW3R5cGU9cmVzZXRdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG5bdHlwZT1yZXNldF06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cblt0eXBlPXN1Ym1pdF0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbn1cblxuW3R5cGU9c3VibWl0XTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuW3R5cGU9c3VibWl0XTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07XG59XG5cbmxlZ2VuZCB7XG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDA7XG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG59XG5cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5bdHlwZT1jaGVja2JveF0ge1xuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHBhZGRpbmc6IDA7XG59XG5cblt0eXBlPXJhZGlvXSB7XG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgcGFkZGluZzogMDtcbn1cblxuW3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuW3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuW3R5cGU9c2VhcmNoXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbn1cblxuW3R5cGU9c2VhcmNoXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuW3R5cGU9c2VhcmNoXTo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgZm9udDogaW5oZXJpdDtcbn1cblxuZGV0YWlscyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xufVxuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLypcbkNVU1RPTSBTRVRUSU5HU1xuKi9cblxuKjo6YmVmb3JlLFxuKjo6YWZ0ZXIge1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGJvcmRlcjogMDtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG51bCxcbm9sLFxubGkge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiSW50ZXJcIjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogMjAwO1xuICBzcmM6IHVybChcIi9mb250L0ludGVyLUV4dHJhTGlnaHQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIik7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIkludGVyXCI7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgc3JjOiB1cmwoXCIvZm9udC9JbnRlci1SZWd1bGFyLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJJbnRlclwiO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIHNyYzogdXJsKFwiL2ZvbnQvSW50ZXItQm9sZC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuXG4udmlzdWFsbHktaGlkZGVuIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDFweDtcbiAgbWFyZ2luOiAtMXB4O1xuICBwYWRkaW5nOiAwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBib3JkZXI6IDA7XG4gIGNsaXA6IHJlY3QoMCAwIDAgMCk7XG4gIC13ZWJraXQtY2xpcC1wYXRoOiBpbnNldCgxMDAlKTtcbiAgY2xpcC1wYXRoOiBpbnNldCgxMDAlKTtcbn1cblxuLnRpdGxlIHtcbiAgZm9udC1zaXplOiA0MHB4O1xuICBmb250LXdlaWdodDogNzAwO1xuICBsaW5lLWhlaWdodDogNDhweDtcbiAgbGV0dGVyLXNwYWNpbmc6IDBlbTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgbWFyZ2luLXRvcDogMDtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLndyYXBwZXIge1xuICBtYXgtd2lkdGg6IDE0NDBweDtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgcGFkZGluZy1sZWZ0OiAxNnB4O1xuICBwYWRkaW5nLXJpZ2h0OiAxNnB4O1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLmlzLWFjdGl2ZSB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGxldHRlci1zcGFjaW5nOiAwZW07XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbi5idG4tYXJyb3cge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHdpZHRoOiAxMDBweDtcbiAgaGVpZ2h0OiAxMDBweDtcbn1cblxuLmJ0bi13aGl0ZSB7XG4gIGZvbnQtc2l6ZTogNDBweDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbGluZS1oZWlnaHQ6IDQ4cHg7XG59XG5cbi5mb3JtIHtcbiAgbWFyZ2luLXRvcDogODhweDtcbn1cblxuLmZvcm1fX2ludHJvIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMywgMWZyKTtcbn1cblxuLmZvcm1fX2ludHJvIGgyIHtcbiAgZ3JpZC1jb2x1bW46IDIvMztcbiAganVzdGlmeS1zZWxmOiBjZW50ZXI7XG59XG5cbi5mb3JtX19pbnRybyBidXR0b24ge1xuICBncmlkLWNvbHVtbjogMy80O1xuICBqdXN0aWZ5LXNlbGY6IGVuZDtcbiAganVzdGlmeS1pdGVtczogYmFzZWxpbmU7XG59XG5cbi5mb3JtIGZvcm0ge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLmZvcm0gZmllbGRzZXQge1xuICBtYXJnaW4tYm90dG9tOiAyNXB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJvcmRlcjogbm9uZTtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDYwcHggMWZyIDFmcjtcbiAgZ2FwOiA1MHB4O1xufVxuXG4uZm9ybSBmaWVsZHNldDpub3QoOmZpcnN0LW9mLXR5cGUpIHtcbiAgbWFyZ2luLXRvcDogMjVweDtcbn1cblxuLmZvcm0gZmllbGRzZXQgaDQge1xuICBncmlkLWNvbHVtbjogMi8zO1xuICBmb250LXNpemU6IDI0cHg7XG4gIGZvbnQtd2VpZ2h0OiAyMDA7XG4gIGxpbmUtaGVpZ2h0OiAyOXB4O1xuICB0ZXh0LWFsaWduOiBlbmQ7XG4gIG1hcmdpbi10b3A6IDhweDtcbn1cblxuLmZvcm0gZmllbGRzZXQgcCB7XG4gIG1hcmdpbi10b3A6IDhweDtcbiAganVzdGlmeS1zZWxmOiBjZW50ZXI7XG59XG5cbi5mb3JtX19zdGFnZSB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMmZyIDVmcjtcbn1cblxuLmZvcm1fX3N0YWdlIGgzIHtcbiAgZ3JpZC1jb2x1bW46IDEvMjtcbiAgZ3JpZC1yb3c6IDEvMjtcbn1cblxuLmZvcm1fX3N0YWdlIHNtYWxsIHtcbiAgZ3JpZC1jb2x1bW46IDEvMjtcbiAgZ3JpZC1yb3c6IDIvMztcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogMTdweDtcbn1cblxuLmZvcm1fX2xpc3Qge1xuICBncmlkLWNvbHVtbjogNC8tMTtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGdhcDogOHB4O1xuICB3aWR0aDogLXdlYmtpdC1maXQtY29udGVudDtcbiAgd2lkdGg6IC1tb3otZml0LWNvbnRlbnQ7XG4gIHdpZHRoOiBmaXQtY29udGVudDtcbn1cblxuLmZvcm1fX2xpc3QgbGFiZWwge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGJhc2VsaW5lO1xuICAtbXMtZmxleC1hbGlnbjogYmFzZWxpbmU7XG4gIGFsaWduLWl0ZW1zOiBiYXNlbGluZTtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXdlaWdodDogMjAwO1xuICBsaW5lLWhlaWdodDogMTlweDtcbn1cblxuLmZvcm1fX2xpc3QgbGFiZWwgLmZvcm1fX3Rvb2x0aXAge1xuICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIHdpZHRoOiAxOTdweDtcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiA2cHggNnB4IDE2cHggOHB4IHJnYmEoMTc0LCAxNzQsIDE5MiwgMC4zNSk7XG4gIGJveC1zaGFkb3c6IDZweCA2cHggMTZweCA4cHggcmdiYSgxNzQsIDE3NCwgMTkyLCAwLjM1KTtcbiAgdGV4dC1hbGlnbjogaW5pdGlhbDtcbiAgcGFkZGluZzogMjJweCAxNHB4O1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMTc1LCAxODUsIDE5MywgMC42OSk7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMTtcbiAgdG9wOiAtNXB4O1xuICBsZWZ0OiAxMDUlO1xuICBmb250LXNpemU6IDEwcHg7XG4gIGZvbnQtd2VpZ2h0OiAyMDA7XG4gIGxpbmUtaGVpZ2h0OiAxMnB4O1xuICBjb2xvcjogIzBlMGUwZTtcbn1cblxuLmZvcm1fX2xpc3QgbGFiZWw6aG92ZXIgLmZvcm1fX3Rvb2x0aXAge1xuICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xufVxuXG4uZm9ybV9fbGlzdCBpbnB1dCB7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbn1cblxuLmZvcm1fX2J1dHRvbnMge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCAxZnIpO1xufVxuXG4uZm9ybV9fYnV0dG9ucyAuYnRuLXdoaXRlIHtcbiAgZ3JpZC1jb2x1bW46IDIvMztcbiAgYm9yZGVyOiAzcHggc29saWQgIzBlMGUwZTtcbiAgYm9yZGVyLXJhZGl1czogNjBweDtcbn1cblxuLmZvcm1fX2J1dHRvbnMgLmJ0bi1hcnJvdyB7XG4gIGdyaWQtY29sdW1uOiAzLzQ7XG4gIGp1c3RpZnktc2VsZjogZW5kO1xuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XG4gIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xufVxuXG4vKiDQktCY0JQg0KDQkNCX0KDQkNCR0J7QotCa0JggKi9cblxuLmZvcm1fX2xhYmVsLWJyYW5kaW5nIC5mb3JtX190b29sdGlwOjphZnRlciB7XG4gIGNvbnRlbnQ6IFwi0JjQt9GD0YfQtdC90LjQtSDQsdGA0LXQvdC00LAg0LTQu9GPwqDRgNC10YjQtdC90LjRjyDQutC+0L3QutGA0LXRgtC90YvRhSDQvNCw0YDQutC10YLQuNC90LPQvtCy0YvRhSDQt9Cw0LTQsNGHLCDQssKg0YLQvtC8wqDRh9C40YHQu9C1INC/0L7QstGL0YjQtdC90LjQtSDQutC+0L3QutGD0YDQtdC90YLQvdC+0YHQv9C+0YHQvtCx0L3QvtGB0YLQuCwg0YTQvtGA0LzQuNGA0L7QstCw0L3QuNC1INGD0L3QuNC60LDQu9GM0L3QvtCz0L4g0L7QsdGA0LDQt9CwLCDQv9C+0LLRi9GI0LXQvdC40LUg0YHQuNC80L/QsNGC0LjQuCDQv9C+0YLRgNC10LHQuNGC0LXQu9C10LksINCwwqDRgtCw0LrQttC1INC30LDQutGA0LXQv9C70LXQvdC40LUg0LjCoNC00LDQu9GM0L3QtdC50YjQtdC1INGA0LDQt9Cy0LjRgtC40LUg0L/QvtC30LjRhtC40Lgg0L3QsMKg0YDRi9C90LrQtS5cIjtcbn1cblxuLmZvcm1fX2xhYmVsLXJlYnJhbmRpbmcgLmZvcm1fX3Rvb2x0aXA6OmFmdGVyIHtcbiAgY29udGVudDogXCLQntCx0L3QvtCy0LvQtdC90LjQtSDRg9C20LXCoNC40LzQtdGO0YnQuNGF0YHRjyDQutC+0L3RhtC10L/RgtC+0LIg0LjCoNGA0LXQsNC70LjQt9C+0LLQsNC90L3Ri9GFINC40LTQtdC5INC90LDCoNC+0YHQvdC+0LLQtSDQv9C+0LvRg9GH0LXQvdC90L7Qs9C+INC+0L/Ri9GC0LAg0LrQvtC80L/QsNC90LjQuCDQvdCwwqDRgNGL0L3QutC1LCDQssKg0YLQvtC8wqDRh9C40YHQu9C1INC4wqDQv9C+0LvQvdC+0LUg0YDQtdC60L7QvdGB0YLRgNGD0LrRhtC40Y8g0L7QsdGA0LDQt9CwINC60L7QvNC/0LDQvdC40Lgg0YHCoNC90YPQu9GPLlwiO1xufVxuXG4uZm9ybV9fbGFiZWwtcmV0YWlsLWJyYW5kaW5nIC5mb3JtX190b29sdGlwOjphZnRlciB7XG4gIGNvbnRlbnQ6IFwi0J/RgNC+0LXQutGC0LjRgNC+0LLQsNC90LjQtSDQuMKg0L7Qv9GC0LjQvNC40LfQsNGG0LjRjyDRgtC+0YDQs9C+0LLQvtCz0L4g0L/RgNC+0YHRgtGA0LDQvdGB0YLQstCwLCDRgNCw0LfQstC40YLQuNC1INC60LDRh9C10YHRgtCy0LAg0LLQt9Cw0LjQvNC+0LTQtdC50YHRgtCy0LjRjyDRgtC+0YDQs9C+0LLRi9GFINGC0L7Rh9C10Log0YHCoNC60LvQuNC10L3RgtCw0LzQuC5cIjtcbn1cblxuLmZvcm1fX2xhYmVsLWxvY2FsaXphdGlvbiAuZm9ybV9fdG9vbHRpcDo6YWZ0ZXIge1xuICBjb250ZW50OiBcItCf0LXRgNC10LLQvtC0INC4INCw0LTQsNC/0YLQuNGA0L7QstCw0L3QuNC1INC40L3QvtGB0YLRgNCw0L3QvdC+0Lkg0L/RgNC+0LTRg9C60YbQuNC4INC/0L7QtCDQoNC+0YHRgdC40LnRgdC60LjQuSDRgdC10LPQvNC10L3RgiAo0LIg0YLQvtC8INGH0LjRgdC70LUg0L/QviDQv9GA0L7Qs9GA0LDQvNC80LUg0LjQvNC/0L7RgNGC0L7Qt9Cw0LzQtdGJ0LXQvdC40Y8pLlwiO1xufVxuXG4vKiDQmNCh0KHQm9CV0JTQntCS0JDQndCY0JUgKi9cblxuLmZvcm1fX2xhYmVsLW1hcmtldGluZy1hbmFseXNpcyAuZm9ybV9fdG9vbHRpcDo6YWZ0ZXIge1xuICBjb250ZW50OiBcItCf0YDQvtCy0L7QtNC40YLRgdGPINC/0L7Qu9C90YvQuSDQsNC90LDQu9C40Lcg0LLQt9Cw0LjQvNC+0LTQtdC50YHRgtCy0LjRjyDQvNC10LbQtNGDwqDQsdGA0LXQvdC00L7QvCDQuMKg0LrQu9C40LXQvdGC0L7QvCwg0L3QsNC/0YDRj9C80YPRjiDQstC70LjRj9GO0YnQuNC5INC90LDCoNGD0YDQvtCy0LXQvdGMINC60LvQuNC10L3RgtGB0LrQvtCz0L4g0L7Qv9GL0YLQsC4g0JLQutC70Y7Rh9Cw0LXRgiDQssKg0YHQtdCx0Y8g0LLQtdGB0Ywg0L/Rg9GC0Ywg0LrQu9C40LXQvdGC0LAg0L7RgsKg0L/QvtGC0YDQtdCx0L3QvtGB0YLQuCDQtNC+wqDRgNC10LfRg9C70YzRgtCw0YLQsCAoY3VzdG9tZXIgam91cm5leSksINCy0YHQtcKg0YLQvtGH0LrQuCDQutC+0L3RgtCw0LrRgtCwINC60LvQuNC10L3RgtCwINGBwqDQsdGA0LXQvdC00L7QvCAoYnJhbmQgdG91Y2hwb2ludHMpLCDQsMKg0YLQsNC60LbQtSDQvtC60YDRg9C20LXQvdC40LUg0L/RgNC4wqDQstC30LDQuNC80L7QtNC10LnRgdGC0LLQuNC4IChlbnZpcm9ubWVudCkuXCI7XG59XG5cbi5mb3JtX19sYWJlbC1jam0gLmZvcm1fX3Rvb2x0aXA6OmFmdGVyIHtcbiAgY29udGVudDogXCLQn9GA0L7QstC+0LTQuNGC0YHRjyDQv9C+0LvQvdGL0Lkg0LDQvdCw0LvQuNC3INCy0LfQsNC40LzQvtC00LXQudGB0YLQstC40Y8g0LzQtdC20LTRg8Kg0LHRgNC10L3QtNC+0Lwg0LjCoNC60LvQuNC10L3RgtC+0LwsINC90LDQv9GA0Y/QvNGD0Y4g0LLQu9C40Y/RjtGJ0LjQuSDQvdCwwqDRg9GA0L7QstC10L3RjCDQutC70LjQtdC90YLRgdC60L7Qs9C+INC+0L/Ri9GC0LAuINCS0LrQu9GO0YfQsNC10YIg0LLCoNGB0LXQsdGPINCy0LXRgdGMINC/0YPRgtGMINC60LvQuNC10L3RgtCwINC+0YLCoNC/0L7RgtGA0LXQsdC90L7RgdGC0Lgg0LTQvsKg0YDQtdC30YPQu9GM0YLQsNGC0LAgKGN1c3RvbWVyIGpvdXJuZXkpLCDQstGB0LXCoNGC0L7Rh9C60Lgg0LrQvtC90YLQsNC60YLQsCDQutC70LjQtdC90YLQsCDRgcKg0LHRgNC10L3QtNC+0LwgKGJyYW5kIHRvdWNocG9pbnRzKSwg0LDCoNGC0LDQutC20LUg0L7QutGA0YPQttC10L3QuNC1INC/0YDQuMKg0LLQt9Cw0LjQvNC+0LTQtdC50YHRgtCy0LjQuCAoZW52aXJvbm1lbnQpLlwiO1xufVxuXG4uZm9ybV9fbGFiZWwtY3VzdG9tZXItZXhwZXJpZW5jZSAuZm9ybV9fdG9vbHRpcDo6YWZ0ZXIge1xuICBjb250ZW50OiBcItCf0YDQvtCy0L7QtNC40YLRgdGPINC/0L7Qu9C90YvQuSDQsNC90LDQu9C40Lcg0LLQt9Cw0LjQvNC+0LTQtdC50YHRgtCy0LjRjyDQvNC10LbQtNGDwqDQsdGA0LXQvdC00L7QvCDQuMKg0LrQu9C40LXQvdGC0L7QvCwg0L3QsNC/0YDRj9C80YPRjiDQstC70LjRj9GO0YnQuNC5INC90LDCoNGD0YDQvtCy0LXQvdGMINC60LvQuNC10L3RgtGB0LrQvtCz0L4g0L7Qv9GL0YLQsC4g0JLQutC70Y7Rh9Cw0LXRgiDQssKg0YHQtdCx0Y8g0LLQtdGB0Ywg0L/Rg9GC0Ywg0LrQu9C40LXQvdGC0LAg0L7RgsKg0L/QvtGC0YDQtdCx0L3QvtGB0YLQuCDQtNC+wqDRgNC10LfRg9C70YzRgtCw0YLQsCAoY3VzdG9tZXIgam91cm5leSksINCy0YHQtcKg0YLQvtGH0LrQuCDQutC+0L3RgtCw0LrRgtCwINC60LvQuNC10L3RgtCwINGBwqDQsdGA0LXQvdC00L7QvCAoYnJhbmQgdG91Y2hwb2ludHMpLCDQsMKg0YLQsNC60LbQtSDQvtC60YDRg9C20LXQvdC40LUg0L/RgNC4wqDQstC30LDQuNC80L7QtNC10LnRgdGC0LLQuNC4IChlbnZpcm9ubWVudCkuXCI7XG59XG5cbi5mb3JtX19sYWJlbC1icmFuZC1hdWRpdCAuZm9ybV9fdG9vbHRpcDo6YWZ0ZXIge1xuICBjb250ZW50OiBcItCQ0YPQtNC40YIg0LHRgNC10L3QtNCwwqDigJQg0L7QtNC40L0g0LjQt8Kg0YHQsNC80YvRhSDQvdCw0LTRkdC20L3Ri9GFINC80LXRgtC+0LTQvtCyINCw0L3QsNC70LjQt9CwINGB0L7RgdGC0LDQstC70Y/RjtGJ0LjRhSDQsdGA0LXQvdC00LAsINCwwqDQuNC80LXQvdC90L46INC10LPQvsKg0LrQvtC90LrRg9GA0LXQvdGC0L7RgdC/0L7RgdC+0LHQvdC+0YHRgtC4LCDRgtC10LrRg9GJ0LXQs9C+INC/0L7Qu9C+0LbQtdC90LjRjyDQsdGA0LXQvdC00LAg0L3QsMKg0YDRi9C90LrQtSwg0LLQutC70Y7Rh9Cw0Y8g0LjRgdGB0LvQtdC00L7QstCw0L3QuNC1INC/0L7RgtC10L3RhtC40LDQu9CwINC00LvRj8Kg0LXQs9C+wqDQtNCw0LvRjNC90LXQudGI0LXQs9C+INGA0LDQt9Cy0LjRgtC40Y8uXCI7XG59XG5cbi5mb3JtX19sYWJlbC1zdHJ1Y3R1cmluZy1vZi10aGUtcmVjZWl2ZWQtZGF0YSAuZm9ybV9fdG9vbHRpcDo6YWZ0ZXIge1xuICBjb250ZW50OiBcItCS0YHQtcKg0L/QvtC70YPRh9C10L3QvdGL0LUg0LTQsNC90L3Ri9C1INC30LDRgtC10Lwg0YHRgtGA0YPQutGC0YPRgNC40YDRg9GO0YLRgdGPINC00LvRj8Kg0L/QvtC00LHQvtGA0LAg0L7Qv9GC0LjQvNCw0LvRjNC90L7QuSDRgdGC0YDQsNGC0LXQs9C40Lgg0L/QvtC30LjRhtC40L7QvdC40YDQvtCy0LDQvdC40Y8sINGB0LXQs9C80LXQvdGC0LjRgNC+0LLQsNC90LjRjyDQutC70Y7Rh9C10LLRi9GFINCz0YDRg9C/0L8g0YbQtdC70LXQstC+0Lkg0LDRg9C00LjRgtC+0YDQuNC4LCDQstGL0Y/QstC70LXQvdC40Lgg0YHQuNC70YzQvdGL0YUg0LjCoNGB0LvQsNCx0YvRhSDRgdGC0L7RgNC+0L0g0L/QvtC30LjRhtC40L7QvdC40YDQvtCy0LDQvdC40Y8g0LHRgNC10L3QtNCwINC+0YLQvdC+0YHQuNGC0LXQu9GM0L3QviDQutC+0L3QutGD0YDQtdC90YLQvtCyLiDQnNGLwqDQuNGB0L/QvtC70YzQt9GD0LXQvCDRgdC+0LHRgdGC0LLQtdC90L3Ri9C1INC4wqDQvNC10LbQtNGD0L3QsNGA0L7QtNC90YvQtSDQvNC10YLQvtC00LjQutC4INC40LfRg9GH0LXQvdC40Y8g0LHRgNC10L3QtNC+0LIsINC/0YDQuNC80LXQvdGP0Y8g0YHQsNC80YvQtSDRgNC10LfRg9C70YzRgtCw0YLQuNCy0L3Ri9C1INC80L7QtNC10LvQuC5cIjtcbn1cblxuLmhlYWRlciB7XG4gIG1hcmdpbi10b3A6IDI3cHg7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbi5oZWFkZXIgLndyYXBwZXIge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LW9yaWVudDogaG9yaXpvbnRhbDtcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gIC1tcy1mbGV4LWRpcmVjdGlvbjogcm93O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5oZWFkZXJfX25hdiB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLW1zLWZsZXgtd3JhcDogd3JhcDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBnYXA6IDUwcHg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBiYXNlbGluZTtcbiAgLW1zLWZsZXgtYWxpZ246IGJhc2VsaW5lO1xuICBhbGlnbi1pdGVtczogYmFzZWxpbmU7XG59XG5cbi5oZWFkZXIgYSB7XG4gIGZvbnQ6IDIwMCAxNnB4LzE5cHggXCJJbnRlclwiLCBcIk1TIFNhbnMgU2VyaWZcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDBlbTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgY29sb3I6IHJnYigwLCAwLCAwKTtcbn1cblxuLmhlYWRlciBwIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4ucHJlZm9ybSB7XG4gIGZvbnQtc2l6ZTogNDBweDtcbiAgbGluZS1oZWlnaHQ6IDQ4cHg7XG4gIG1hcmdpbi10b3A6IDg4cHg7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbi5wcmVmb3JtIC53cmFwcGVyIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAzZnIgMWZyO1xufVxuXG4ucHJlZm9ybSBwIHtcbiAgZm9udC13ZWlnaHQ6IDIwMDtcbiAgbWFyZ2luOiAwO1xufVxuXG4ucHJlZm9ybSBzcGFuIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLnByZWZvcm0gYnV0dG9uIHtcbiAgLXdlYmtpdC1ib3gtcGFjazogc3RhcnQ7XG4gIC1tcy1mbGV4LXBhY2s6IHN0YXJ0O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIC13ZWJraXQtYm94LWFsaWduOiBlbmQ7XG4gIC1tcy1mbGV4LWFsaWduOiBlbmQ7XG4gIGFsaWduLWl0ZW1zOiBlbmQ7XG4gIC1tcy1mbGV4LWl0ZW0tYWxpZ246IGVuZDtcbiAgYWxpZ24tc2VsZjogZW5kO1xufVxuXG4ucHJvamVjdHMge1xuICAtLW10LWluc2lkZS1jYXJkOiAxMHB4O1xufVxuXG4ucHJvamVjdHNfX25hdiB7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCgxMDBweCwgMWZyKSk7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZ2FwOiA1MHB4O1xuICBtYXJnaW4tdG9wOiAyMHB4O1xuICBtYXJnaW4tYm90dG9tOiA1MHB4O1xufVxuXG4ucHJvamVjdHNfX25hdiBhIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXdlaWdodDogMjAwO1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICMwZTBlMGU7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ucHJvamVjdHNfX25hdiBhW2FyaWEtc2VsZWN0ZWQ9dHJ1ZV0sXG4ucHJvamVjdHNfX25hdiBhOmhvdmVyIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLnByb2plY3RzX19uYXYgYTpmb2N1cy12aXNpYmxlIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLnByb2plY3RzIGxpIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtaW4taGVpZ2h0OiAzMHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjMGUwZTBlO1xuICBib3JkZXItcmFkaXVzOiA4NHB4O1xufVxuXG4ucHJvamVjdHNfX2NhcmQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDYwcHggMDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICMwZTBlMGU7XG59XG5cbi5wcm9qZWN0c19fY2FyZCBwIHtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBmb250LXdlaWdodDogNzAwO1xuICBsaW5lLWhlaWdodDogMjlweDtcbiAgY29sb3I6ICMwZTBlMGU7XG4gIG1hcmdpbi10b3A6IHZhcigtLW10LWluc2lkZS1jYXJkKTtcbn1cblxuLnByb2plY3RzX19jdGEge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDIwMHB4IDUwcHggYXV0byAyMDBweDtcbiAgLXdlYmtpdC1ib3gtcGFjazogc3RhcnQ7XG4gIC1tcy1mbGV4LXBhY2s6IHN0YXJ0O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHN0YXJ0O1xuICBnYXA6IDQ1cHg7XG59XG5cbi5wcm9qZWN0cyBoMyB7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbGluZS1oZWlnaHQ6IDI5cHg7XG4gIGNvbG9yOiAjMGUwZTBlO1xuICBtYXJnaW4tdG9wOiB2YXIoLS1tdC1pbnNpZGUtY2FyZCk7XG4gIG1heC13aWR0aDogMjAwcHg7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbi5wcm9qZWN0cyBoNCB7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgZm9udC13ZWlnaHQ6IDIwMDtcbiAgbGluZS1oZWlnaHQ6IDI5cHg7XG4gIGNvbG9yOiAjMGUwZTBlO1xuICBtYXJnaW4tdG9wOiB2YXIoLS1tdC1pbnNpZGUtY2FyZCk7XG4gIG1heC13aWR0aDogMTgwcHg7XG4gIHRleHQtYWxpZ246IGVuZDtcbn1cblxuLnZpZGVvX19pdGVtIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xufVxuXG4qIHtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5ib2R5IHtcbiAgZm9udDogMjAwIDIxcHgvMS41IFwiSW50ZXJcIiwgXCJNUyBTYW5zIFNlcmlmXCIsIHNhbnMtc2VyaWY7XG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7XG59XHJcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltMWhhVzR1WTNOeklpd2lkbVZ1Wkc5eUwyNXZjbTFoYkdsNlpTNXpZM056SWl3aVoyeHZZbUZzTDJadmJuUnpMbk5qYzNNaUxDSm5iRzlpWVd3dmRYUnBiR2x6TG5OamMzTWlMQ0ppYkc5amF5OW1iM0p0TG5OamMzTWlMQ0puYkc5aVlXd3ZkbUZ5YVdGaWJHVnpMbk5qYzNNaUxDSmliRzlqYXk5b1pXRmtaWEl1YzJOemN5SXNJbUpzYjJOckwzQnlaV1p2Y20wdWMyTnpjeUlzSW1Kc2IyTnJMM0J5YjJwbFkzUnpMbk5qYzNNaUxDSmliRzlqYXk5MmFXUmxieTV6WTNOeklpd2liV0ZwYmk1elkzTnpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCTEdkQ1FVRm5RanRCUTBGb1Fpd3lSVUZCUVR0QlFVTkJPeXRGUVVGQk8wRkJSVUU3T3p0RlFVRkJPMEZCU1VFN0swVkJRVUU3UVVGRlFUczdSVUZCUVR0QlFVZEJPenRGUVVGQk8wRkJSMEU3T3p0RlFVRkJPMEZCU1VFN0swVkJRVUU3UVVGRlFUczdPMFZCUVVFN1FVRkpRVHM3TzBWQlFVRTdRVUZKUVRzclJVRkJRVHRCUVVWQk96dEZRVUZCTzBGQlIwRTdPenRGUVVGQk8wRkJTVUU3TzBWQlFVRTdRVUZIUVRzN08wVkJRVUU3UVVGSlFUczdSVUZCUVR0QlFVZEJPenM3UlVGQlFUdEJRVWxCT3l0RlFVRkJPMEZCUlVFN08wVkJRVUU3UVVGSFFUc3JSVUZCUVR0QlFVVkJPenM3UlVGQlFUdEJRVWxCT3pzN1JVRkJRVHRCUVVsQk96czdSVUZCUVR0QlFVbEJPenRGUVVGQk8wRkJSMEU3TzBWQlFVRTdRVUZIUVRzN1JVRkJRVHRCUVVkQk96dEZRVUZCTzBGQlIwRTdPenM3TzBWQlFVRTdRVUZOUVRzN1JVRkJRVHRCUVVkQk96dEZRVUZCTzBGQlIwRTdPenRGUVVGQk8wRkJTVUU3TzBWQlFVRTdRVUZIUVRzN08wVkJRVUU3UVVGSlFUczdSVUZCUVR0QlFVZEJPenM3UlVGQlFUdEJRVWxCT3l0RlFVRkJPMEZCUlVFN08wVkJRVUU3UVVGSFFUczdSVUZCUVR0QlFVZEJPeXRGUVVGQk8wRkJSVUU3TzBWQlFVRTdRVUZIUVRzN1JVRkJRVHRCUVVkQk8wVkJRME1zYVVKQlFVRTdSVUZEUVN3NFFrRkJRVHRCUkVWRU96dEJRMEZCTzBWQlEwTXNVMEZCUVR0QlJFZEVPenRCUTBSQk8wVkJRME1zWTBGQlFUdEJSRWxFT3p0QlEwWkJPMFZCUTBNc1kwRkJRVHRGUVVOQkxHZENRVUZCTzBGRVMwUTdPMEZEU0VFN1JVRkRReXdyUWtGQlFUdFZRVUZCTEhWQ1FVRkJPMFZCUTBFc1UwRkJRVHRGUVVOQkxHbENRVUZCTzBGRVRVUTdPMEZEU2tFN1JVRkRReXhwUTBGQlFUdEZRVU5CTEdOQlFVRTdRVVJQUkRzN1FVTk1RVHRGUVVORExEWkNRVUZCTzBGRVVVUTdPMEZEVGtFN1JVRkRReXh0UWtGQlFUdEZRVU5CTERCQ1FVRkJPMFZCUTBFc2VVTkJRVUU3VlVGQlFTeHBRMEZCUVR0QlJGTkVPenRCUTFCQk8wVkJRME1zYlVKQlFVRTdRVVJWUkRzN1FVTlNRVHRGUVVORExHMUNRVUZCTzBGRVYwUTdPMEZEVkVFN1JVRkRReXhwUTBGQlFUdEZRVU5CTEdOQlFVRTdRVVJaUkRzN1FVTldRVHRGUVVORExHbERRVUZCTzBWQlEwRXNZMEZCUVR0QlJHRkVPenRCUTFoQk8wVkJRME1zYVVOQlFVRTdSVUZEUVN4alFVRkJPMEZFWTBRN08wRkRXa0U3UlVGRFF5eGpRVUZCTzBGRVpVUTdPMEZEWWtFN1JVRkRReXhqUVVGQk8wVkJRMEVzWTBGQlFUdEZRVU5CTEd0Q1FVRkJPMFZCUTBFc2QwSkJRVUU3UlVGRFFTeGxRVUZCTzBGRVowSkVPenRCUTJSQk8wVkJRME1zWTBGQlFUdEZRVU5CTEdOQlFVRTdSVUZEUVN4clFrRkJRVHRGUVVOQkxIZENRVUZCTzBWQlEwRXNWMEZCUVR0QlJHbENSRHM3UVVObVFUdEZRVU5ETEd0Q1FVRkJPMEZFYTBKRU96dEJRMmhDUVR0RlFVTkRMRzlDUVVGQk8wVkJRMEVzWlVGQlFUdEZRVU5CTEdsQ1FVRkJPMFZCUTBFc1UwRkJRVHRGUVVOQkxHbENRVUZCTzBWQlEwRXNiMEpCUVVFN1JVRkRRU3huUWtGQlFUdEZRVU5CTEZsQlFVRTdSVUZEUVN4bFFVRkJPMFZCUTBFc01FSkJRVUU3UVVSdFFrUTdRVU5zUWtNN1JVRkRReXhyUWtGQlFUdEZRVU5CTEZWQlFVRTdRVVJ2UWtZN1FVTnNRa003UlVGRFF5dzRRa0ZCUVR0QlJHOUNSanM3UVVOcVFrRTdSVUZEUXl4dlFrRkJRVHRGUVVOQkxHVkJRVUU3UlVGRFFTeHBRa0ZCUVR0RlFVTkJMRk5CUVVFN1JVRkRRU3hwUWtGQlFUdEJSRzlDUkRzN1FVTnNRa0U3UlVGRFF5eHZRa0ZCUVR0RlFVTkJMR1ZCUVVFN1JVRkRRU3hwUWtGQlFUdEZRVU5CTEZOQlFVRTdRVVJ4UWtRN08wRkRia0pCTzBWQlEwTXNiMEpCUVVFN1JVRkRRU3hsUVVGQk8wVkJRMEVzYVVKQlFVRTdSVUZEUVN4VFFVRkJPMFZCUTBFc2IwSkJRVUU3UVVSelFrUTdPMEZEY0VKQk8wVkJRME1zYjBKQlFVRTdSVUZEUVN4bFFVRkJPMFZCUTBFc2FVSkJRVUU3UlVGRFFTeFRRVUZCTzBWQlEwRXNZMEZCUVR0QlJIVkNSRHM3UVVOeVFrRTdSVUZEUXl3d1FrRkJRVHRCUkhkQ1JEdEJRM1pDUXp0RlFVTkRMR3RDUVVGQk8wVkJRMEVzVlVGQlFUdEJSSGxDUmp0QlEzWkNRenRGUVVORExEaENRVUZCTzBGRWVVSkdPenRCUTNSQ1FUdEZRVU5ETERCQ1FVRkJPMEZFZVVKRU8wRkRlRUpETzBWQlEwTXNhMEpCUVVFN1JVRkRRU3hWUVVGQk8wRkVNRUpHTzBGRGVFSkRPMFZCUTBNc09FSkJRVUU3UVVRd1FrWTdPMEZEZGtKQk8wVkJRME1zTUVKQlFVRTdRVVF3UWtRN1FVTjZRa003UlVGRFF5eHJRa0ZCUVR0RlFVTkJMRlZCUVVFN1FVUXlRa1k3UVVONlFrTTdSVUZEUXl3NFFrRkJRVHRCUkRKQ1JqczdRVU40UWtFN1JVRkRReXc0UWtGQlFUdEJSREpDUkRzN1FVTjZRa0U3UlVGRFF5dzRRa0ZCUVR0VlFVRkJMSE5DUVVGQk8wVkJRMEVzWTBGQlFUdEZRVU5CTEdOQlFVRTdSVUZEUVN4bFFVRkJPMFZCUTBFc1ZVRkJRVHRGUVVOQkxHMUNRVUZCTzBGRU5FSkVPenRCUXpGQ1FUdEZRVU5ETEhkQ1FVRkJPMEZFTmtKRU96dEJRek5DUVR0RlFVTkRMRGhDUVVGQk8xVkJRVUVzYzBKQlFVRTdSVUZEUVN4VlFVRkJPMEZFT0VKRU96dEJRelZDUVR0RlFVTkRMRGhDUVVGQk8xVkJRVUVzYzBKQlFVRTdSVUZEUVN4VlFVRkJPMEZFSzBKRU96dEJRelZDUXp0RlFVTkRMRmxCUVVFN1FVUXJRa1k3UVVNM1FrTTdSVUZEUXl4WlFVRkJPMEZFSzBKR096dEJRelZDUVR0RlFVTkRMRFpDUVVGQk8wVkJRMEVzYjBKQlFVRTdRVVFyUWtRN1FVTTVRa003UlVGRFF5eDNRa0ZCUVR0QlJHZERSanRCUXpsQ1JUdEZRVU5GTERCQ1FVRkJPMFZCUTBFc1lVRkJRVHRCUkdkRFNqczdRVU0zUWtFN1JVRkRReXhqUVVGQk8wRkVaME5FT3p0QlF6bENRVHRGUVVORExHdENRVUZCTzBGRWFVTkVPenRCUXk5Q1FUdEZRVU5ETEdGQlFVRTdRVVJyUTBRN08wRkRhRU5CTzBWQlEwTXNZVUZCUVR0QlJHMURSRHM3UVVOcVEwRTdPME5CUVVFN1FVRkhRVHM3UlVGRlF5eFZRVUZCTzBWQlEwRXNVMEZCUVR0RlFVTkJMRk5CUVVFN1JVRkRRU3c0UWtGQlFUdFZRVUZCTEhOQ1FVRkJPMEZFYjBORU96dEJRMnhEUVR0RlFVTkRMSEZDUVVGQk8wRkVjVU5FT3p0QlEyNURRVHM3TzBWQlIwTXNaMEpCUVVFN1FVUnpRMFE3TzBGRk4xaEJPMFZCUTBVc2IwSkJRVUU3UlVGRFFTeHJRa0ZCUVR0RlFVTkJMR2RDUVVGQk8wVkJRMEVzZDBSQlFVRTdSVUZEUVN4clFrRkJRVHRCUm1kWlJqdEJSVGRZUVR0RlFVTkZMRzlDUVVGQk8wVkJRMEVzYTBKQlFVRTdSVUZEUVN4blFrRkJRVHRGUVVOQkxIRkVRVUZCTzBWQlEwRXNhMEpCUVVFN1FVWXJXRVk3UVVVMVdFRTdSVUZEUlN4dlFrRkJRVHRGUVVOQkxHdENRVUZCTzBWQlEwRXNaMEpCUVVFN1JVRkRRU3hyUkVGQlFUdEZRVU5CTEd0Q1FVRkJPMEZHT0ZoR08wRkhibHBCTzBWQlEwVXNhMEpCUVVFN1JVRkZRU3hWUVVGQk8wVkJRMEVzVjBGQlFUdEZRVU5CTEZsQlFVRTdSVUZEUVN4VlFVRkJPMFZCUTBFc1owSkJRVUU3UlVGRlFTeHRRa0ZCUVR0RlFVVkJMRk5CUVVFN1JVRkZRU3h0UWtGQlFUdEZRVU5CTERoQ1FVRkJPMVZCUVVFc2MwSkJRVUU3UVVocFdrWTdPMEZIT1ZsQk8wVkJRMFVzWlVGQlFUdEZRVU5CTEdkQ1FVRkJPMFZCUTBFc2FVSkJRVUU3UlVGRFFTeHRRa0ZCUVR0RlFVTkJMR2RDUVVGQk8wVkJRMEVzWVVGQlFUdEZRVU5CTEcxQ1FVRkJPMEZJYVZwR096dEJSemxaUVR0RlFVTkZMR2xDUVVGQk8wVkJRMEVzYVVKQlFVRTdSVUZEUVN4clFrRkJRVHRGUVVOQkxHdENRVUZCTzBWQlEwRXNiVUpCUVVFN1JVRkRRU3h2UWtGQlFUdEZRVUZCTEc5Q1FVRkJPMFZCUVVFc1lVRkJRVHRGUVVOQkxEUkNRVUZCTzBWQlFVRXNOa0pCUVVFN1RVRkJRU3d3UWtGQlFUdFZRVUZCTEhOQ1FVRkJPMEZJYVZwR096dEJSemxaUVR0RlFVTkJMR2RDUVVGQk8wVkJRMEVzWlVGQlFUdEZRVU5CTEdsQ1FVRkJPMFZCUTBFc2JVSkJRVUU3UlVGRFFTeG5Ra0ZCUVR0QlNHbGFRVHM3UVVjM1dVVTdSVUZEUlN4dlFrRkJRVHRGUVVGQkxHOUNRVUZCTzBWQlFVRXNZVUZCUVR0RlFVTkJMRmxCUVVFN1JVRkRRU3hoUVVGQk8wRklaMXBLTzBGSE4xbEZPMFZCUTBVc1pVRkJRVHRGUVVOQkxHZENRVUZCTzBWQlEwRXNhVUpCUVVFN1FVZ3JXVW83TzBGSmRHTkJPMFZCUTBVc1owSkJRVUU3UVVwNVkwWTdRVWwyWTBVN1JVRkRSU3hoUVVGQk8wVkJRMEVzY1VOQlFVRTdRVXA1WTBvN1FVbDJZMGs3UlVGRFJTeG5Ra0ZCUVR0RlFVTkJMRzlDUVVGQk8wRktlV05PTzBGSmRHTkpPMFZCUTBVc1owSkJRVUU3UlVGRFFTeHBRa0ZCUVR0RlFVTkJMSFZDUVVGQk8wRktkMk5PTzBGSmNHTkZPMFZCUTBVc2IwSkJRVUU3UlVGQlFTeHZRa0ZCUVR0RlFVRkJMR0ZCUVVFN1JVRkRRU3cwUWtGQlFUdEZRVUZCTERaQ1FVRkJPMDFCUVVFc01FSkJRVUU3VlVGQlFTeHpRa0ZCUVR0QlNuTmpTanRCU1c1alJUdEZRVU5GTEcxQ1FVRkJPMFZCVFVFc2EwSkJRVUU3UlVGRFFTeFpRVUZCTzBWQlEwRXNZVUZCUVR0RlFVTkJMREpEUVVGQk8wVkJRMEVzVTBGQlFUdEJTbWRqU2p0QlNYaGpTVHRGUVVORkxHZENRVUZCTzBGS01HTk9PMEZKYW1OSk8wVkJRMFVzWjBKQlFVRTdSVUZEUVN4bFFVRkJPMFZCUTBFc1owSkJRVUU3UlVGRFFTeHBRa0ZCUVR0RlFVTkJMR1ZCUVVFN1JVRkRRU3hsUVVGQk8wRktiV05PTzBGSmFHTkpPMFZCUTBVc1pVRkJRVHRGUVVOQkxHOUNRVUZCTzBGS2EyTk9PMEZKT1dKRk8wVkJRMFVzWVVGQlFUdEZRVU5CTERoQ1FVRkJPMEZLWjJOS08wRkpPV0pKTzBWQlEwVXNaMEpCUVVFN1JVRkRRU3hoUVVGQk8wRktaMk5PTzBGSk4ySkpPMFZCUTBVc1owSkJRVUU3UlVGRFFTeGhRVUZCTzBWQlEwRXNaVUZCUVR0RlFVTkJMR2RDUVVGQk8wVkJRMEVzYVVKQlFVRTdRVW9yWWs0N08wRkpNV0pCTzBWQlEwVXNhVUpCUVVFN1JVRkRRU3h2UWtGQlFUdEZRVUZCTEc5Q1FVRkJPMFZCUVVFc1lVRkJRVHRGUVVOQkxEUkNRVUZCTzBWQlFVRXNOa0pCUVVFN1RVRkJRU3d3UWtGQlFUdFZRVUZCTEhOQ1FVRkJPMFZCUTBFc1VVRkJRVHRGUVVOQkxEQkNRVUZCTzBWQlFVRXNkVUpCUVVFN1JVRkJRU3hyUWtGQlFUdEJTalppUmp0QlNUTmlSVHRGUVVORkxHdENRVUZCTzBWQlEwRXNiMEpCUVVFN1JVRkJRU3h2UWtGQlFUdEZRVUZCTEdGQlFVRTdSVUZEUVN3eVFrRkJRVHROUVVGQkxIZENRVUZCTzFWQlFVRXNjVUpCUVVFN1JVRkRRU3hsUVVGQk8wVkJRMEVzWjBKQlFVRTdSVUZEUVN4cFFrRkJRVHRCU2paaVNqdEJTVE5pU1R0RlFVTkZMR3RDUVVGQk8wVkJRMEVzV1VGQlFUdEZRVU5CTEhsQ1EzQkdkMEk3UlVSeFJuaENMRGhFUVVGQk8xVkJRVUVzYzBSQlFVRTdSVUZEUVN4dFFrRkJRVHRGUVVOQkxHdENRVUZCTzBWQlEwRXNhMEpCUVVFN1JVRkRRU3d5UTBGQlFUdEZRVU5CTEd0Q1FVRkJPMFZCUTBFc1ZVRkJRVHRGUVVOQkxGTkJRVUU3UlVGRFFTeFZRVUZCTzBWQlJVRXNaVUZCUVR0RlFVTkJMR2RDUVVGQk8wVkJRMEVzYVVKQlFVRTdSVUZEUVN4alEyNUhkMEk3UVV3cmFFSTVRanRCU1hwaVNUdEZRVU5GTEcxQ1FVRkJPMEZLTW1KT08wRkpkbUpGTzBWQlEwVXNhMEpCUVVFN1FVcDVZa283TzBGSmNtSkJPMFZCUTBVc1lVRkJRVHRGUVVOQkxIRkRRVUZCTzBGS2QySkdPMEZKZEdKRk8wVkJRMFVzWjBKQlFVRTdSVUZEUVN4NVFrRkJRVHRGUVVOQkxHMUNRVUZCTzBGS2QySktPMEZKY21KRk8wVkJRMFVzWjBKQlFVRTdSVUZEUVN4cFFrRkJRVHRGUVVOQkxIbENRVUZCTzAxQlFVRXNjMEpCUVVFN1ZVRkJRU3h0UWtGQlFUdEZRVU5CTEdsRFFVRkJPMDFCUVVFc05rSkJRVUU3VlVGQlFTeDVRa0ZCUVR0QlNuVmlTanM3UVVsdVlrRXNiVUpCUVVFN1FVRkRRVHRGUVVORkxHdFFRVUZCTzBGS2MySkdPenRCU1hCaVFUdEZRVU5GTERSTFFVRkJPMEZLZFdKR096dEJTWEppUVR0RlFVTkZMRFJJUVVGQk8wRktkMkpHT3p0QlNYUmlRVHRGUVVORkxEUklRVUZCTzBGS2VXSkdPenRCU1hSaVFTeHBRa0ZCUVR0QlFVTkJPMFZCUTBVc05sUkJRVUU3UVVwNVlrWTdPMEZKZG1KQk8wVkJRMFVzTmxSQlFVRTdRVW93WWtZN08wRkplR0pCTzBWQlEwVXNObFJCUVVFN1FVb3lZa1k3TzBGSmVtSkJPMFZCUTBVc05FNUJRVUU3UVVvMFlrWTdPMEZKTVdKQk8wVkJRMFVzTWxaQlFVRTdRVW8yWWtZN08wRk5MMnhDUVR0RlFVTkZMR2RDUVVGQk8wVkJRMEVzYlVKQlFVRTdRVTVyYlVKR08wRk5hRzFDUlR0RlFVTkZMRzlDUVVGQk8wVkJRVUVzYjBKQlFVRTdSVUZCUVN4aFFVRkJPMFZCUTBFc09FSkJRVUU3UlVGQlFTdzJRa0ZCUVR0TlFVRkJMSFZDUVVGQk8xVkJRVUVzYlVKQlFVRTdSVUZEUVN4NVFrRkJRVHROUVVGQkxITkNRVUZCTzFWQlFVRXNPRUpCUVVFN1JVRkRRU3g1UWtGQlFUdE5RVUZCTEhOQ1FVRkJPMVZCUVVFc2JVSkJRVUU3UVU1cmJVSktPMEZOTDJ4Q1JUdEZRVU5GTEc5Q1FVRkJPMFZCUVVFc2IwSkJRVUU3UlVGQlFTeGhRVUZCTzBWQlEwRXNiVUpCUVVFN1RVRkJRU3hsUVVGQk8wVkJRMEVzVTBGQlFUdEZRVU5CTERKQ1FVRkJPMDFCUVVFc2QwSkJRVUU3VlVGQlFTeHhRa0ZCUVR0QlRtbHRRa283UVUwNWJFSkZPMFZCUTBVc2FVUkVRekJDTzBWRFFURkNMR1ZCUVVFN1JVRkRRU3huUWtGQlFUdEZRVU5CTEdsQ1FVRkJPMFZCUTBFc2JVSkJRVUU3UlVGRFFTeG5Ra0ZCUVR0RlFVTkJMRzFDUVVGQk8wRk9aMjFDU2p0QlRUZHNRa1U3UlVGRFJTeHJRa0ZCUVR0QlRpdHNRa283TzBGUE5XNUNRVHRGUVVORkxHVkJRVUU3UlVGRFFTeHBRa0ZCUVR0RlFVTkJMR2RDUVVGQk8wVkJRMEVzYlVKQlFVRTdRVkFyYmtKR08wRlBOMjVDUlR0RlFVTkZMR0ZCUVVFN1JVRkRRU3c0UWtGQlFUdEJVQ3R1UWtvN1FVODFia0pGTzBWQlEwVXNaMEpCUVVFN1JVRkRRU3hUUVVGQk8wRlFPRzVDU2p0QlR6TnVRa1U3UlVGRFJTeG5Ra0ZCUVR0QlVEWnVRa283UVU4eGJrSkZPMFZCUlVFc2RVSkJRVUU3VFVGQlFTeHZRa0ZCUVR0VlFVRkJMREpDUVVGQk8wVkJRMEVzYzBKQlFVRTdUVUZCUVN4dFFrRkJRVHRWUVVGQkxHZENRVUZCTzBWQlJVRXNkMEpCUVVFN1RVRkJRU3hsUVVGQk8wRlFNRzVDUmpzN1FWRnVjRUpCTzBWQlEwVXNjMEpCUVVFN1FWSnpjRUpHTzBGUmNIQkNSVHRGUVVORkxGVkJRVUU3UlVGRFFTeFRRVUZCTzBWQlEwRXNZVUZCUVR0RlFVTkJMREpFUVVGQk8wVkJRMEVzYTBKQlFVRTdSVUZEUVN4VFFVRkJPMFZCUTBFc1owSkJRVUU3UlVGRFFTeHRRa0ZCUVR0QlVuTndRa283UVZGd2NFSkpPMFZCUTBVc1pVRkJRVHRGUVVOQkxHZENRVUZCTzBWQlEwRXNhVUpCUVVFN1JVRkRRU3hqU0dKM1FqdEZSMk40UWl4WFFVRkJPMEZTYzNCQ1RqdEJVWEJ3UWswN1JVRkZSU3huUWtGQlFUdEJVbkZ3UWxJN1FWRnNjRUpOTzBWQlEwVXNaMEpCUVVFN1FWSnZjRUpTTzBGUkwyOUNSVHRGUVVORkxHOUNRVUZCTzBWQlFVRXNiMEpCUVVFN1JVRkJRU3hoUVVGQk8wVkJRMEVzZVVKQlFVRTdUVUZCUVN4elFrRkJRVHRWUVVGQkxHMUNRVUZCTzBWQlEwRXNaMEpCUVVFN1JVRkRRU3g1UWtGQlFUdEZRVU5CTEcxQ1FVRkJPMEZTYVhCQ1NqdEJVVGx2UWtVN1JVRkRSU3hyUWtGQlFUdEZRVU5CTEdWQlFVRTdSVUZEUVN3MlFrRkJRVHRCVW1kd1FrbzdRVkUzYjBKSk8wVkJRMFVzWlVGQlFUdEZRVU5CTEdkQ1FVRkJPMFZCUTBFc2FVSkJRVUU3UlVGRFFTeGpTRGREZDBJN1JVYzRRM2hDTEdsRFFVRkJPMEZTSzI5Q1RqdEJVVE52UWtVN1JVRkRSU3hoUVVGQk8wVkJRMEVzTkVOQlFVRTdSVUZEUVN4MVFrRkJRVHROUVVGQkxHOUNRVUZCTzFWQlFVRXNjMEpCUVVFN1JVRkRRU3hUUVVGQk8wRlNObTlDU2p0QlVURnZRa1U3UlVGRFJTeGxRVUZCTzBWQlEwRXNaMEpCUVVFN1JVRkRRU3hwUWtGQlFUdEZRVU5CTEdOSU4wUXdRanRGUnpoRU1VSXNhVU5CUVVFN1JVRkRRU3huUWtGQlFUdEZRVU5CTEdkQ1FVRkJPMEZTTkc5Q1NqdEJVWHB2UWtVN1JVRkRSU3hsUVVGQk8wVkJRMEVzWjBKQlFVRTdSVUZEUVN4cFFrRkJRVHRGUVVOQkxHTklka1V3UWp0RlIzZEZNVUlzYVVOQlFVRTdSVUZEUVN4blFrRkJRVHRGUVVOQkxHVkJRVUU3UVZJeWIwSktPenRCVTNwMFFrRTdSVUZEUXl4WFFVRkJPMFZCUTBFc1dVRkJRVHRGUVVOQkxHOUNRVUZCTzB0QlFVRXNhVUpCUVVFN1FWUTBkRUpFT3p0QlZYSjBRa0U3UlVGRFJTdzRRa0ZCUVR0VlFVRkJMSE5DUVVGQk8wRldkM1JDUmpzN1FWVnlkRUpCTzBWQlEwVXNaVXhKTkVJN1JVdElOVUlzYVVSTVNUUkNPMFZMU0RWQ0xHZENRVUZCTzBWQlEwRXNaMEpCUVVFN1JVRkRRU3g1UWt4a05FSTdRVXh6ZFVJNVFpSXNJbVpwYkdVaU9pSnRZV2x1TG1OemN5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJa0JqYUdGeWMyVjBJRndpVlZSR0xUaGNJanRjYmk4cUlTQnViM0p0WVd4cGVtVXVZM056SUhZNExqQXVNU0I4SUUxSlZDQk1hV05sYm5ObElId2daMmwwYUhWaUxtTnZiUzl1WldOdmJHRnpMMjV2Y20xaGJHbDZaUzVqYzNNZ0tpOWNiaThxSUVSdlkzVnRaVzUwWEc0Z0lDQTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQU0FxTDF4dUx5b3FYRzRnS2lBeExpQkRiM0p5WldOMElIUm9aU0JzYVc1bElHaGxhV2RvZENCcGJpQmhiR3dnWW5KdmQzTmxjbk11WEc0Z0tpQXlMaUJRY21WMlpXNTBJR0ZrYW5WemRHMWxiblJ6SUc5bUlHWnZiblFnYzJsNlpTQmhablJsY2lCdmNtbGxiblJoZEdsdmJpQmphR0Z1WjJWeklHbHVJR2xQVXk1Y2JpQXFMMXh1THlvZ1UyVmpkR2x2Ym5OY2JpQWdJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5SUNvdlhHNHZLaXBjYmlBcUlGSmxiVzkyWlNCMGFHVWdiV0Z5WjJsdUlHbHVJR0ZzYkNCaWNtOTNjMlZ5Y3k1Y2JpQXFMMXh1THlvcVhHNGdLaUJTWlc1a1pYSWdkR2hsSUdCdFlXbHVZQ0JsYkdWdFpXNTBJR052Ym5OcGMzUmxiblJzZVNCcGJpQkpSUzVjYmlBcUwxeHVMeW9xWEc0Z0tpQkRiM0p5WldOMElIUm9aU0JtYjI1MElITnBlbVVnWVc1a0lHMWhjbWRwYmlCdmJpQmdhREZnSUdWc1pXMWxiblJ6SUhkcGRHaHBiaUJnYzJWamRHbHZibUFnWVc1a1hHNGdLaUJnWVhKMGFXTnNaV0FnWTI5dWRHVjRkSE1nYVc0Z1EyaHliMjFsTENCR2FYSmxabTk0TENCaGJtUWdVMkZtWVhKcExseHVJQ292WEc0dktpQkhjbTkxY0dsdVp5QmpiMjUwWlc1MFhHNGdJQ0E5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFNBcUwxeHVMeW9xWEc0Z0tpQXhMaUJCWkdRZ2RHaGxJR052Y25KbFkzUWdZbTk0SUhOcGVtbHVaeUJwYmlCR2FYSmxabTk0TGx4dUlDb2dNaTRnVTJodmR5QjBhR1VnYjNabGNtWnNiM2NnYVc0Z1JXUm5aU0JoYm1RZ1NVVXVYRzRnS2k5Y2JpOHFLbHh1SUNvZ01TNGdRMjl5Y21WamRDQjBhR1VnYVc1b1pYSnBkR0Z1WTJVZ1lXNWtJSE5qWVd4cGJtY2diMllnWm05dWRDQnphWHBsSUdsdUlHRnNiQ0JpY205M2MyVnljeTVjYmlBcUlESXVJRU52Y25KbFkzUWdkR2hsSUc5a1pDQmdaVzFnSUdadmJuUWdjMmw2YVc1bklHbHVJR0ZzYkNCaWNtOTNjMlZ5Y3k1Y2JpQXFMMXh1THlvZ1ZHVjRkQzFzWlhabGJDQnpaVzFoYm5ScFkzTmNiaUFnSUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzR2S2lwY2JpQXFJRkpsYlc5MlpTQjBhR1VnWjNKaGVTQmlZV05yWjNKdmRXNWtJRzl1SUdGamRHbDJaU0JzYVc1cmN5QnBiaUJKUlNBeE1DNWNiaUFxTDF4dUx5b3FYRzRnS2lBeExpQlNaVzF2ZG1VZ2RHaGxJR0p2ZEhSdmJTQmliM0prWlhJZ2FXNGdRMmh5YjIxbElEVTNMVnh1SUNvZ01pNGdRV1JrSUhSb1pTQmpiM0p5WldOMElIUmxlSFFnWkdWamIzSmhkR2x2YmlCcGJpQkRhSEp2YldVc0lFVmtaMlVzSUVsRkxDQlBjR1Z5WVN3Z1lXNWtJRk5oWm1GeWFTNWNiaUFxTDF4dUx5b3FYRzRnS2lCQlpHUWdkR2hsSUdOdmNuSmxZM1FnWm05dWRDQjNaV2xuYUhRZ2FXNGdRMmh5YjIxbExDQkZaR2RsTENCaGJtUWdVMkZtWVhKcExseHVJQ292WEc0dktpcGNiaUFxSURFdUlFTnZjbkpsWTNRZ2RHaGxJR2x1YUdWeWFYUmhibU5sSUdGdVpDQnpZMkZzYVc1bklHOW1JR1p2Ym5RZ2MybDZaU0JwYmlCaGJHd2dZbkp2ZDNObGNuTXVYRzRnS2lBeUxpQkRiM0p5WldOMElIUm9aU0J2WkdRZ1lHVnRZQ0JtYjI1MElITnBlbWx1WnlCcGJpQmhiR3dnWW5KdmQzTmxjbk11WEc0Z0tpOWNiaThxS2x4dUlDb2dRV1JrSUhSb1pTQmpiM0p5WldOMElHWnZiblFnYzJsNlpTQnBiaUJoYkd3Z1luSnZkM05sY25NdVhHNGdLaTljYmk4cUtseHVJQ29nVUhKbGRtVnVkQ0JnYzNWaVlDQmhibVFnWUhOMWNHQWdaV3hsYldWdWRITWdabkp2YlNCaFptWmxZM1JwYm1jZ2RHaGxJR3hwYm1VZ2FHVnBaMmgwSUdsdVhHNGdLaUJoYkd3Z1luSnZkM05sY25NdVhHNGdLaTljYmk4cUlFVnRZbVZrWkdWa0lHTnZiblJsYm5SY2JpQWdJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5SUNvdlhHNHZLaXBjYmlBcUlGSmxiVzkyWlNCMGFHVWdZbTl5WkdWeUlHOXVJR2x0WVdkbGN5QnBibk5wWkdVZ2JHbHVhM01nYVc0Z1NVVWdNVEF1WEc0Z0tpOWNiaThxSUVadmNtMXpYRzRnSUNBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBTQXFMMXh1THlvcVhHNGdLaUF4TGlCRGFHRnVaMlVnZEdobElHWnZiblFnYzNSNWJHVnpJR2x1SUdGc2JDQmljbTkzYzJWeWN5NWNiaUFxSURJdUlGSmxiVzkyWlNCMGFHVWdiV0Z5WjJsdUlHbHVJRVpwY21WbWIzZ2dZVzVrSUZOaFptRnlhUzVjYmlBcUwxeHVMeW9xWEc0Z0tpQlRhRzkzSUhSb1pTQnZkbVZ5Wm14dmR5QnBiaUJKUlM1Y2JpQXFJREV1SUZOb2IzY2dkR2hsSUc5MlpYSm1iRzkzSUdsdUlFVmtaMlV1WEc0Z0tpOWNiaThxS2x4dUlDb2dVbVZ0YjNabElIUm9aU0JwYm1obGNtbDBZVzVqWlNCdlppQjBaWGgwSUhSeVlXNXpabTl5YlNCcGJpQkZaR2RsTENCR2FYSmxabTk0TENCaGJtUWdTVVV1WEc0Z0tpQXhMaUJTWlcxdmRtVWdkR2hsSUdsdWFHVnlhWFJoYm1ObElHOW1JSFJsZUhRZ2RISmhibk5tYjNKdElHbHVJRVpwY21WbWIzZ3VYRzRnS2k5Y2JpOHFLbHh1SUNvZ1EyOXljbVZqZENCMGFHVWdhVzVoWW1sc2FYUjVJSFJ2SUhOMGVXeGxJR05zYVdOcllXSnNaU0IwZVhCbGN5QnBiaUJwVDFNZ1lXNWtJRk5oWm1GeWFTNWNiaUFxTDF4dUx5b3FYRzRnS2lCU1pXMXZkbVVnZEdobElHbHVibVZ5SUdKdmNtUmxjaUJoYm1RZ2NHRmtaR2x1WnlCcGJpQkdhWEpsWm05NExseHVJQ292WEc0dktpcGNiaUFxSUZKbGMzUnZjbVVnZEdobElHWnZZM1Z6SUhOMGVXeGxjeUIxYm5ObGRDQmllU0IwYUdVZ2NISmxkbWx2ZFhNZ2NuVnNaUzVjYmlBcUwxeHVMeW9xWEc0Z0tpQkRiM0p5WldOMElIUm9aU0J3WVdSa2FXNW5JR2x1SUVacGNtVm1iM2d1WEc0Z0tpOWNiaThxS2x4dUlDb2dNUzRnUTI5eWNtVmpkQ0IwYUdVZ2RHVjRkQ0IzY21Gd2NHbHVaeUJwYmlCRlpHZGxJR0Z1WkNCSlJTNWNiaUFxSURJdUlFTnZjbkpsWTNRZ2RHaGxJR052Ykc5eUlHbHVhR1Z5YVhSaGJtTmxJR1p5YjIwZ1lHWnBaV3hrYzJWMFlDQmxiR1Z0Wlc1MGN5QnBiaUJKUlM1Y2JpQXFJRE11SUZKbGJXOTJaU0IwYUdVZ2NHRmtaR2x1WnlCemJ5QmtaWFpsYkc5d1pYSnpJR0Z5WlNCdWIzUWdZMkYxWjJoMElHOTFkQ0IzYUdWdUlIUm9aWGtnZW1WeWJ5QnZkWFJjYmlBcUlDQWdJR0JtYVdWc1pITmxkR0FnWld4bGJXVnVkSE1nYVc0Z1lXeHNJR0p5YjNkelpYSnpMbHh1SUNvdlhHNHZLaXBjYmlBcUlFRmtaQ0IwYUdVZ1kyOXljbVZqZENCMlpYSjBhV05oYkNCaGJHbG5ibTFsYm5RZ2FXNGdRMmh5YjIxbExDQkdhWEpsWm05NExDQmhibVFnVDNCbGNtRXVYRzRnS2k5Y2JpOHFLbHh1SUNvZ1VtVnRiM1psSUhSb1pTQmtaV1poZFd4MElIWmxjblJwWTJGc0lITmpjbTlzYkdKaGNpQnBiaUJKUlNBeE1Dc3VYRzRnS2k5Y2JpOHFLbHh1SUNvZ01TNGdRV1JrSUhSb1pTQmpiM0p5WldOMElHSnZlQ0J6YVhwcGJtY2dhVzRnU1VVZ01UQXVYRzRnS2lBeUxpQlNaVzF2ZG1VZ2RHaGxJSEJoWkdScGJtY2dhVzRnU1VVZ01UQXVYRzRnS2k5Y2JpOHFLbHh1SUNvZ1EyOXljbVZqZENCMGFHVWdZM1Z5YzI5eUlITjBlV3hsSUc5bUlHbHVZM0psYldWdWRDQmhibVFnWkdWamNtVnRaVzUwSUdKMWRIUnZibk1nYVc0Z1EyaHliMjFsTGx4dUlDb3ZYRzR2S2lwY2JpQXFJREV1SUVOdmNuSmxZM1FnZEdobElHOWtaQ0JoY0hCbFlYSmhibU5sSUdsdUlFTm9jbTl0WlNCaGJtUWdVMkZtWVhKcExseHVJQ29nTWk0Z1EyOXljbVZqZENCMGFHVWdiM1YwYkdsdVpTQnpkSGxzWlNCcGJpQlRZV1poY21rdVhHNGdLaTljYmk4cUtseHVJQ29nVW1WdGIzWmxJSFJvWlNCcGJtNWxjaUJ3WVdSa2FXNW5JR2x1SUVOb2NtOXRaU0JoYm1RZ1UyRm1ZWEpwSUc5dUlHMWhZMDlUTGx4dUlDb3ZYRzR2S2lwY2JpQXFJREV1SUVOdmNuSmxZM1FnZEdobElHbHVZV0pwYkdsMGVTQjBieUJ6ZEhsc1pTQmpiR2xqYTJGaWJHVWdkSGx3WlhNZ2FXNGdhVTlUSUdGdVpDQlRZV1poY21rdVhHNGdLaUF5TGlCRGFHRnVaMlVnWm05dWRDQndjbTl3WlhKMGFXVnpJSFJ2SUdCcGJtaGxjbWwwWUNCcGJpQlRZV1poY21rdVhHNGdLaTljYmk4cUlFbHVkR1Z5WVdOMGFYWmxYRzRnSUNBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBTQXFMMXh1THlwY2JpQXFJRUZrWkNCMGFHVWdZMjl5Y21WamRDQmthWE53YkdGNUlHbHVJRVZrWjJVc0lFbEZJREV3S3l3Z1lXNWtJRVpwY21WbWIzZ3VYRzRnS2k5Y2JpOHFYRzRnS2lCQlpHUWdkR2hsSUdOdmNuSmxZM1FnWkdsemNHeGhlU0JwYmlCaGJHd2dZbkp2ZDNObGNuTXVYRzRnS2k5Y2JpOHFJRTFwYzJOY2JpQWdJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5SUNvdlhHNHZLaXBjYmlBcUlFRmtaQ0IwYUdVZ1kyOXljbVZqZENCa2FYTndiR0Y1SUdsdUlFbEZJREV3S3k1Y2JpQXFMMXh1THlvcVhHNGdLaUJCWkdRZ2RHaGxJR052Y25KbFkzUWdaR2x6Y0d4aGVTQnBiaUJKUlNBeE1DNWNiaUFxTDF4dWFIUnRiQ0I3WEc0Z0lHeHBibVV0YUdWcFoyaDBPaUF4TGpFMU8xeHVJQ0F0ZDJWaWEybDBMWFJsZUhRdGMybDZaUzFoWkdwMWMzUTZJREV3TUNVN1hHNTlYRzVjYm1KdlpIa2dlMXh1SUNCdFlYSm5hVzQ2SURBN1hHNTlYRzVjYm0xaGFXNGdlMXh1SUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYm4xY2JseHVhREVnZTF4dUlDQm1iMjUwTFhOcGVtVTZJREpsYlR0Y2JpQWdiV0Z5WjJsdU9pQXdMalkzWlcwZ01EdGNibjFjYmx4dWFISWdlMXh1SUNCaWIzZ3RjMmw2YVc1bk9pQmpiMjUwWlc1MExXSnZlRHRjYmlBZ2FHVnBaMmgwT2lBd08xeHVJQ0J2ZG1WeVpteHZkem9nZG1semFXSnNaVHRjYm4xY2JseHVjSEpsSUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUcxdmJtOXpjR0ZqWlN3Z2JXOXViM053WVdObE8xeHVJQ0JtYjI1MExYTnBlbVU2SURGbGJUdGNibjFjYmx4dVlTQjdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhSeVlXNXpjR0Z5Wlc1ME8xeHVmVnh1WEc1aFltSnlXM1JwZEd4bFhTQjdYRzRnSUdKdmNtUmxjaTFpYjNSMGIyMDZJRzV2Ym1VN1hHNGdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dkVzVrWlhKc2FXNWxPMXh1SUNCMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUhWdVpHVnliR2x1WlNCa2IzUjBaV1E3WEc1OVhHNWNibUlnZTF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nWW05c1pHVnlPMXh1ZlZ4dVhHNXpkSEp2Ym1jZ2UxeHVJQ0JtYjI1MExYZGxhV2RvZERvZ1ltOXNaR1Z5TzF4dWZWeHVYRzVqYjJSbElIdGNiaUFnWm05dWRDMW1ZVzFwYkhrNklHMXZibTl6Y0dGalpTd2diVzl1YjNOd1lXTmxPMXh1SUNCbWIyNTBMWE5wZW1VNklERmxiVHRjYm4xY2JseHVhMkprSUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUcxdmJtOXpjR0ZqWlN3Z2JXOXViM053WVdObE8xeHVJQ0JtYjI1MExYTnBlbVU2SURGbGJUdGNibjFjYmx4dWMyRnRjQ0I3WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUJ0YjI1dmMzQmhZMlVzSUcxdmJtOXpjR0ZqWlR0Y2JpQWdabTl1ZEMxemFYcGxPaUF4WlcwN1hHNTlYRzVjYm5OdFlXeHNJSHRjYmlBZ1ptOXVkQzF6YVhwbE9pQTRNQ1U3WEc1OVhHNWNibk4xWWlCN1hHNGdJR1p2Ym5RdGMybDZaVG9nTnpVbE8xeHVJQ0JzYVc1bExXaGxhV2RvZERvZ01EdGNiaUFnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQjJaWEowYVdOaGJDMWhiR2xuYmpvZ1ltRnpaV3hwYm1VN1hHNGdJR0p2ZEhSdmJUb2dMVEF1TWpWbGJUdGNibjFjYmx4dWMzVndJSHRjYmlBZ1ptOXVkQzF6YVhwbE9pQTNOU1U3WEc0Z0lHeHBibVV0YUdWcFoyaDBPaUF3TzF4dUlDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUhabGNuUnBZMkZzTFdGc2FXZHVPaUJpWVhObGJHbHVaVHRjYmlBZ2RHOXdPaUF0TUM0MVpXMDdYRzU5WEc1Y2JtbHRaeUI3WEc0Z0lHSnZjbVJsY2kxemRIbHNaVG9nYm05dVpUdGNibjFjYmx4dVluVjBkRzl1SUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUdsdWFHVnlhWFE3WEc0Z0lHWnZiblF0YzJsNlpUb2dNVEF3SlR0Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SURFdU1UVTdYRzRnSUcxaGNtZHBiam9nTUR0Y2JpQWdiM1psY21ac2IzYzZJSFpwYzJsaWJHVTdYRzRnSUhSbGVIUXRkSEpoYm5ObWIzSnRPaUJ1YjI1bE8xeHVJQ0JpWVdOclozSnZkVzVrT2lCdWIyNWxPMXh1SUNCaWIzSmtaWEk2SUc1dmJtVTdYRzRnSUdOMWNuTnZjam9nY0c5cGJuUmxjanRjYmlBZ0xYZGxZbXRwZEMxaGNIQmxZWEpoYm1ObE9pQmlkWFIwYjI0N1hHNTlYRzVpZFhSMGIyNDZPaTF0YjNvdFptOWpkWE10YVc1dVpYSWdlMXh1SUNCaWIzSmtaWEl0YzNSNWJHVTZJRzV2Ym1VN1hHNGdJSEJoWkdScGJtYzZJREE3WEc1OVhHNWlkWFIwYjI0NkxXMXZlaTFtYjJOMWMzSnBibWNnZTF4dUlDQnZkWFJzYVc1bE9pQXhjSGdnWkc5MGRHVmtJRUoxZEhSdmJsUmxlSFE3WEc1OVhHNWNibWx1Y0hWMElIdGNiaUFnWm05dWRDMW1ZVzFwYkhrNklHbHVhR1Z5YVhRN1hHNGdJR1p2Ym5RdGMybDZaVG9nTVRBd0pUdGNiaUFnYkdsdVpTMW9aV2xuYUhRNklERXVNVFU3WEc0Z0lHMWhjbWRwYmpvZ01EdGNiaUFnYjNabGNtWnNiM2M2SUhacGMybGliR1U3WEc1OVhHNWNibTl3ZEdkeWIzVndJSHRjYmlBZ1ptOXVkQzFtWVcxcGJIazZJR2x1YUdWeWFYUTdYRzRnSUdadmJuUXRjMmw2WlRvZ01UQXdKVHRjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREV1TVRVN1hHNGdJRzFoY21kcGJqb2dNRHRjYm4xY2JseHVjMlZzWldOMElIdGNiaUFnWm05dWRDMW1ZVzFwYkhrNklHbHVhR1Z5YVhRN1hHNGdJR1p2Ym5RdGMybDZaVG9nTVRBd0pUdGNiaUFnYkdsdVpTMW9aV2xuYUhRNklERXVNVFU3WEc0Z0lHMWhjbWRwYmpvZ01EdGNiaUFnZEdWNGRDMTBjbUZ1YzJadmNtMDZJRzV2Ym1VN1hHNTlYRzVjYm5SbGVIUmhjbVZoSUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUdsdWFHVnlhWFE3WEc0Z0lHWnZiblF0YzJsNlpUb2dNVEF3SlR0Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SURFdU1UVTdYRzRnSUcxaGNtZHBiam9nTUR0Y2JpQWdiM1psY21ac2IzYzZJR0YxZEc4N1hHNTlYRzVjYmx0MGVYQmxQV0oxZEhSdmJsMGdlMXh1SUNBdGQyVmlhMmwwTFdGd2NHVmhjbUZ1WTJVNklHSjFkSFJ2Ymp0Y2JuMWNibHQwZVhCbFBXSjFkSFJ2YmwwNk9pMXRiM290Wm05amRYTXRhVzV1WlhJZ2UxeHVJQ0JpYjNKa1pYSXRjM1I1YkdVNklHNXZibVU3WEc0Z0lIQmhaR1JwYm1jNklEQTdYRzU5WEc1YmRIbHdaVDFpZFhSMGIyNWRPaTF0YjNvdFptOWpkWE55YVc1bklIdGNiaUFnYjNWMGJHbHVaVG9nTVhCNElHUnZkSFJsWkNCQ2RYUjBiMjVVWlhoME8xeHVmVnh1WEc1YmRIbHdaVDF5WlhObGRGMGdlMXh1SUNBdGQyVmlhMmwwTFdGd2NHVmhjbUZ1WTJVNklHSjFkSFJ2Ymp0Y2JuMWNibHQwZVhCbFBYSmxjMlYwWFRvNkxXMXZlaTFtYjJOMWN5MXBibTVsY2lCN1hHNGdJR0p2Y21SbGNpMXpkSGxzWlRvZ2JtOXVaVHRjYmlBZ2NHRmtaR2x1WnpvZ01EdGNibjFjYmx0MGVYQmxQWEpsYzJWMFhUb3RiVzk2TFdadlkzVnpjbWx1WnlCN1hHNGdJRzkxZEd4cGJtVTZJREZ3ZUNCa2IzUjBaV1FnUW5WMGRHOXVWR1Y0ZER0Y2JuMWNibHh1VzNSNWNHVTljM1ZpYldsMFhTQjdYRzRnSUMxM1pXSnJhWFF0WVhCd1pXRnlZVzVqWlRvZ1luVjBkRzl1TzF4dWZWeHVXM1I1Y0dVOWMzVmliV2wwWFRvNkxXMXZlaTFtYjJOMWN5MXBibTVsY2lCN1hHNGdJR0p2Y21SbGNpMXpkSGxzWlRvZ2JtOXVaVHRjYmlBZ2NHRmtaR2x1WnpvZ01EdGNibjFjYmx0MGVYQmxQWE4xWW0xcGRGMDZMVzF2ZWkxbWIyTjFjM0pwYm1jZ2UxeHVJQ0J2ZFhSc2FXNWxPaUF4Y0hnZ1pHOTBkR1ZrSUVKMWRIUnZibFJsZUhRN1hHNTlYRzVjYm1acFpXeGtjMlYwSUh0Y2JpQWdjR0ZrWkdsdVp6b2dNQzR6TldWdElEQXVOelZsYlNBd0xqWXlOV1Z0TzF4dWZWeHVYRzVzWldkbGJtUWdlMXh1SUNCaWIzZ3RjMmw2YVc1bk9pQmliM0prWlhJdFltOTRPMXh1SUNCamIyeHZjam9nYVc1b1pYSnBkRHRjYmlBZ1pHbHpjR3hoZVRvZ2RHRmliR1U3WEc0Z0lHMWhlQzEzYVdSMGFEb2dNVEF3SlR0Y2JpQWdjR0ZrWkdsdVp6b2dNRHRjYmlBZ2QyaHBkR1V0YzNCaFkyVTZJRzV2Y20xaGJEdGNibjFjYmx4dWNISnZaM0psYzNNZ2UxeHVJQ0IyWlhKMGFXTmhiQzFoYkdsbmJqb2dZbUZ6Wld4cGJtVTdYRzU5WEc1Y2JsdDBlWEJsUFdOb1pXTnJZbTk0WFNCN1hHNGdJR0p2ZUMxemFYcHBibWM2SUdKdmNtUmxjaTFpYjNnN1hHNGdJSEJoWkdScGJtYzZJREE3WEc1OVhHNWNibHQwZVhCbFBYSmhaR2x2WFNCN1hHNGdJR0p2ZUMxemFYcHBibWM2SUdKdmNtUmxjaTFpYjNnN1hHNGdJSEJoWkdScGJtYzZJREE3WEc1OVhHNWNibHQwZVhCbFBXNTFiV0psY2wwNk9pMTNaV0pyYVhRdGFXNXVaWEl0YzNCcGJpMWlkWFIwYjI0Z2UxeHVJQ0JvWldsbmFIUTZJR0YxZEc4N1hHNTlYRzViZEhsd1pUMXVkVzFpWlhKZE9qb3RkMlZpYTJsMExXOTFkR1Z5TFhOd2FXNHRZblYwZEc5dUlIdGNiaUFnYUdWcFoyaDBPaUJoZFhSdk8xeHVmVnh1WEc1YmRIbHdaVDF6WldGeVkyaGRJSHRjYmlBZ0xYZGxZbXRwZEMxaGNIQmxZWEpoYm1ObE9pQjBaWGgwWm1sbGJHUTdYRzRnSUc5MWRHeHBibVV0YjJabWMyVjBPaUF0TW5CNE8xeHVmVnh1VzNSNWNHVTljMlZoY21Ob1hUbzZMWGRsWW10cGRDMXpaV0Z5WTJndFpHVmpiM0poZEdsdmJpQjdYRzRnSUMxM1pXSnJhWFF0WVhCd1pXRnlZVzVqWlRvZ2JtOXVaVHRjYm4xY2JsdDBlWEJsUFhObFlYSmphRjA2T2kxM1pXSnJhWFF0Wm1sc1pTMTFjR3h2WVdRdFluVjBkRzl1SUh0Y2JpQWdMWGRsWW10cGRDMWhjSEJsWVhKaGJtTmxPaUJpZFhSMGIyNDdYRzRnSUdadmJuUTZJR2x1YUdWeWFYUTdYRzU5WEc1Y2JtUmxkR0ZwYkhNZ2UxeHVJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNibjFjYmx4dWMzVnRiV0Z5ZVNCN1hHNGdJR1JwYzNCc1lYazZJR3hwYzNRdGFYUmxiVHRjYm4xY2JseHVkR1Z0Y0d4aGRHVWdlMXh1SUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1ZlZ4dVhHNWJhR2xrWkdWdVhTQjdYRzRnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzU5WEc1Y2JpOHFYRzVEVlZOVVQwMGdVMFZVVkVsT1IxTmNiaW92WEc0cU9qcGlaV1p2Y21Vc1hHNHFPanBoWm5SbGNpQjdYRzRnSUhCaFpHUnBibWM2SURBN1hHNGdJRzFoY21kcGJqb2dNRHRjYmlBZ1ltOXlaR1Z5T2lBd08xeHVJQ0JpYjNndGMybDZhVzVuT2lCaWIzSmtaWEl0WW05NE8xeHVmVnh1WEc1aElIdGNiaUFnZEdWNGRDMWtaV052Y21GMGFXOXVPaUJ1YjI1bE8xeHVmVnh1WEc1MWJDeGNibTlzTEZ4dWJHa2dlMXh1SUNCc2FYTjBMWE4wZVd4bE9pQnViMjVsTzF4dWZWeHVYRzVBWm05dWRDMW1ZV05sSUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUZ3aVNXNTBaWEpjSWp0Y2JpQWdabTl1ZEMxemRIbHNaVG9nYm05eWJXRnNPMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dNakF3TzF4dUlDQnpjbU02SUhWeWJDaGNJaTltYjI1MEwwbHVkR1Z5TFVWNGRISmhUR2xuYUhRdWQyOW1aakpjSWlrZ1ptOXliV0YwS0Z3aWQyOW1aakpjSWlrN1hHNGdJR1p2Ym5RdFpHbHpjR3hoZVRvZ2MzZGhjRHRjYm4xY2JrQm1iMjUwTFdaaFkyVWdlMXh1SUNCbWIyNTBMV1poYldsc2VUb2dYQ0pKYm5SbGNsd2lPMXh1SUNCbWIyNTBMWE4wZVd4bE9pQnViM0p0WVd3N1hHNGdJR1p2Ym5RdGQyVnBaMmgwT2lBME1EQTdYRzRnSUhOeVl6b2dkWEpzS0Z3aUwyWnZiblF2U1c1MFpYSXRVbVZuZFd4aGNpNTNiMlptTWx3aUtTQm1iM0p0WVhRb1hDSjNiMlptTWx3aUtUdGNiaUFnWm05dWRDMWthWE53YkdGNU9pQnpkMkZ3TzF4dWZWeHVRR1p2Ym5RdFptRmpaU0I3WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUJjSWtsdWRHVnlYQ0k3WEc0Z0lHWnZiblF0YzNSNWJHVTZJRzV2Y20xaGJEdGNiaUFnWm05dWRDMTNaV2xuYUhRNklEY3dNRHRjYmlBZ2MzSmpPaUIxY213b1hDSXZabTl1ZEM5SmJuUmxjaTFDYjJ4a0xuZHZabVl5WENJcElHWnZjbTFoZENoY0luZHZabVl5WENJcE8xeHVJQ0JtYjI1MExXUnBjM0JzWVhrNklITjNZWEE3WEc1OVhHNHVkbWx6ZFdGc2JIa3RhR2xrWkdWdUlIdGNiaUFnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQjNhV1IwYURvZ01YQjRPMXh1SUNCb1pXbG5hSFE2SURGd2VEdGNiaUFnYldGeVoybHVPaUF0TVhCNE8xeHVJQ0J3WVdSa2FXNW5PaUF3TzF4dUlDQnZkbVZ5Wm14dmR6b2dhR2xrWkdWdU8xeHVJQ0IzYUdsMFpTMXpjR0ZqWlRvZ2JtOTNjbUZ3TzF4dUlDQmliM0prWlhJNklEQTdYRzRnSUdOc2FYQTZJSEpsWTNRb01DQXdJREFnTUNrN1hHNGdJR05zYVhBdGNHRjBhRG9nYVc1elpYUW9NVEF3SlNrN1hHNTlYRzVjYmk1MGFYUnNaU0I3WEc0Z0lHWnZiblF0YzJsNlpUb2dOREJ3ZUR0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SURjd01EdGNiaUFnYkdsdVpTMW9aV2xuYUhRNklEUTRjSGc3WEc0Z0lHeGxkSFJsY2kxemNHRmphVzVuT2lBd1pXMDdYRzRnSUhSbGVIUXRZV3hwWjI0NklHeGxablE3WEc0Z0lHMWhjbWRwYmkxMGIzQTZJREE3WEc0Z0lHMWhjbWRwYmkxaWIzUjBiMjA2SURJd2NIZzdYRzU5WEc1Y2JpNTNjbUZ3Y0dWeUlIdGNiaUFnYldGNExYZHBaSFJvT2lBeE5EUXdjSGc3WEc0Z0lHMWhjbWRwYmkxc1pXWjBPaUJoZFhSdk8xeHVJQ0J0WVhKbmFXNHRjbWxuYUhRNklHRjFkRzg3WEc0Z0lIQmhaR1JwYm1jdGJHVm1kRG9nTVRad2VEdGNiaUFnY0dGa1pHbHVaeTF5YVdkb2REb2dNVFp3ZUR0Y2JpQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdabXhsZUMxa2FYSmxZM1JwYjI0NklHTnZiSFZ0Ymp0Y2JuMWNibHh1TG1sekxXRmpkR2wyWlNCN1hHNGdJR1p2Ym5RdGQyVnBaMmgwT2lBM01EQTdYRzRnSUdadmJuUXRjMmw2WlRvZ01UaHdlRHRjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREl5Y0hnN1hHNGdJR3hsZEhSbGNpMXpjR0ZqYVc1bk9pQXdaVzA3WEc0Z0lIUmxlSFF0WVd4cFoyNDZJR3hsWm5RN1hHNTlYRzVjYmk1aWRHNHRZWEp5YjNjZ2UxeHVJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0IzYVdSMGFEb2dNVEF3Y0hnN1hHNGdJR2hsYVdkb2REb2dNVEF3Y0hnN1hHNTlYRzR1WW5SdUxYZG9hWFJsSUh0Y2JpQWdabTl1ZEMxemFYcGxPaUEwTUhCNE8xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ056QXdPMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dORGh3ZUR0Y2JuMWNibHh1TG1admNtMGdlMXh1SUNCdFlYSm5hVzR0ZEc5d09pQTRPSEI0TzF4dWZWeHVMbVp2Y20xZlgybHVkSEp2SUh0Y2JpQWdaR2x6Y0d4aGVUb2daM0pwWkR0Y2JpQWdaM0pwWkMxMFpXMXdiR0YwWlMxamIyeDFiVzV6T2lCeVpYQmxZWFFvTXl3Z01XWnlLVHRjYm4xY2JpNW1iM0p0WDE5cGJuUnlieUJvTWlCN1hHNGdJR2R5YVdRdFkyOXNkVzF1T2lBeUx6TTdYRzRnSUdwMWMzUnBabmt0YzJWc1pqb2dZMlZ1ZEdWeU8xeHVmVnh1TG1admNtMWZYMmx1ZEhKdklHSjFkSFJ2YmlCN1hHNGdJR2R5YVdRdFkyOXNkVzF1T2lBekx6UTdYRzRnSUdwMWMzUnBabmt0YzJWc1pqb2daVzVrTzF4dUlDQnFkWE4wYVdaNUxXbDBaVzF6T2lCaVlYTmxiR2x1WlR0Y2JuMWNiaTVtYjNKdElHWnZjbTBnZTF4dUlDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQm1iR1Y0TFdScGNtVmpkR2x2YmpvZ1kyOXNkVzF1TzF4dWZWeHVMbVp2Y20wZ1ptbGxiR1J6WlhRZ2UxeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXlOWEI0TzF4dUlDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUdKdmNtUmxjam9nYm05dVpUdGNiaUFnWkdsemNHeGhlVG9nWjNKcFpEdGNiaUFnWjNKcFpDMTBaVzF3YkdGMFpTMWpiMngxYlc1ek9pQXhabklnTVdaeUlEWXdjSGdnTVdaeUlERm1janRjYmlBZ1oyRndPaUExTUhCNE8xeHVmVnh1TG1admNtMGdabWxsYkdSelpYUTZibTkwS0RwbWFYSnpkQzF2WmkxMGVYQmxLU0I3WEc0Z0lHMWhjbWRwYmkxMGIzQTZJREkxY0hnN1hHNTlYRzR1Wm05eWJTQm1hV1ZzWkhObGRDQm9OQ0I3WEc0Z0lHZHlhV1F0WTI5c2RXMXVPaUF5THpNN1hHNGdJR1p2Ym5RdGMybDZaVG9nTWpSd2VEdGNiaUFnWm05dWRDMTNaV2xuYUhRNklESXdNRHRjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREk1Y0hnN1hHNGdJSFJsZUhRdFlXeHBaMjQ2SUdWdVpEdGNiaUFnYldGeVoybHVMWFJ2Y0RvZ09IQjRPMXh1ZlZ4dUxtWnZjbTBnWm1sbGJHUnpaWFFnY0NCN1hHNGdJRzFoY21kcGJpMTBiM0E2SURod2VEdGNiaUFnYW5WemRHbG1lUzF6Wld4bU9pQmpaVzUwWlhJN1hHNTlYRzR1Wm05eWJWOWZjM1JoWjJVZ2UxeHVJQ0JrYVhOd2JHRjVPaUJuY21sa08xeHVJQ0JuY21sa0xYUmxiWEJzWVhSbExXTnZiSFZ0Ym5NNklESm1jaUExWm5JN1hHNTlYRzR1Wm05eWJWOWZjM1JoWjJVZ2FETWdlMXh1SUNCbmNtbGtMV052YkhWdGJqb2dNUzh5TzF4dUlDQm5jbWxrTFhKdmR6b2dNUzh5TzF4dWZWeHVMbVp2Y20xZlgzTjBZV2RsSUhOdFlXeHNJSHRjYmlBZ1ozSnBaQzFqYjJ4MWJXNDZJREV2TWp0Y2JpQWdaM0pwWkMxeWIzYzZJREl2TXp0Y2JpQWdabTl1ZEMxemFYcGxPaUF4TkhCNE8xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ05EQXdPMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dNVGR3ZUR0Y2JuMWNibHh1TG1admNtMWZYMnhwYzNRZ2UxeHVJQ0JuY21sa0xXTnZiSFZ0YmpvZ05DOHRNVHRjYmlBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ1pteGxlQzFrYVhKbFkzUnBiMjQ2SUdOdmJIVnRianRjYmlBZ1oyRndPaUE0Y0hnN1hHNGdJSGRwWkhSb09pQm1hWFF0WTI5dWRHVnVkRHRjYm4xY2JpNW1iM0p0WDE5c2FYTjBJR3hoWW1Wc0lIdGNiaUFnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQmhiR2xuYmkxcGRHVnRjem9nWW1GelpXeHBibVU3WEc0Z0lHWnZiblF0YzJsNlpUb2dNVFp3ZUR0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SURJd01EdGNiaUFnYkdsdVpTMW9aV2xuYUhRNklERTVjSGc3WEc1OVhHNHVabTl5YlY5ZmJHbHpkQ0JzWVdKbGJDQXVabTl5YlY5ZmRHOXZiSFJwY0NCN1hHNGdJSFpwYzJsaWFXeHBkSGs2SUdocFpHUmxianRjYmlBZ2QybGtkR2c2SURFNU4zQjRPMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBalptWm1abVptTzF4dUlDQmliM2d0YzJoaFpHOTNPaUEyY0hnZ05uQjRJREUyY0hnZ09IQjRJSEpuWW1Fb01UYzBMQ0F4TnpRc0lERTVNaXdnTUM0ek5TazdYRzRnSUhSbGVIUXRZV3hwWjI0NklHbHVhWFJwWVd3N1hHNGdJSEJoWkdScGJtYzZJREl5Y0hnZ01UUndlRHRjYmlBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTm5CNE8xeHVJQ0JpYjNKa1pYSTZJREZ3ZUNCemIyeHBaQ0J5WjJKaEtERTNOU3dnTVRnMUxDQXhPVE1zSURBdU5qa3BPMXh1SUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJSG90YVc1a1pYZzZJREU3WEc0Z0lIUnZjRG9nTFRWd2VEdGNiaUFnYkdWbWREb2dNVEExSlR0Y2JpQWdabTl1ZEMxemFYcGxPaUF4TUhCNE8xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ01qQXdPMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dNVEp3ZUR0Y2JpQWdZMjlzYjNJNklDTXdaVEJsTUdVN1hHNTlYRzR1Wm05eWJWOWZiR2x6ZENCc1lXSmxiRHBvYjNabGNpQXVabTl5YlY5ZmRHOXZiSFJwY0NCN1hHNGdJSFpwYzJsaWFXeHBkSGs2SUhacGMybGliR1U3WEc1OVhHNHVabTl5YlY5ZmJHbHpkQ0JwYm5CMWRDQjdYRzRnSUcxaGNtZHBiaTF5YVdkb2REb2dNVEJ3ZUR0Y2JuMWNibHh1TG1admNtMWZYMkoxZEhSdmJuTWdlMXh1SUNCa2FYTndiR0Y1T2lCbmNtbGtPMXh1SUNCbmNtbGtMWFJsYlhCc1lYUmxMV052YkhWdGJuTTZJSEpsY0dWaGRDZ3pMQ0F4Wm5JcE8xeHVmVnh1TG1admNtMWZYMkoxZEhSdmJuTWdMbUowYmkxM2FHbDBaU0I3WEc0Z0lHZHlhV1F0WTI5c2RXMXVPaUF5THpNN1hHNGdJR0p2Y21SbGNqb2dNM0I0SUhOdmJHbGtJQ013WlRCbE1HVTdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJRFl3Y0hnN1hHNTlYRzR1Wm05eWJWOWZZblYwZEc5dWN5QXVZblJ1TFdGeWNtOTNJSHRjYmlBZ1ozSnBaQzFqYjJ4MWJXNDZJRE12TkR0Y2JpQWdhblZ6ZEdsbWVTMXpaV3htT2lCbGJtUTdYRzRnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hHNGdJSFJ5WVc1elptOXliVG9nY205MFlYUmxLREU0TUdSbFp5azdYRzU5WEc1Y2JpOHFJTkNTMEpqUWxDRFFvTkNRMEpmUW9OQ1EwSkhRbnRDaTBKclFtQ0FxTDF4dUxtWnZjbTFmWDJ4aFltVnNMV0p5WVc1a2FXNW5JQzVtYjNKdFgxOTBiMjlzZEdsd09qcGhablJsY2lCN1hHNGdJR052Ym5SbGJuUTZJRndpMEpqUXQ5R0QwWWZRdGRDOTBMalF0U0RRc2RHQTBMWFF2ZEMwMExBZzBMVFF1OUdQd3FEUmdOQzEwWWpRdGRDOTBMalJqeURRdXRDKzBMM1F1dEdBMExYUmd0QzkwWXZSaFNEUXZOQ3cwWURRdXRDMTBZTFF1TkM5MExQUXZ0Q3kwWXZSaFNEUXQ5Q3cwTFRRc05HSExDRFFzc0tnMFlMUXZ0Qzh3cURSaDlDNDBZSFF1OUMxSU5DLzBMN1FzdEdMMFlqUXRkQzkwTGpRdFNEUXV0QyswTDNRdXRHRDBZRFF0ZEM5MFlMUXZkQyswWUhRdjlDKzBZSFF2dEN4MEwzUXZ0R0IwWUxRdUN3ZzBZVFF2dEdBMEx6UXVOR0EwTDdRc3RDdzBMM1F1TkMxSU5HRDBMM1F1TkM2MExEUXU5R00wTDNRdnRDejBMNGcwTDdRc2RHQTBMRFF0OUN3TENEUXY5QyswTExSaTlHSTBMWFF2ZEM0MExVZzBZSFF1TkM4MEwvUXNOR0MwTGpRdUNEUXY5QyswWUxSZ05DMTBMSFF1TkdDMExYUXU5QzEwTGtzSU5Dd3dxRFJndEN3MExyUXR0QzFJTkMzMExEUXV0R0EwTFhRdjlDNzBMWFF2ZEM0MExVZzBMakNvTkMwMExEUXU5R00wTDNRdGRDNTBZalF0ZEMxSU5HQTBMRFF0OUN5MExqUmd0QzQwTFVnMEwvUXZ0QzMwTGpSaHRDNDBMZ2cwTDNRc01LZzBZRFJpOUM5MExyUXRTNWNJanRjYm4xY2JseHVMbVp2Y20xZlgyeGhZbVZzTFhKbFluSmhibVJwYm1jZ0xtWnZjbTFmWDNSdmIyeDBhWEE2T21GbWRHVnlJSHRjYmlBZ1kyOXVkR1Z1ZERvZ1hDTFFudEN4MEwzUXZ0Q3kwTHZRdGRDOTBMalF0U0RSZzlDMjBMWENvTkM0MEx6UXRkR08wWW5RdU5HRjBZSFJqeURRdXRDKzBMM1JodEMxMEwvUmd0QyswTElnMExqQ29OR0EwTFhRc05DNzBMalF0OUMrMExMUXNOQzkwTDNSaTlHRklOQzQwTFRRdGRDNUlOQzkwTERDb05DKzBZSFF2ZEMrMExMUXRTRFF2OUMrMEx2Umc5R0gwTFhRdmRDOTBMN1FzOUMrSU5DKzBML1JpOUdDMExBZzBMclF2dEM4MEwvUXNOQzkwTGpRdUNEUXZkQ3d3cURSZ05HTDBMM1F1dEMxTENEUXNzS2cwWUxRdnRDOHdxRFJoOUM0MFlIUXU5QzFJTkM0d3FEUXY5QyswTHZRdmRDKzBMVWcwWURRdGRDNjBMN1F2ZEdCMFlMUmdOR0QwTHJSaHRDNDBZOGcwTDdRc2RHQTBMRFF0OUN3SU5DNjBMN1F2TkMvMExEUXZkQzQwTGdnMFlIQ29OQzkwWVBRdTlHUExsd2lPMXh1ZlZ4dVhHNHVabTl5YlY5ZmJHRmlaV3d0Y21WMFlXbHNMV0p5WVc1a2FXNW5JQzVtYjNKdFgxOTBiMjlzZEdsd09qcGhablJsY2lCN1hHNGdJR052Ym5SbGJuUTZJRndpMEovUmdOQyswTFhRdXRHQzBMalJnTkMrMExMUXNOQzkwTGpRdFNEUXVNS2cwTDdRdjlHQzBMalF2TkM0MExmUXNOR0cwTGpSanlEUmd0QyswWURRczlDKzBMTFF2dEN6MEw0ZzBML1JnTkMrMFlIUmd0R0EwTERRdmRHQjBZTFFzdEN3TENEUmdOQ3cwTGZRc3RDNDBZTFF1TkMxSU5DNjBMRFJoOUMxMFlIUmd0Q3kwTEFnMExMUXQ5Q3cwTGpRdk5DKzBMVFF0ZEM1MFlIUmd0Q3kwTGpSanlEUmd0QyswWURRczlDKzBMTFJpOUdGSU5HQzBMN1JoOUMxMExvZzBZSENvTkM2MEx2UXVOQzEwTDNSZ3RDdzBMelF1QzVjSWp0Y2JuMWNibHh1TG1admNtMWZYMnhoWW1Wc0xXeHZZMkZzYVhwaGRHbHZiaUF1Wm05eWJWOWZkRzl2YkhScGNEbzZZV1owWlhJZ2UxeHVJQ0JqYjI1MFpXNTBPaUJjSXRDZjBMWFJnTkMxMExMUXZ0QzBJTkM0SU5DdzBMVFFzTkMvMFlMUXVOR0EwTDdRc3RDdzBMM1F1TkMxSU5DNDBMM1F2dEdCMFlMUmdOQ3cwTDNRdmRDKzBMa2cwTC9SZ05DKzBMVFJnOUM2MFliUXVOQzRJTkMvMEw3UXRDRFFvTkMrMFlIUmdkQzQwTG5SZ2RDNjBMalF1U0RSZ2RDMTBMUFF2TkMxMEwzUmdpQW8wTElnMFlMUXZ0QzhJTkdIMExqUmdkQzcwTFVnMEwvUXZpRFF2OUdBMEw3UXM5R0EwTERRdk5DODBMVWcwTGpRdk5DLzBMN1JnTkdDMEw3UXQ5Q3cwTHpRdGRHSjBMWFF2ZEM0MFk4cExsd2lPMXh1ZlZ4dVhHNHZLaURRbU5DaDBLSFFtOUNWMEpUUW50Q1MwSkRRbmRDWTBKVWdLaTljYmk1bWIzSnRYMTlzWVdKbGJDMXRZWEpyWlhScGJtY3RZVzVoYkhsemFYTWdMbVp2Y20xZlgzUnZiMngwYVhBNk9tRm1kR1Z5SUh0Y2JpQWdZMjl1ZEdWdWREb2dYQ0xRbjlHQTBMN1FzdEMrMExUUXVOR0MwWUhSanlEUXY5QyswTHZRdmRHTDBMa2cwTERRdmRDdzBMdlF1TkMzSU5DeTBMZlFzTkM0MEx6UXZ0QzAwTFhRdWRHQjBZTFFzdEM0MFk4ZzBMelF0ZEMyMExUUmc4S2cwTEhSZ05DMTBMM1F0TkMrMEx3ZzBMakNvTkM2MEx2UXVOQzEwTDNSZ3RDKzBMd3NJTkM5MExEUXY5R0EwWS9Rdk5HRDBZNGcwTExRdTlDNDBZL1JqdEdKMExqUXVTRFF2ZEN3d3FEUmc5R0EwTDdRc3RDMTBMM1JqQ0RRdXRDNzBMalF0ZEM5MFlMUmdkQzYwTDdRczlDK0lOQyswTC9SaTlHQzBMQXVJTkNTMExyUXU5R08wWWZRc05DMTBZSWcwTExDb05HQjBMWFFzZEdQSU5DeTBMWFJnZEdNSU5DLzBZUFJndEdNSU5DNjBMdlF1TkMxMEwzUmd0Q3dJTkMrMFlMQ29OQy8wTDdSZ3RHQTBMWFFzZEM5MEw3UmdkR0MwTGdnMExUUXZzS2cwWURRdGRDMzBZUFF1OUdNMFlMUXNOR0MwTEFnS0dOMWMzUnZiV1Z5SUdwdmRYSnVaWGtwTENEUXN0R0IwTFhDb05HQzBMN1JoOUM2MExnZzBMclF2dEM5MFlMUXNOQzYwWUxRc0NEUXV0QzcwTGpRdGRDOTBZTFFzQ0RSZ2NLZzBMSFJnTkMxMEwzUXROQyswTHdnS0dKeVlXNWtJSFJ2ZFdOb2NHOXBiblJ6S1N3ZzBMRENvTkdDMExEUXV0QzIwTFVnMEw3UXV0R0EwWVBRdHRDMTBMM1F1TkMxSU5DLzBZRFF1TUtnMExMUXQ5Q3cwTGpRdk5DKzBMVFF0ZEM1MFlIUmd0Q3kwTGpRdUNBb1pXNTJhWEp2Ym0xbGJuUXBMbHdpTzF4dWZWeHVYRzR1Wm05eWJWOWZiR0ZpWld3dFkycHRJQzVtYjNKdFgxOTBiMjlzZEdsd09qcGhablJsY2lCN1hHNGdJR052Ym5SbGJuUTZJRndpMEovUmdOQyswTExRdnRDMDBMalJndEdCMFk4ZzBML1F2dEM3MEwzUmk5QzVJTkN3MEwzUXNOQzcwTGpRdHlEUXN0QzMwTERRdU5DODBMN1F0TkMxMExuUmdkR0MwTExRdU5HUElOQzgwTFhRdHRDMDBZUENvTkN4MFlEUXRkQzkwTFRRdnRDOElOQzR3cURRdXRDNzBMalF0ZEM5MFlMUXZ0QzhMQ0RRdmRDdzBML1JnTkdQMEx6Umc5R09JTkN5MEx2UXVOR1AwWTdSaWRDNDBMa2cwTDNRc01LZzBZUFJnTkMrMExMUXRkQzkwWXdnMExyUXU5QzQwTFhRdmRHQzBZSFF1dEMrMExQUXZpRFF2dEMvMFl2Umd0Q3dMaURRa3RDNjBMdlJqdEdIMExEUXRkR0NJTkN5d3FEUmdkQzEwTEhSanlEUXN0QzEwWUhSakNEUXY5R0QwWUxSakNEUXV0QzcwTGpRdGRDOTBZTFFzQ0RRdnRHQ3dxRFF2OUMrMFlMUmdOQzEwTEhRdmRDKzBZSFJndEM0SU5DMDBMN0NvTkdBMExYUXQ5R0QwTHZSak5HQzBMRFJndEN3SUNoamRYTjBiMjFsY2lCcWIzVnlibVY1S1N3ZzBMTFJnZEMxd3FEUmd0QyswWWZRdXRDNElOQzYwTDdRdmRHQzBMRFF1dEdDMExBZzBMclF1OUM0MExYUXZkR0MwTEFnMFlIQ29OQ3gwWURRdGRDOTBMVFF2dEM4SUNoaWNtRnVaQ0IwYjNWamFIQnZhVzUwY3lrc0lOQ3d3cURSZ3RDdzBMclF0dEMxSU5DKzBMclJnTkdEMExiUXRkQzkwTGpRdFNEUXY5R0EwTGpDb05DeTBMZlFzTkM0MEx6UXZ0QzAwTFhRdWRHQjBZTFFzdEM0MExnZ0tHVnVkbWx5YjI1dFpXNTBLUzVjSWp0Y2JuMWNibHh1TG1admNtMWZYMnhoWW1Wc0xXTjFjM1J2YldWeUxXVjRjR1Z5YVdWdVkyVWdMbVp2Y20xZlgzUnZiMngwYVhBNk9tRm1kR1Z5SUh0Y2JpQWdZMjl1ZEdWdWREb2dYQ0xRbjlHQTBMN1FzdEMrMExUUXVOR0MwWUhSanlEUXY5QyswTHZRdmRHTDBMa2cwTERRdmRDdzBMdlF1TkMzSU5DeTBMZlFzTkM0MEx6UXZ0QzAwTFhRdWRHQjBZTFFzdEM0MFk4ZzBMelF0ZEMyMExUUmc4S2cwTEhSZ05DMTBMM1F0TkMrMEx3ZzBMakNvTkM2MEx2UXVOQzEwTDNSZ3RDKzBMd3NJTkM5MExEUXY5R0EwWS9Rdk5HRDBZNGcwTExRdTlDNDBZL1JqdEdKMExqUXVTRFF2ZEN3d3FEUmc5R0EwTDdRc3RDMTBMM1JqQ0RRdXRDNzBMalF0ZEM5MFlMUmdkQzYwTDdRczlDK0lOQyswTC9SaTlHQzBMQXVJTkNTMExyUXU5R08wWWZRc05DMTBZSWcwTExDb05HQjBMWFFzZEdQSU5DeTBMWFJnZEdNSU5DLzBZUFJndEdNSU5DNjBMdlF1TkMxMEwzUmd0Q3dJTkMrMFlMQ29OQy8wTDdSZ3RHQTBMWFFzZEM5MEw3UmdkR0MwTGdnMExUUXZzS2cwWURRdGRDMzBZUFF1OUdNMFlMUXNOR0MwTEFnS0dOMWMzUnZiV1Z5SUdwdmRYSnVaWGtwTENEUXN0R0IwTFhDb05HQzBMN1JoOUM2MExnZzBMclF2dEM5MFlMUXNOQzYwWUxRc0NEUXV0QzcwTGpRdGRDOTBZTFFzQ0RSZ2NLZzBMSFJnTkMxMEwzUXROQyswTHdnS0dKeVlXNWtJSFJ2ZFdOb2NHOXBiblJ6S1N3ZzBMRENvTkdDMExEUXV0QzIwTFVnMEw3UXV0R0EwWVBRdHRDMTBMM1F1TkMxSU5DLzBZRFF1TUtnMExMUXQ5Q3cwTGpRdk5DKzBMVFF0ZEM1MFlIUmd0Q3kwTGpRdUNBb1pXNTJhWEp2Ym0xbGJuUXBMbHdpTzF4dWZWeHVYRzR1Wm05eWJWOWZiR0ZpWld3dFluSmhibVF0WVhWa2FYUWdMbVp2Y20xZlgzUnZiMngwYVhBNk9tRm1kR1Z5SUh0Y2JpQWdZMjl1ZEdWdWREb2dYQ0xRa05HRDBMVFF1TkdDSU5DeDBZRFF0ZEM5MExUUXNNS2c0b0NVSU5DKzBMVFF1TkM5SU5DNDBMZkNvTkdCMExEUXZOR0wwWVVnMEwzUXNOQzAwWkhRdHRDOTBZdlJoU0RRdk5DMTBZTFF2dEMwMEw3UXNpRFFzTkM5MExEUXU5QzQwTGZRc0NEUmdkQyswWUhSZ3RDdzBMTFF1OUdQMFk3UmlkQzQwWVVnMExIUmdOQzEwTDNRdE5Dd0xDRFFzTUtnMExqUXZOQzEwTDNRdmRDK09pRFF0ZEN6MEw3Q29OQzYwTDdRdmRDNjBZUFJnTkMxMEwzUmd0QyswWUhRdjlDKzBZSFF2dEN4MEwzUXZ0R0IwWUxRdUN3ZzBZTFF0ZEM2MFlQUmlkQzEwTFBRdmlEUXY5QyswTHZRdnRDMjBMWFF2ZEM0MFk4ZzBMSFJnTkMxMEwzUXROQ3dJTkM5MExEQ29OR0EwWXZRdmRDNjBMVXNJTkN5MExyUXU5R08wWWZRc05HUElOQzQwWUhSZ2RDNzBMWFF0TkMrMExMUXNOQzkwTGpRdFNEUXY5QyswWUxRdGRDOTBZYlF1TkN3MEx2UXNDRFF0TkM3MFkvQ29OQzEwTFBRdnNLZzBMVFFzTkM3MFl6UXZkQzEwTG5SaU5DMTBMUFF2aURSZ05DdzBMZlFzdEM0MFlMUXVOR1BMbHdpTzF4dWZWeHVYRzR1Wm05eWJWOWZiR0ZpWld3dGMzUnlkV04wZFhKcGJtY3RiMll0ZEdobExYSmxZMlZwZG1Wa0xXUmhkR0VnTG1admNtMWZYM1J2YjJ4MGFYQTZPbUZtZEdWeUlIdGNiaUFnWTI5dWRHVnVkRG9nWENMUWt0R0IwTFhDb05DLzBMN1F1OUdEMFlmUXRkQzkwTDNSaTlDMUlOQzAwTERRdmRDOTBZdlF0U0RRdDlDdzBZTFF0ZEM4SU5HQjBZTFJnTkdEMExyUmd0R0QwWURRdU5HQTBZUFJqdEdDMFlIUmp5RFF0TkM3MFkvQ29OQy8wTDdRdE5DeDBMN1JnTkN3SU5DKzBML1JndEM0MEx6UXNOQzcwWXpRdmRDKzBMa2cwWUhSZ3RHQTBMRFJndEMxMExQUXVOQzRJTkMvMEw3UXQ5QzQwWWJRdU5DKzBMM1F1TkdBMEw3UXN0Q3cwTDNRdU5HUExDRFJnZEMxMExQUXZOQzEwTDNSZ3RDNDBZRFF2dEN5MExEUXZkQzQwWThnMExyUXU5R08wWWZRdGRDeTBZdlJoU0RRczlHQTBZUFF2OUMvSU5HRzBMWFF1OUMxMExMUXZ0QzVJTkN3MFlQUXROQzQwWUxRdnRHQTBMalF1Q3dnMExMUmk5R1AwTExRdTlDMTBMM1F1TkM0SU5HQjBMalF1OUdNMEwzUmk5R0ZJTkM0d3FEUmdkQzcwTERRc2RHTDBZVWcwWUhSZ3RDKzBZRFF2dEM5SU5DLzBMN1F0OUM0MFliUXVOQyswTDNRdU5HQTBMN1FzdEN3MEwzUXVOR1BJTkN4MFlEUXRkQzkwTFRRc0NEUXZ0R0MwTDNRdnRHQjBMalJndEMxMEx2UmpOQzkwTDRnMExyUXZ0QzkwTHJSZzlHQTBMWFF2ZEdDMEw3UXNpNGcwSnpSaThLZzBMalJnZEMvMEw3UXU5R00wTGZSZzlDMTBMd2cwWUhRdnRDeDBZSFJndEN5MExYUXZkQzkwWXZRdFNEUXVNS2cwTHpRdGRDMjBMVFJnOUM5MExEUmdOQyswTFRRdmRHTDBMVWcwTHpRdGRHQzBMN1F0TkM0MExyUXVDRFF1TkMzMFlQUmg5QzEwTDNRdU5HUElOQ3gwWURRdGRDOTBMVFF2dEN5TENEUXY5R0EwTGpRdk5DMTBMM1JqOUdQSU5HQjBMRFF2TkdMMExVZzBZRFF0ZEMzMFlQUXU5R00wWUxRc05HQzBMalFzdEM5MFl2UXRTRFF2TkMrMExUUXRkQzcwTGd1WENJN1hHNTlYRzVjYmk1b1pXRmtaWElnZTF4dUlDQnRZWEpuYVc0dGRHOXdPaUF5TjNCNE8xeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXhNSEI0TzF4dWZWeHVMbWhsWVdSbGNpQXVkM0poY0hCbGNpQjdYRzRnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUdac1pYZ3RaR2x5WldOMGFXOXVPaUJ5YjNjN1hHNGdJR3AxYzNScFpua3RZMjl1ZEdWdWREb2djM0JoWTJVdFltVjBkMlZsYmp0Y2JpQWdZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjYm4xY2JpNW9aV0ZrWlhKZlgyNWhkaUI3WEc0Z0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lHWnNaWGd0ZDNKaGNEb2dkM0poY0R0Y2JpQWdaMkZ3T2lBMU1IQjRPMXh1SUNCaGJHbG5iaTFwZEdWdGN6b2dZbUZ6Wld4cGJtVTdYRzU5WEc0dWFHVmhaR1Z5SUdFZ2UxeHVJQ0JtYjI1MExXWmhiV2xzZVRvZ1hDSkpiblJsY2x3aUxDQmNJazFUSUZOaGJuTWdVMlZ5YVdaY0lpd2djMkZ1Y3kxelpYSnBaanRjYmlBZ1ptOXVkQzF6YVhwbE9pQXhObkI0TzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTWpBd08xeHVJQ0JzYVc1bExXaGxhV2RvZERvZ01UbHdlRHRjYmlBZ2JHVjBkR1Z5TFhOd1lXTnBibWM2SURCbGJUdGNiaUFnZEdWNGRDMWhiR2xuYmpvZ2JHVm1kRHRjYmlBZ1kyOXNiM0k2SUhKbllpZ3dMQ0F3TENBd0tUdGNibjFjYmk1b1pXRmtaWElnY0NCN1hHNGdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjYm4xY2JseHVMbkJ5WldadmNtMGdlMXh1SUNCbWIyNTBMWE5wZW1VNklEUXdjSGc3WEc0Z0lHeHBibVV0YUdWcFoyaDBPaUEwT0hCNE8xeHVJQ0J0WVhKbmFXNHRkRzl3T2lBNE9IQjRPMXh1SUNCdFlYSm5hVzR0WW05MGRHOXRPaUF4TUhCNE8xeHVmVnh1TG5CeVpXWnZjbTBnTG5keVlYQndaWElnZTF4dUlDQmthWE53YkdGNU9pQm5jbWxrTzF4dUlDQm5jbWxrTFhSbGJYQnNZWFJsTFdOdmJIVnRibk02SURObWNpQXhabkk3WEc1OVhHNHVjSEpsWm05eWJTQndJSHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJREl3TUR0Y2JpQWdiV0Z5WjJsdU9pQXdPMXh1ZlZ4dUxuQnlaV1p2Y20wZ2MzQmhiaUI3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUEzTURBN1hHNTlYRzR1Y0hKbFptOXliU0JpZFhSMGIyNGdlMXh1SUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUdac1pYZ3RjM1JoY25RN1hHNGdJR0ZzYVdkdUxXbDBaVzF6T2lCbGJtUTdYRzRnSUdGc2FXZHVMWE5sYkdZNklHVnVaRHRjYm4xY2JseHVMbkJ5YjJwbFkzUnpJSHRjYmlBZ0xTMXRkQzFwYm5OcFpHVXRZMkZ5WkRvZ01UQndlRHRjYm4xY2JpNXdjbTlxWldOMGMxOWZibUYySUh0Y2JpQWdjR0ZrWkdsdVp6b2dNRHRjYmlBZ2JXRnlaMmx1T2lBd08xeHVJQ0JrYVhOd2JHRjVPaUJuY21sa08xeHVJQ0JuY21sa0xYUmxiWEJzWVhSbExXTnZiSFZ0Ym5NNklISmxjR1ZoZENoaGRYUnZMV1pwZEN3Z2JXbHViV0Y0S0RFd01IQjRMQ0F4Wm5JcEtUdGNiaUFnZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5TzF4dUlDQm5ZWEE2SURVd2NIZzdYRzRnSUcxaGNtZHBiaTEwYjNBNklESXdjSGc3WEc0Z0lHMWhjbWRwYmkxaWIzUjBiMjA2SURVd2NIZzdYRzU5WEc0dWNISnZhbVZqZEhOZlgyNWhkaUJoSUh0Y2JpQWdabTl1ZEMxemFYcGxPaUF4Tm5CNE8xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ01qQXdPMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dNVGx3ZUR0Y2JpQWdZMjlzYjNJNklDTXdaVEJsTUdVN1hHNGdJSGRwWkhSb09pQXhNREFsTzF4dWZWeHVMbkJ5YjJwbFkzUnpYMTl1WVhZZ1lWdGhjbWxoTFhObGJHVmpkR1ZrUFhSeWRXVmRMQ0F1Y0hKdmFtVmpkSE5mWDI1aGRpQmhPbWh2ZG1WeUlIdGNiaUFnWm05dWRDMTNaV2xuYUhRNklEY3dNRHRjYm4xY2JpNXdjbTlxWldOMGMxOWZibUYySUdFNlptOWpkWE10ZG1semFXSnNaU0I3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUEzTURBN1hHNTlYRzR1Y0hKdmFtVmpkSE1nYkdrZ2UxeHVJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4dUlDQnRhVzR0YUdWcFoyaDBPaUF6TUhCNE8xeHVJQ0JpYjNKa1pYSTZJREZ3ZUNCemIyeHBaQ0FqTUdVd1pUQmxPMXh1SUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUE0TkhCNE8xeHVmVnh1TG5CeWIycGxZM1J6WDE5allYSmtJSHRjYmlBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHVJQ0J3WVdSa2FXNW5PaUEyTUhCNElEQTdYRzRnSUdKdmNtUmxjaTEwYjNBNklERndlQ0J6YjJ4cFpDQWpNR1V3WlRCbE8xeHVmVnh1TG5CeWIycGxZM1J6WDE5allYSmtJSEFnZTF4dUlDQm1iMjUwTFhOcGVtVTZJREkwY0hnN1hHNGdJR1p2Ym5RdGQyVnBaMmgwT2lBM01EQTdYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQXlPWEI0TzF4dUlDQmpiMnh2Y2pvZ0l6QmxNR1V3WlR0Y2JpQWdiV0Z5WjJsdUxYUnZjRG9nZG1GeUtDMHRiWFF0YVc1emFXUmxMV05oY21RcE8xeHVmVnh1TG5CeWIycGxZM1J6WDE5amRHRWdlMXh1SUNCa2FYTndiR0Y1T2lCbmNtbGtPMXh1SUNCbmNtbGtMWFJsYlhCc1lYUmxMV052YkhWdGJuTTZJREl3TUhCNElEVXdjSGdnWVhWMGJ5QXlNREJ3ZUR0Y2JpQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQnpkR0Z5ZER0Y2JpQWdaMkZ3T2lBME5YQjRPMXh1ZlZ4dUxuQnliMnBsWTNSeklHZ3pJSHRjYmlBZ1ptOXVkQzF6YVhwbE9pQXlOSEI0TzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTnpBd08xeHVJQ0JzYVc1bExXaGxhV2RvZERvZ01qbHdlRHRjYmlBZ1kyOXNiM0k2SUNNd1pUQmxNR1U3WEc0Z0lHMWhjbWRwYmkxMGIzQTZJSFpoY2lndExXMTBMV2x1YzJsa1pTMWpZWEprS1R0Y2JpQWdiV0Y0TFhkcFpIUm9PaUF5TURCd2VEdGNiaUFnZEdWNGRDMWhiR2xuYmpvZ2JHVm1kRHRjYm4xY2JpNXdjbTlxWldOMGN5Qm9OQ0I3WEc0Z0lHWnZiblF0YzJsNlpUb2dNalJ3ZUR0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SURJd01EdGNiaUFnYkdsdVpTMW9aV2xuYUhRNklESTVjSGc3WEc0Z0lHTnZiRzl5T2lBak1HVXdaVEJsTzF4dUlDQnRZWEpuYVc0dGRHOXdPaUIyWVhJb0xTMXRkQzFwYm5OcFpHVXRZMkZ5WkNrN1hHNGdJRzFoZUMxM2FXUjBhRG9nTVRnd2NIZzdYRzRnSUhSbGVIUXRZV3hwWjI0NklHVnVaRHRjYm4xY2JseHVMblpwWkdWdlgxOXBkR1Z0SUh0Y2JpQWdkMmxrZEdnNklERXdNQ1U3WEc0Z0lHaGxhV2RvZERvZ01UQXdKVHRjYmlBZ2IySnFaV04wTFdacGREb2dZMjkyWlhJN1hHNTlYRzVjYmlvZ2UxeHVJQ0JpYjNndGMybDZhVzVuT2lCaWIzSmtaWEl0WW05NE8xeHVmVnh1WEc1aWIyUjVJSHRjYmlBZ1ptOXVkQzF6YVhwbE9pQXlNWEI0TzF4dUlDQm1iMjUwTFdaaGJXbHNlVG9nWENKSmJuUmxjbHdpTENCY0lrMVRJRk5oYm5NZ1UyVnlhV1pjSWl3Z2MyRnVjeTF6WlhKcFpqdGNiaUFnWm05dWRDMTNaV2xuYUhRNklESXdNRHRjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREV1TlR0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJMlptWm1abVpqdGNibjBpTENJdktpRWdibTl5YldGc2FYcGxMbU56Y3lCMk9DNHdMakVnZkNCTlNWUWdUR2xqWlc1elpTQjhJR2RwZEdoMVlpNWpiMjB2Ym1WamIyeGhjeTl1YjNKdFlXeHBlbVV1WTNOeklDb3ZYSEpjYmk4cUlFUnZZM1Z0Wlc1MFhISmNiaUFnSUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYSEpjYmk4cUtseHlYRzRnS2lBeExpQkRiM0p5WldOMElIUm9aU0JzYVc1bElHaGxhV2RvZENCcGJpQmhiR3dnWW5KdmQzTmxjbk11WEhKY2JpQXFJREl1SUZCeVpYWmxiblFnWVdScWRYTjBiV1Z1ZEhNZ2IyWWdabTl1ZENCemFYcGxJR0ZtZEdWeUlHOXlhV1Z1ZEdGMGFXOXVJR05vWVc1blpYTWdhVzRnYVU5VExseHlYRzRnS2k5Y2NseHVMeW9nVTJWamRHbHZibk5jY2x4dUlDQWdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDBnS2k5Y2NseHVMeW9xWEhKY2JpQXFJRkpsYlc5MlpTQjBhR1VnYldGeVoybHVJR2x1SUdGc2JDQmljbTkzYzJWeWN5NWNjbHh1SUNvdlhISmNiaThxS2x4eVhHNGdLaUJTWlc1a1pYSWdkR2hsSUdCdFlXbHVZQ0JsYkdWdFpXNTBJR052Ym5OcGMzUmxiblJzZVNCcGJpQkpSUzVjY2x4dUlDb3ZYSEpjYmk4cUtseHlYRzRnS2lCRGIzSnlaV04wSUhSb1pTQm1iMjUwSUhOcGVtVWdZVzVrSUcxaGNtZHBiaUJ2YmlCZ2FERmdJR1ZzWlcxbGJuUnpJSGRwZEdocGJpQmdjMlZqZEdsdmJtQWdZVzVrWEhKY2JpQXFJR0JoY25ScFkyeGxZQ0JqYjI1MFpYaDBjeUJwYmlCRGFISnZiV1VzSUVacGNtVm1iM2dzSUdGdVpDQlRZV1poY21rdVhISmNiaUFxTDF4eVhHNHZLaUJIY205MWNHbHVaeUJqYjI1MFpXNTBYSEpjYmlBZ0lEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlJQ292WEhKY2JpOHFLbHh5WEc0Z0tpQXhMaUJCWkdRZ2RHaGxJR052Y25KbFkzUWdZbTk0SUhOcGVtbHVaeUJwYmlCR2FYSmxabTk0TGx4eVhHNGdLaUF5TGlCVGFHOTNJSFJvWlNCdmRtVnlabXh2ZHlCcGJpQkZaR2RsSUdGdVpDQkpSUzVjY2x4dUlDb3ZYSEpjYmk4cUtseHlYRzRnS2lBeExpQkRiM0p5WldOMElIUm9aU0JwYm1obGNtbDBZVzVqWlNCaGJtUWdjMk5oYkdsdVp5QnZaaUJtYjI1MElITnBlbVVnYVc0Z1lXeHNJR0p5YjNkelpYSnpMbHh5WEc0Z0tpQXlMaUJEYjNKeVpXTjBJSFJvWlNCdlpHUWdZR1Z0WUNCbWIyNTBJSE5wZW1sdVp5QnBiaUJoYkd3Z1luSnZkM05sY25NdVhISmNiaUFxTDF4eVhHNHZLaUJVWlhoMExXeGxkbVZzSUhObGJXRnVkR2xqYzF4eVhHNGdJQ0E5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFNBcUwxeHlYRzR2S2lwY2NseHVJQ29nVW1WdGIzWmxJSFJvWlNCbmNtRjVJR0poWTJ0bmNtOTFibVFnYjI0Z1lXTjBhWFpsSUd4cGJtdHpJR2x1SUVsRklERXdMbHh5WEc0Z0tpOWNjbHh1THlvcVhISmNiaUFxSURFdUlGSmxiVzkyWlNCMGFHVWdZbTkwZEc5dElHSnZjbVJsY2lCcGJpQkRhSEp2YldVZ05UY3RYSEpjYmlBcUlESXVJRUZrWkNCMGFHVWdZMjl5Y21WamRDQjBaWGgwSUdSbFkyOXlZWFJwYjI0Z2FXNGdRMmh5YjIxbExDQkZaR2RsTENCSlJTd2dUM0JsY21Fc0lHRnVaQ0JUWVdaaGNta3VYSEpjYmlBcUwxeHlYRzR2S2lwY2NseHVJQ29nUVdSa0lIUm9aU0JqYjNKeVpXTjBJR1p2Ym5RZ2QyVnBaMmgwSUdsdUlFTm9jbTl0WlN3Z1JXUm5aU3dnWVc1a0lGTmhabUZ5YVM1Y2NseHVJQ292WEhKY2JpOHFLbHh5WEc0Z0tpQXhMaUJEYjNKeVpXTjBJSFJvWlNCcGJtaGxjbWwwWVc1alpTQmhibVFnYzJOaGJHbHVaeUJ2WmlCbWIyNTBJSE5wZW1VZ2FXNGdZV3hzSUdKeWIzZHpaWEp6TGx4eVhHNGdLaUF5TGlCRGIzSnlaV04wSUhSb1pTQnZaR1FnWUdWdFlDQm1iMjUwSUhOcGVtbHVaeUJwYmlCaGJHd2dZbkp2ZDNObGNuTXVYSEpjYmlBcUwxeHlYRzR2S2lwY2NseHVJQ29nUVdSa0lIUm9aU0JqYjNKeVpXTjBJR1p2Ym5RZ2MybDZaU0JwYmlCaGJHd2dZbkp2ZDNObGNuTXVYSEpjYmlBcUwxeHlYRzR2S2lwY2NseHVJQ29nVUhKbGRtVnVkQ0JnYzNWaVlDQmhibVFnWUhOMWNHQWdaV3hsYldWdWRITWdabkp2YlNCaFptWmxZM1JwYm1jZ2RHaGxJR3hwYm1VZ2FHVnBaMmgwSUdsdVhISmNiaUFxSUdGc2JDQmljbTkzYzJWeWN5NWNjbHh1SUNvdlhISmNiaThxSUVWdFltVmtaR1ZrSUdOdmJuUmxiblJjY2x4dUlDQWdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDBnS2k5Y2NseHVMeW9xWEhKY2JpQXFJRkpsYlc5MlpTQjBhR1VnWW05eVpHVnlJRzl1SUdsdFlXZGxjeUJwYm5OcFpHVWdiR2x1YTNNZ2FXNGdTVVVnTVRBdVhISmNiaUFxTDF4eVhHNHZLaUJHYjNKdGMxeHlYRzRnSUNBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBTQXFMMXh5WEc0dktpcGNjbHh1SUNvZ01TNGdRMmhoYm1kbElIUm9aU0JtYjI1MElITjBlV3hsY3lCcGJpQmhiR3dnWW5KdmQzTmxjbk11WEhKY2JpQXFJREl1SUZKbGJXOTJaU0IwYUdVZ2JXRnlaMmx1SUdsdUlFWnBjbVZtYjNnZ1lXNWtJRk5oWm1GeWFTNWNjbHh1SUNvdlhISmNiaThxS2x4eVhHNGdLaUJUYUc5M0lIUm9aU0J2ZG1WeVpteHZkeUJwYmlCSlJTNWNjbHh1SUNvZ01TNGdVMmh2ZHlCMGFHVWdiM1psY21ac2IzY2dhVzRnUldSblpTNWNjbHh1SUNvdlhISmNiaThxS2x4eVhHNGdLaUJTWlcxdmRtVWdkR2hsSUdsdWFHVnlhWFJoYm1ObElHOW1JSFJsZUhRZ2RISmhibk5tYjNKdElHbHVJRVZrWjJVc0lFWnBjbVZtYjNnc0lHRnVaQ0JKUlM1Y2NseHVJQ29nTVM0Z1VtVnRiM1psSUhSb1pTQnBibWhsY21sMFlXNWpaU0J2WmlCMFpYaDBJSFJ5WVc1elptOXliU0JwYmlCR2FYSmxabTk0TGx4eVhHNGdLaTljY2x4dUx5b3FYSEpjYmlBcUlFTnZjbkpsWTNRZ2RHaGxJR2x1WVdKcGJHbDBlU0IwYnlCemRIbHNaU0JqYkdsamEyRmliR1VnZEhsd1pYTWdhVzRnYVU5VElHRnVaQ0JUWVdaaGNta3VYSEpjYmlBcUwxeHlYRzR2S2lwY2NseHVJQ29nVW1WdGIzWmxJSFJvWlNCcGJtNWxjaUJpYjNKa1pYSWdZVzVrSUhCaFpHUnBibWNnYVc0Z1JtbHlaV1p2ZUM1Y2NseHVJQ292WEhKY2JpOHFLbHh5WEc0Z0tpQlNaWE4wYjNKbElIUm9aU0JtYjJOMWN5QnpkSGxzWlhNZ2RXNXpaWFFnWW5rZ2RHaGxJSEJ5WlhacGIzVnpJSEoxYkdVdVhISmNiaUFxTDF4eVhHNHZLaXBjY2x4dUlDb2dRMjl5Y21WamRDQjBhR1VnY0dGa1pHbHVaeUJwYmlCR2FYSmxabTk0TGx4eVhHNGdLaTljY2x4dUx5b3FYSEpjYmlBcUlERXVJRU52Y25KbFkzUWdkR2hsSUhSbGVIUWdkM0poY0hCcGJtY2dhVzRnUldSblpTQmhibVFnU1VVdVhISmNiaUFxSURJdUlFTnZjbkpsWTNRZ2RHaGxJR052Ykc5eUlHbHVhR1Z5YVhSaGJtTmxJR1p5YjIwZ1lHWnBaV3hrYzJWMFlDQmxiR1Z0Wlc1MGN5QnBiaUJKUlM1Y2NseHVJQ29nTXk0Z1VtVnRiM1psSUhSb1pTQndZV1JrYVc1bklITnZJR1JsZG1Wc2IzQmxjbk1nWVhKbElHNXZkQ0JqWVhWbmFIUWdiM1YwSUhkb1pXNGdkR2hsZVNCNlpYSnZJRzkxZEZ4eVhHNGdLaUFnSUNCZ1ptbGxiR1J6WlhSZ0lHVnNaVzFsYm5SeklHbHVJR0ZzYkNCaWNtOTNjMlZ5Y3k1Y2NseHVJQ292WEhKY2JpOHFLbHh5WEc0Z0tpQkJaR1FnZEdobElHTnZjbkpsWTNRZ2RtVnlkR2xqWVd3Z1lXeHBaMjV0Wlc1MElHbHVJRU5vY205dFpTd2dSbWx5WldadmVDd2dZVzVrSUU5d1pYSmhMbHh5WEc0Z0tpOWNjbHh1THlvcVhISmNiaUFxSUZKbGJXOTJaU0IwYUdVZ1pHVm1ZWFZzZENCMlpYSjBhV05oYkNCelkzSnZiR3hpWVhJZ2FXNGdTVVVnTVRBckxseHlYRzRnS2k5Y2NseHVMeW9xWEhKY2JpQXFJREV1SUVGa1pDQjBhR1VnWTI5eWNtVmpkQ0JpYjNnZ2MybDZhVzVuSUdsdUlFbEZJREV3TGx4eVhHNGdLaUF5TGlCU1pXMXZkbVVnZEdobElIQmhaR1JwYm1jZ2FXNGdTVVVnTVRBdVhISmNiaUFxTDF4eVhHNHZLaXBjY2x4dUlDb2dRMjl5Y21WamRDQjBhR1VnWTNWeWMyOXlJSE4wZVd4bElHOW1JR2x1WTNKbGJXVnVkQ0JoYm1RZ1pHVmpjbVZ0Wlc1MElHSjFkSFJ2Ym5NZ2FXNGdRMmh5YjIxbExseHlYRzRnS2k5Y2NseHVMeW9xWEhKY2JpQXFJREV1SUVOdmNuSmxZM1FnZEdobElHOWtaQ0JoY0hCbFlYSmhibU5sSUdsdUlFTm9jbTl0WlNCaGJtUWdVMkZtWVhKcExseHlYRzRnS2lBeUxpQkRiM0p5WldOMElIUm9aU0J2ZFhSc2FXNWxJSE4wZVd4bElHbHVJRk5oWm1GeWFTNWNjbHh1SUNvdlhISmNiaThxS2x4eVhHNGdLaUJTWlcxdmRtVWdkR2hsSUdsdWJtVnlJSEJoWkdScGJtY2dhVzRnUTJoeWIyMWxJR0Z1WkNCVFlXWmhjbWtnYjI0Z2JXRmpUMU11WEhKY2JpQXFMMXh5WEc0dktpcGNjbHh1SUNvZ01TNGdRMjl5Y21WamRDQjBhR1VnYVc1aFltbHNhWFI1SUhSdklITjBlV3hsSUdOc2FXTnJZV0pzWlNCMGVYQmxjeUJwYmlCcFQxTWdZVzVrSUZOaFptRnlhUzVjY2x4dUlDb2dNaTRnUTJoaGJtZGxJR1p2Ym5RZ2NISnZjR1Z5ZEdsbGN5QjBieUJnYVc1b1pYSnBkR0FnYVc0Z1UyRm1ZWEpwTGx4eVhHNGdLaTljY2x4dUx5b2dTVzUwWlhKaFkzUnBkbVZjY2x4dUlDQWdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDBnS2k5Y2NseHVMeXBjY2x4dUlDb2dRV1JrSUhSb1pTQmpiM0p5WldOMElHUnBjM0JzWVhrZ2FXNGdSV1JuWlN3Z1NVVWdNVEFyTENCaGJtUWdSbWx5WldadmVDNWNjbHh1SUNvdlhISmNiaThxWEhKY2JpQXFJRUZrWkNCMGFHVWdZMjl5Y21WamRDQmthWE53YkdGNUlHbHVJR0ZzYkNCaWNtOTNjMlZ5Y3k1Y2NseHVJQ292WEhKY2JpOHFJRTFwYzJOY2NseHVJQ0FnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwZ0tpOWNjbHh1THlvcVhISmNiaUFxSUVGa1pDQjBhR1VnWTI5eWNtVmpkQ0JrYVhOd2JHRjVJR2x1SUVsRklERXdLeTVjY2x4dUlDb3ZYSEpjYmk4cUtseHlYRzRnS2lCQlpHUWdkR2hsSUdOdmNuSmxZM1FnWkdsemNHeGhlU0JwYmlCSlJTQXhNQzVjY2x4dUlDb3ZYSEpjYm1oMGJXd2dlMXh5WEc1Y2RHeHBibVV0YUdWcFoyaDBPaUF4TGpFMU8xeHlYRzVjZEMxM1pXSnJhWFF0ZEdWNGRDMXphWHBsTFdGa2FuVnpkRG9nTVRBd0pUdGNjbHh1ZlZ4eVhHNWliMlI1SUh0Y2NseHVYSFJ0WVhKbmFXNDZJREE3WEhKY2JuMWNjbHh1YldGcGJpQjdYSEpjYmx4MFpHbHpjR3hoZVRvZ1lteHZZMnM3WEhKY2JuMWNjbHh1YURFZ2UxeHlYRzVjZEdadmJuUXRjMmw2WlRvZ01tVnRPMXh5WEc1Y2RHMWhjbWRwYmpvZ01DNDJOMlZ0SURBN1hISmNibjFjY2x4dWFISWdlMXh5WEc1Y2RHSnZlQzF6YVhwcGJtYzZJR052Ym5SbGJuUXRZbTk0TzF4eVhHNWNkR2hsYVdkb2REb2dNRHRjY2x4dVhIUnZkbVZ5Wm14dmR6b2dkbWx6YVdKc1pUdGNjbHh1ZlZ4eVhHNXdjbVVnZTF4eVhHNWNkR1p2Ym5RdFptRnRhV3g1T2lCdGIyNXZjM0JoWTJVc0lHMXZibTl6Y0dGalpUdGNjbHh1WEhSbWIyNTBMWE5wZW1VNklERmxiVHRjY2x4dWZWeHlYRzVoSUh0Y2NseHVYSFJpWVdOclozSnZkVzVrTFdOdmJHOXlPaUIwY21GdWMzQmhjbVZ1ZER0Y2NseHVmVnh5WEc1aFltSnlXM1JwZEd4bFhTQjdYSEpjYmx4MFltOXlaR1Z5TFdKdmRIUnZiVG9nYm05dVpUdGNjbHh1WEhSMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUhWdVpHVnliR2x1WlR0Y2NseHVYSFIwWlhoMExXUmxZMjl5WVhScGIyNDZJSFZ1WkdWeWJHbHVaU0JrYjNSMFpXUTdYSEpjYm4xY2NseHVZaUI3WEhKY2JseDBabTl1ZEMxM1pXbG5hSFE2SUdKdmJHUmxjanRjY2x4dWZWeHlYRzV6ZEhKdmJtY2dlMXh5WEc1Y2RHWnZiblF0ZDJWcFoyaDBPaUJpYjJ4a1pYSTdYSEpjYm4xY2NseHVZMjlrWlNCN1hISmNibHgwWm05dWRDMW1ZVzFwYkhrNklHMXZibTl6Y0dGalpTd2diVzl1YjNOd1lXTmxPMXh5WEc1Y2RHWnZiblF0YzJsNlpUb2dNV1Z0TzF4eVhHNTlYSEpjYm10aVpDQjdYSEpjYmx4MFptOXVkQzFtWVcxcGJIazZJRzF2Ym05emNHRmpaU3dnYlc5dWIzTndZV05sTzF4eVhHNWNkR1p2Ym5RdGMybDZaVG9nTVdWdE8xeHlYRzU5WEhKY2JuTmhiWEFnZTF4eVhHNWNkR1p2Ym5RdFptRnRhV3g1T2lCdGIyNXZjM0JoWTJVc0lHMXZibTl6Y0dGalpUdGNjbHh1WEhSbWIyNTBMWE5wZW1VNklERmxiVHRjY2x4dWZWeHlYRzV6YldGc2JDQjdYSEpjYmx4MFptOXVkQzF6YVhwbE9pQTRNQ1U3WEhKY2JuMWNjbHh1YzNWaUlIdGNjbHh1WEhSbWIyNTBMWE5wZW1VNklEYzFKVHRjY2x4dVhIUnNhVzVsTFdobGFXZG9kRG9nTUR0Y2NseHVYSFJ3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEhKY2JseDBkbVZ5ZEdsallXd3RZV3hwWjI0NklHSmhjMlZzYVc1bE8xeHlYRzVjZEdKdmRIUnZiVG9nTFRBdU1qVmxiVHRjY2x4dWZWeHlYRzV6ZFhBZ2UxeHlYRzVjZEdadmJuUXRjMmw2WlRvZ056VWxPMXh5WEc1Y2RHeHBibVV0YUdWcFoyaDBPaUF3TzF4eVhHNWNkSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjY2x4dVhIUjJaWEowYVdOaGJDMWhiR2xuYmpvZ1ltRnpaV3hwYm1VN1hISmNibHgwZEc5d09pQXRNQzQxWlcwN1hISmNibjFjY2x4dWFXMW5JSHRjY2x4dVhIUmliM0prWlhJdGMzUjViR1U2SUc1dmJtVTdYSEpjYm4xY2NseHVZblYwZEc5dUlIdGNjbHh1WEhSbWIyNTBMV1poYldsc2VUb2dhVzVvWlhKcGREdGNjbHh1WEhSbWIyNTBMWE5wZW1VNklERXdNQ1U3WEhKY2JseDBiR2x1WlMxb1pXbG5hSFE2SURFdU1UVTdYSEpjYmx4MGJXRnlaMmx1T2lBd08xeHlYRzVjZEc5MlpYSm1iRzkzT2lCMmFYTnBZbXhsTzF4eVhHNWNkSFJsZUhRdGRISmhibk5tYjNKdE9pQnViMjVsTzF4eVhHNWNkR0poWTJ0bmNtOTFibVE2SUc1dmJtVTdYSEpjYmx4MFltOXlaR1Z5T2lCdWIyNWxPMXh5WEc1Y2RHTjFjbk52Y2pvZ2NHOXBiblJsY2p0Y2NseHVYSFF0ZDJWaWEybDBMV0Z3Y0dWaGNtRnVZMlU2SUdKMWRIUnZianRjY2x4dVhIUW1Pam90Ylc5NkxXWnZZM1Z6TFdsdWJtVnlJSHRjY2x4dVhIUmNkR0p2Y21SbGNpMXpkSGxzWlRvZ2JtOXVaVHRjY2x4dVhIUmNkSEJoWkdScGJtYzZJREE3WEhKY2JseDBmVnh5WEc1Y2RDWTZMVzF2ZWkxbWIyTjFjM0pwYm1jZ2UxeHlYRzVjZEZ4MGIzVjBiR2x1WlRvZ01YQjRJR1J2ZEhSbFpDQkNkWFIwYjI1VVpYaDBPMXh5WEc1Y2RIMWNjbHh1ZlZ4eVhHNXBibkIxZENCN1hISmNibHgwWm05dWRDMW1ZVzFwYkhrNklHbHVhR1Z5YVhRN1hISmNibHgwWm05dWRDMXphWHBsT2lBeE1EQWxPMXh5WEc1Y2RHeHBibVV0YUdWcFoyaDBPaUF4TGpFMU8xeHlYRzVjZEcxaGNtZHBiam9nTUR0Y2NseHVYSFJ2ZG1WeVpteHZkem9nZG1semFXSnNaVHRjY2x4dWZWeHlYRzV2Y0hSbmNtOTFjQ0I3WEhKY2JseDBabTl1ZEMxbVlXMXBiSGs2SUdsdWFHVnlhWFE3WEhKY2JseDBabTl1ZEMxemFYcGxPaUF4TURBbE8xeHlYRzVjZEd4cGJtVXRhR1ZwWjJoME9pQXhMakUxTzF4eVhHNWNkRzFoY21kcGJqb2dNRHRjY2x4dWZWeHlYRzV6Wld4bFkzUWdlMXh5WEc1Y2RHWnZiblF0Wm1GdGFXeDVPaUJwYm1obGNtbDBPMXh5WEc1Y2RHWnZiblF0YzJsNlpUb2dNVEF3SlR0Y2NseHVYSFJzYVc1bExXaGxhV2RvZERvZ01TNHhOVHRjY2x4dVhIUnRZWEpuYVc0NklEQTdYSEpjYmx4MGRHVjRkQzEwY21GdWMyWnZjbTA2SUc1dmJtVTdYSEpjYm4xY2NseHVkR1Y0ZEdGeVpXRWdlMXh5WEc1Y2RHWnZiblF0Wm1GdGFXeDVPaUJwYm1obGNtbDBPMXh5WEc1Y2RHWnZiblF0YzJsNlpUb2dNVEF3SlR0Y2NseHVYSFJzYVc1bExXaGxhV2RvZERvZ01TNHhOVHRjY2x4dVhIUnRZWEpuYVc0NklEQTdYSEpjYmx4MGIzWmxjbVpzYjNjNklHRjFkRzg3WEhKY2JuMWNjbHh1VzNSNWNHVTlYQ0ppZFhSMGIyNWNJbDBnZTF4eVhHNWNkQzEzWldKcmFYUXRZWEJ3WldGeVlXNWpaVG9nWW5WMGRHOXVPMXh5WEc1Y2RDWTZPaTF0YjNvdFptOWpkWE10YVc1dVpYSWdlMXh5WEc1Y2RGeDBZbTl5WkdWeUxYTjBlV3hsT2lCdWIyNWxPMXh5WEc1Y2RGeDBjR0ZrWkdsdVp6b2dNRHRjY2x4dVhIUjlYSEpjYmx4MEpqb3RiVzk2TFdadlkzVnpjbWx1WnlCN1hISmNibHgwWEhSdmRYUnNhVzVsT2lBeGNIZ2daRzkwZEdWa0lFSjFkSFJ2YmxSbGVIUTdYSEpjYmx4MGZWeHlYRzU5WEhKY2JsdDBlWEJsUFZ3aWNtVnpaWFJjSWwwZ2UxeHlYRzVjZEMxM1pXSnJhWFF0WVhCd1pXRnlZVzVqWlRvZ1luVjBkRzl1TzF4eVhHNWNkQ1k2T2kxdGIzb3RabTlqZFhNdGFXNXVaWElnZTF4eVhHNWNkRngwWW05eVpHVnlMWE4wZVd4bE9pQnViMjVsTzF4eVhHNWNkRngwY0dGa1pHbHVaem9nTUR0Y2NseHVYSFI5WEhKY2JseDBKam90Ylc5NkxXWnZZM1Z6Y21sdVp5QjdYSEpjYmx4MFhIUnZkWFJzYVc1bE9pQXhjSGdnWkc5MGRHVmtJRUoxZEhSdmJsUmxlSFE3WEhKY2JseDBmVnh5WEc1OVhISmNibHQwZVhCbFBWd2ljM1ZpYldsMFhDSmRJSHRjY2x4dVhIUXRkMlZpYTJsMExXRndjR1ZoY21GdVkyVTZJR0oxZEhSdmJqdGNjbHh1WEhRbU9qb3RiVzk2TFdadlkzVnpMV2x1Ym1WeUlIdGNjbHh1WEhSY2RHSnZjbVJsY2kxemRIbHNaVG9nYm05dVpUdGNjbHh1WEhSY2RIQmhaR1JwYm1jNklEQTdYSEpjYmx4MGZWeHlYRzVjZENZNkxXMXZlaTFtYjJOMWMzSnBibWNnZTF4eVhHNWNkRngwYjNWMGJHbHVaVG9nTVhCNElHUnZkSFJsWkNCQ2RYUjBiMjVVWlhoME8xeHlYRzVjZEgxY2NseHVmVnh5WEc1bWFXVnNaSE5sZENCN1hISmNibHgwY0dGa1pHbHVaem9nTUM0ek5XVnRJREF1TnpWbGJTQXdMall5TldWdE8xeHlYRzU5WEhKY2JteGxaMlZ1WkNCN1hISmNibHgwWW05NExYTnBlbWx1WnpvZ1ltOXlaR1Z5TFdKdmVEdGNjbHh1WEhSamIyeHZjam9nYVc1b1pYSnBkRHRjY2x4dVhIUmthWE53YkdGNU9pQjBZV0pzWlR0Y2NseHVYSFJ0WVhndGQybGtkR2c2SURFd01DVTdYSEpjYmx4MGNHRmtaR2x1WnpvZ01EdGNjbHh1WEhSM2FHbDBaUzF6Y0dGalpUb2dibTl5YldGc08xeHlYRzU5WEhKY2JuQnliMmR5WlhOeklIdGNjbHh1WEhSMlpYSjBhV05oYkMxaGJHbG5iam9nWW1GelpXeHBibVU3WEhKY2JuMWNjbHh1VzNSNWNHVTlYQ0pqYUdWamEySnZlRndpWFNCN1hISmNibHgwWW05NExYTnBlbWx1WnpvZ1ltOXlaR1Z5TFdKdmVEdGNjbHh1WEhSd1lXUmthVzVuT2lBd08xeHlYRzU5WEhKY2JsdDBlWEJsUFZ3aWNtRmthVzljSWwwZ2UxeHlYRzVjZEdKdmVDMXphWHBwYm1jNklHSnZjbVJsY2kxaWIzZzdYSEpjYmx4MGNHRmtaR2x1WnpvZ01EdGNjbHh1ZlZ4eVhHNWJkSGx3WlQxY0ltNTFiV0psY2x3aVhTQjdYSEpjYmx4MEpqbzZMWGRsWW10cGRDMXBibTVsY2kxemNHbHVMV0oxZEhSdmJpQjdYSEpjYmx4MFhIUm9aV2xuYUhRNklHRjFkRzg3WEhKY2JseDBmVnh5WEc1Y2RDWTZPaTEzWldKcmFYUXRiM1YwWlhJdGMzQnBiaTFpZFhSMGIyNGdlMXh5WEc1Y2RGeDBhR1ZwWjJoME9pQmhkWFJ2TzF4eVhHNWNkSDFjY2x4dWZWeHlYRzViZEhsd1pUMWNJbk5sWVhKamFGd2lYU0I3WEhKY2JseDBMWGRsWW10cGRDMWhjSEJsWVhKaGJtTmxPaUIwWlhoMFptbGxiR1E3WEhKY2JseDBiM1YwYkdsdVpTMXZabVp6WlhRNklDMHljSGc3WEhKY2JseDBKam82TFhkbFltdHBkQzF6WldGeVkyZ3RaR1ZqYjNKaGRHbHZiaUI3WEhKY2JseDBYSFF0ZDJWaWEybDBMV0Z3Y0dWaGNtRnVZMlU2SUc1dmJtVTdYSEpjYmx4MGZWeHlYRzRnSUNZNk9pMTNaV0pyYVhRdFptbHNaUzExY0d4dllXUXRZblYwZEc5dUlIdGNjbHh1SUNBZ0lDMTNaV0pyYVhRdFlYQndaV0Z5WVc1alpUb2dZblYwZEc5dU8xeHlYRzRnSUNBZ1ptOXVkRG9nYVc1b1pYSnBkRHRjY2x4dUlDQjlYSEpjYm4xY2NseHVaR1YwWVdsc2N5QjdYSEpjYmx4MFpHbHpjR3hoZVRvZ1lteHZZMnM3WEhKY2JuMWNjbHh1YzNWdGJXRnllU0I3WEhKY2JseDBaR2x6Y0d4aGVUb2diR2x6ZEMxcGRHVnRPMXh5WEc1OVhISmNiblJsYlhCc1lYUmxJSHRjY2x4dVhIUmthWE53YkdGNU9pQnViMjVsTzF4eVhHNTlYSEpjYmx0b2FXUmtaVzVkSUh0Y2NseHVYSFJrYVhOd2JHRjVPaUJ1YjI1bE8xeHlYRzU5WEhKY2JpOHFYSEpjYmtOVlUxUlBUU0JUUlZSVVNVNUhVMXh5WEc0cUwxeHlYRzRxT2pwaVpXWnZjbVVzWEhKY2JpbzZPbUZtZEdWeUlIdGNjbHh1WEhSd1lXUmthVzVuT2lBd08xeHlYRzVjZEcxaGNtZHBiam9nTUR0Y2NseHVYSFJpYjNKa1pYSTZJREE3WEhKY2JseDBZbTk0TFhOcGVtbHVaem9nWW05eVpHVnlMV0p2ZUR0Y2NseHVmVnh5WEc1aElIdGNjbHh1WEhSMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUc1dmJtVTdYSEpjYm4xY2NseHVkV3dzWEhKY2JtOXNMRnh5WEc1c2FTQjdYSEpjYmx4MGJHbHpkQzF6ZEhsc1pUb2dibTl1WlR0Y2NseHVmVnh5WEc0aUxDSkFabTl1ZEMxbVlXTmxJSHRjY2x4dUlDQm1iMjUwTFdaaGJXbHNlVG9nWENKSmJuUmxjbHdpTzF4eVhHNGdJR1p2Ym5RdGMzUjViR1U2SUc1dmNtMWhiRHRjY2x4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTWpBd08xeHlYRzRnSUhOeVl6b2dkWEpzS0Z3aUwyWnZiblF2U1c1MFpYSXRSWGgwY21GTWFXZG9kQzUzYjJabU1sd2lLU0JtYjNKdFlYUW9YQ0ozYjJabU1sd2lLVHRjY2x4dUlDQm1iMjUwTFdScGMzQnNZWGs2SUhOM1lYQTdYSEpjYm4xY2NseHVYSEpjYmtCbWIyNTBMV1poWTJVZ2UxeHlYRzRnSUdadmJuUXRabUZ0YVd4NU9pQmNJa2x1ZEdWeVhDSTdYSEpjYmlBZ1ptOXVkQzF6ZEhsc1pUb2dibTl5YldGc08xeHlYRzRnSUdadmJuUXRkMlZwWjJoME9pQTBNREE3WEhKY2JpQWdjM0pqT2lCMWNtd29YQ0l2Wm05dWRDOUpiblJsY2kxU1pXZDFiR0Z5TG5kdlptWXlYQ0lwSUdadmNtMWhkQ2hjSW5kdlptWXlYQ0lwTzF4eVhHNGdJR1p2Ym5RdFpHbHpjR3hoZVRvZ2MzZGhjRHRjY2x4dWZWeHlYRzVjY2x4dVFHWnZiblF0Wm1GalpTQjdYSEpjYmlBZ1ptOXVkQzFtWVcxcGJIazZJRndpU1c1MFpYSmNJanRjY2x4dUlDQm1iMjUwTFhOMGVXeGxPaUJ1YjNKdFlXdzdYSEpjYmlBZ1ptOXVkQzEzWldsbmFIUTZJRGN3TUR0Y2NseHVJQ0J6Y21NNklIVnliQ2hjSWk5bWIyNTBMMGx1ZEdWeUxVSnZiR1F1ZDI5bVpqSmNJaWtnWm05eWJXRjBLRndpZDI5bVpqSmNJaWs3WEhKY2JpQWdabTl1ZEMxa2FYTndiR0Y1T2lCemQyRndPMXh5WEc1OVhISmNibHh5WEc1Y2NseHVMeThnMFlEUXNOQ3gwTDdSZ3RDdzBMWFJnbHh5WEc0dkx5QkFiV2w0YVc0Z1ptOXVkQzFtWVdObEtDUm1ZVzFwYkhrc0lDUjFjbXdzSUNSM1pXbG5hSFE2SURRd01Da2dlMXh5WEc0dkx5QWdJRUJtYjI1MExXWmhZMlVnZTF4eVhHNHZMeUFnSUNBZ1ptOXVkQzFtWVcxcGJIazZJQ1JtWVcxcGJIazdYSEpjYmk4dklDQWdJQ0JtYjI1MExYTjBlV3hsT2lCdWIzSnRZV3c3WEhKY2JpOHZJQ0FnSUNCbWIyNTBMWGRsYVdkb2REb2dKSGRsYVdkb2REdGNjbHh1THk4Z0lDQWdJSE55WXpvZ2RYSnNLRndpSTNza2RYSnNmUzUzYjJabU1sd2lLU0JtYjNKdFlYUW9YQ0ozYjJabU1sd2lLU3dnZFhKc0tGd2lJM3NrZFhKc2ZTNTNiMlptWENJcElHWnZjbTFoZENoY0luZHZabVpjSWlrN1hISmNiaTh2SUNBZ0lDQm1iMjUwTFdScGMzQnNZWGs2SUhOM1lYQTdYSEpjYmk4dklDQWdmVnh5WEc0dkx5QjlYSEpjYmx4eVhHNHZMeUJBYVc1amJIVmtaU0JtYjI1MExXWmhZMlVvWENKSmJuUmxjaTFGZUhSeVlVeHBaMmgwWENJc0lGd2lMaTR2Wm05dWRDOUpiblJsY2kxRmVIUnlZVXhwWjJoMFhDSXNJREl3TUNrN1hISmNiaTh2SUVCcGJtTnNkV1JsSUdadmJuUXRabUZqWlNoY0lrbHVkR1Z5TFZKbFozVnNZWEpjSWl3Z1hDSXVMaTltYjI1MEwwbHVkR1Z5TFZKbFozVnNZWEpjSWlrN1hISmNiaTh2SUVCcGJtTnNkV1JsSUdadmJuUXRabUZqWlNoY0lrbHVkR1Z5TFVKdmJHUmNJaXdnWENJdUxpOW1iMjUwTDBsdWRHVnlMVUp2YkdSY0lpd2dOekF3S1R0Y2NseHVJaXdpTG5acGMzVmhiR3g1TFdocFpHUmxiaUI3WEhKY2JpQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh5WEc1Y2NseHVJQ0IzYVdSMGFEb2dNWEI0TzF4eVhHNGdJR2hsYVdkb2REb2dNWEI0TzF4eVhHNGdJRzFoY21kcGJqb2dMVEZ3ZUR0Y2NseHVJQ0J3WVdSa2FXNW5PaUF3TzF4eVhHNGdJRzkyWlhKbWJHOTNPaUJvYVdSa1pXNDdYSEpjYmx4eVhHNGdJSGRvYVhSbExYTndZV05sT2lCdWIzZHlZWEE3WEhKY2JseHlYRzRnSUdKdmNtUmxjam9nTUR0Y2NseHVYSEpjYmlBZ1kyeHBjRG9nY21WamRDZ3dJREFnTUNBd0tUdGNjbHh1SUNCamJHbHdMWEJoZEdnNklHbHVjMlYwS0RFd01DVXBPMXh5WEc1OVhISmNibHh5WEc0dWRHbDBiR1VnZTF4eVhHNGdJR1p2Ym5RdGMybDZaVG9nTkRCd2VEdGNjbHh1SUNCbWIyNTBMWGRsYVdkb2REb2dOekF3TzF4eVhHNGdJR3hwYm1VdGFHVnBaMmgwT2lBME9IQjRPMXh5WEc0Z0lHeGxkSFJsY2kxemNHRmphVzVuT2lBd1pXMDdYSEpjYmlBZ2RHVjRkQzFoYkdsbmJqb2diR1ZtZER0Y2NseHVJQ0J0WVhKbmFXNHRkRzl3T2lBd08xeHlYRzRnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREl3Y0hnN1hISmNibjFjY2x4dVhISmNiaTUzY21Gd2NHVnlJSHRjY2x4dUlDQnRZWGd0ZDJsa2RHZzZJREUwTkRCd2VEdGNjbHh1SUNCdFlYSm5hVzR0YkdWbWREb2dZWFYwYnp0Y2NseHVJQ0J0WVhKbmFXNHRjbWxuYUhRNklHRjFkRzg3WEhKY2JpQWdjR0ZrWkdsdVp5MXNaV1owT2lBeE5uQjRPMXh5WEc0Z0lIQmhaR1JwYm1jdGNtbG5hSFE2SURFMmNIZzdYSEpjYmlBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjY2x4dUlDQm1iR1Y0TFdScGNtVmpkR2x2YmpvZ1kyOXNkVzF1TzF4eVhHNTlYSEpjYmx4eVhHNHVhWE10WVdOMGFYWmxJSHRjY2x4dVptOXVkQzEzWldsbmFIUTZJRGN3TUR0Y2NseHVabTl1ZEMxemFYcGxPaUF4T0hCNE8xeHlYRzVzYVc1bExXaGxhV2RvZERvZ01qSndlRHRjY2x4dWJHVjBkR1Z5TFhOd1lXTnBibWM2SURCbGJUdGNjbHh1ZEdWNGRDMWhiR2xuYmpvZ2JHVm1kRHRjY2x4dWZWeHlYRzVjY2x4dUxtSjBiaUI3WEhKY2JpQWdKaTFoY25KdmR5QjdYSEpjYmlBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4eVhHNGdJQ0FnZDJsa2RHZzZJREV3TUhCNE8xeHlYRzRnSUNBZ2FHVnBaMmgwT2lBeE1EQndlRHRjY2x4dUlDQjlYSEpjYmx4eVhHNGdJQ1l0ZDJocGRHVWdlMXh5WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUEwTUhCNE8xeHlYRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRGN3TUR0Y2NseHVJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQTBPSEI0TzF4eVhHNGdJSDFjY2x4dWZWeHlYRzRpTENJdVptOXliU0I3WEhKY2JpQWdiV0Z5WjJsdUxYUnZjRG9nT0Rod2VEdGNjbHh1WEhKY2JpQWdKbDlmYVc1MGNtOGdlMXh5WEc0Z0lDQWdaR2x6Y0d4aGVUb2daM0pwWkR0Y2NseHVJQ0FnSUdkeWFXUXRkR1Z0Y0d4aGRHVXRZMjlzZFcxdWN6b2djbVZ3WldGMEtETXNJREZtY2lrN1hISmNiaUFnWEhKY2JpQWdJQ0JvTWlCN1hISmNiaUFnSUNBZ0lHZHlhV1F0WTI5c2RXMXVPaUF5SUM4Z016dGNjbHh1SUNBZ0lDQWdhblZ6ZEdsbWVTMXpaV3htT2lCalpXNTBaWEk3WEhKY2JpQWdJQ0I5WEhKY2JpQWdYSEpjYmlBZ0lDQmlkWFIwYjI0Z2UxeHlYRzRnSUNBZ0lDQm5jbWxrTFdOdmJIVnRiam9nTXlBdklEUTdYSEpjYmlBZ0lDQWdJR3AxYzNScFpua3RjMlZzWmpvZ1pXNWtPMXh5WEc0Z0lDQWdJQ0JxZFhOMGFXWjVMV2wwWlcxek9pQmlZWE5sYkdsdVpUdGNjbHh1SUNBZ0lIMWNjbHh1SUNCOVhISmNibHh5WEc0Z0lHWnZjbTBnZTF4eVhHNGdJQ0FnWkdsemNHeGhlVG9nWm14bGVEdGNjbHh1SUNBZ0lHWnNaWGd0WkdseVpXTjBhVzl1T2lCamIyeDFiVzQ3WEhKY2JpQWdmVnh5WEc1Y2NseHVJQ0JtYVdWc1pITmxkQ0I3WEhKY2JpQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXlOWEI0TzF4eVhHNWNjbHh1SUNBZ0lDWTZibTkwS0RwbWFYSnpkQzF2WmkxMGVYQmxLU0I3WEhKY2JpQWdJQ0FnSUcxaGNtZHBiaTEwYjNBNklESTFjSGc3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHlYRzRnSUNBZ1ltOXlaR1Z5T2lCdWIyNWxPMXh5WEc0Z0lDQWdaR2x6Y0d4aGVUb2daM0pwWkR0Y2NseHVJQ0FnSUdkeWFXUXRkR1Z0Y0d4aGRHVXRZMjlzZFcxdWN6b2dNV1p5SURGbWNpQTJNSEI0SURGbWNpQXhabkk3WEhKY2JpQWdJQ0JuWVhBNklEVXdjSGc3WEhKY2JseHlYRzRnSUNBZ2FEUWdlMXh5WEc0Z0lDQWdJQ0JuY21sa0xXTnZiSFZ0YmpvZ01pQXZJRE03WEhKY2JpQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01qUndlRHRjY2x4dUlDQWdJQ0FnWm05dWRDMTNaV2xuYUhRNklESXdNRHRjY2x4dUlDQWdJQ0FnYkdsdVpTMW9aV2xuYUhRNklESTVjSGc3WEhKY2JpQWdJQ0FnSUhSbGVIUXRZV3hwWjI0NklHVnVaRHRjY2x4dUlDQWdJQ0FnYldGeVoybHVMWFJ2Y0RvZ09IQjRPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUhBZ2UxeHlYRzRnSUNBZ0lDQnRZWEpuYVc0dGRHOXdPaUE0Y0hnN1hISmNiaUFnSUNBZ0lHcDFjM1JwWm5rdGMyVnNaam9nWTJWdWRHVnlPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdKbDlmYzNSaFoyVWdlMXh5WEc0Z0lDQWdaR2x6Y0d4aGVUb2daM0pwWkR0Y2NseHVJQ0FnSUdkeWFXUXRkR1Z0Y0d4aGRHVXRZMjlzZFcxdWN6b2dNbVp5SURWbWNqdGNjbHh1WEhKY2JpQWdJQ0JvTXlCN1hISmNiaUFnSUNBZ0lHZHlhV1F0WTI5c2RXMXVPaUF4SUM4Z01qdGNjbHh1SUNBZ0lDQWdaM0pwWkMxeWIzYzZJREVnTHlBeU8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJSE50WVd4c0lIdGNjbHh1SUNBZ0lDQWdaM0pwWkMxamIyeDFiVzQ2SURFZ0x5QXlPMXh5WEc0Z0lDQWdJQ0JuY21sa0xYSnZkem9nTWlBdklETTdYSEpjYmlBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTVRSd2VEdGNjbHh1SUNBZ0lDQWdabTl1ZEMxM1pXbG5hSFE2SURRd01EdGNjbHh1SUNBZ0lDQWdiR2x1WlMxb1pXbG5hSFE2SURFM2NIZzdYSEpjYmlBZ0lDQjlYSEpjYmlBZ2ZWeHlYRzU5WEhKY2JseHlYRzR1Wm05eWJWOWZiR2x6ZENCN1hISmNiaUFnWjNKcFpDMWpiMngxYlc0NklEUWdMeUF0TVR0Y2NseHVJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHlYRzRnSUdac1pYZ3RaR2x5WldOMGFXOXVPaUJqYjJ4MWJXNDdYSEpjYmlBZ1oyRndPaUE0Y0hnN1hISmNiaUFnZDJsa2RHZzZJR1pwZEMxamIyNTBaVzUwTzF4eVhHNWNjbHh1SUNCc1lXSmxiQ0I3WEhKY2JpQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEhKY2JpQWdJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHlYRzRnSUNBZ1lXeHBaMjR0YVhSbGJYTTZJR0poYzJWc2FXNWxPMXh5WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF4Tm5CNE8xeHlYRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJREl3TUR0Y2NseHVJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQXhPWEI0TzF4eVhHNWNjbHh1SUNBZ0lDNW1iM0p0WDE5MGIyOXNkR2x3SUh0Y2NseHVJQ0FnSUNBZ2RtbHphV0pwYkdsMGVUb2dhR2xrWkdWdU8xeHlYRzRnSUNBZ0lDQjNhV1IwYURvZ01UazNjSGc3WEhKY2JpQWdJQ0FnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNSamIyeHZjaTEzYUdsMFpUdGNjbHh1SUNBZ0lDQWdZbTk0TFhOb1lXUnZkem9nTm5CNElEWndlQ0F4Tm5CNElEaHdlQ0J5WjJKaEtERTNOQ3dnTVRjMExDQXhPVElzSURBdU16VXBPMXh5WEc0Z0lDQWdJQ0IwWlhoMExXRnNhV2R1T2lCcGJtbDBhV0ZzTzF4eVhHNGdJQ0FnSUNCd1lXUmthVzVuT2lBeU1uQjRJREUwY0hnN1hISmNiaUFnSUNBZ0lHSnZjbVJsY2kxeVlXUnBkWE02SURad2VEdGNjbHh1SUNBZ0lDQWdZbTl5WkdWeU9pQXhjSGdnYzI5c2FXUWdjbWRpWVNneE56VXNJREU0TlN3Z01Ua3pMQ0F3TGpZNUtUdGNjbHh1SUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh5WEc0Z0lDQWdJQ0I2TFdsdVpHVjRPaUF4TzF4eVhHNGdJQ0FnSUNCMGIzQTZJQzAxY0hnN1hISmNiaUFnSUNBZ0lHeGxablE2SURFd05TVTdJRnh5WEc1Y2NseHVJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXhNSEI0TzF4eVhHNGdJQ0FnSUNCbWIyNTBMWGRsYVdkb2REb2dNakF3TzF4eVhHNGdJQ0FnSUNCc2FXNWxMV2hsYVdkb2REb2dNVEp3ZUR0Y2NseHVJQ0FnSUNBZ1kyOXNiM0k2SUNSamIyeHZjaTFpYkdGamF6dGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FtT21odmRtVnlJQzVtYjNKdFgxOTBiMjlzZEdsd0lIdGNjbHh1SUNBZ0lDQWdkbWx6YVdKcGJHbDBlVG9nZG1semFXSnNaVHRjY2x4dUlDQWdJSDFjY2x4dUlDQjlYSEpjYmx4eVhHNGdJR2x1Y0hWMElIdGNjbHh1SUNBZ0lHMWhjbWRwYmkxeWFXZG9kRG9nTVRCd2VEdGNjbHh1SUNCOVhISmNibjFjY2x4dVhISmNiaTVtYjNKdFgxOWlkWFIwYjI1eklIdGNjbHh1SUNCa2FYTndiR0Y1T2lCbmNtbGtPMXh5WEc0Z0lHZHlhV1F0ZEdWdGNHeGhkR1V0WTI5c2RXMXVjem9nY21Wd1pXRjBLRE1zSURGbWNpazdYSEpjYmx4eVhHNGdJQzVpZEc0dGQyaHBkR1VnZTF4eVhHNGdJQ0FnWjNKcFpDMWpiMngxYlc0NklESWdMeUF6TzF4eVhHNGdJQ0FnWW05eVpHVnlPaUF6Y0hnZ2MyOXNhV1FnSkdOdmJHOXlMV0pzWVdOck8xeHlYRzRnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTmpCd2VEdGNjbHh1SUNCOVhISmNibHh5WEc0Z0lDNWlkRzR0WVhKeWIzY2dlMXh5WEc0Z0lDQWdaM0pwWkMxamIyeDFiVzQ2SURNZ0x5QTBPMXh5WEc0Z0lDQWdhblZ6ZEdsbWVTMXpaV3htT2lCbGJtUTdYSEpjYmlBZ0lDQmhiR2xuYmkxcGRHVnRjem9nWTJWdWRHVnlPMXh5WEc0Z0lDQWdkSEpoYm5ObWIzSnRPaUJ5YjNSaGRHVW9NVGd3WkdWbktUdGNjbHh1SUNCOVhISmNibjFjY2x4dVhISmNiaThxSU5DUzBKalFsQ0RRb05DUTBKZlFvTkNRMEpIUW50Q2kwSnJRbUNBcUwxeHlYRzR1Wm05eWJWOWZiR0ZpWld3dFluSmhibVJwYm1jZ0xtWnZjbTFmWDNSdmIyeDBhWEE2T21GbWRHVnlJSHRjY2x4dUlDQmpiMjUwWlc1ME9pQW4wSmpRdDlHRDBZZlF0ZEM5MExqUXRTRFFzZEdBMExYUXZkQzAwTEFnMExUUXU5R1B3cURSZ05DMTBZalF0ZEM5MExqUmp5RFF1dEMrMEwzUXV0R0EwTFhSZ3RDOTBZdlJoU0RRdk5DdzBZRFF1dEMxMFlMUXVOQzkwTFBRdnRDeTBZdlJoU0RRdDlDdzBMVFFzTkdITENEUXNzS2cwWUxRdnRDOHdxRFJoOUM0MFlIUXU5QzFJTkMvMEw3UXN0R0wwWWpRdGRDOTBMalF0U0RRdXRDKzBMM1F1dEdEMFlEUXRkQzkwWUxRdmRDKzBZSFF2OUMrMFlIUXZ0Q3gwTDNRdnRHQjBZTFF1Q3dnMFlUUXZ0R0EwTHpRdU5HQTBMN1FzdEN3MEwzUXVOQzFJTkdEMEwzUXVOQzYwTERRdTlHTTBMM1F2dEN6MEw0ZzBMN1FzZEdBMExEUXQ5Q3dMQ0RRdjlDKzBMTFJpOUdJMExYUXZkQzQwTFVnMFlIUXVOQzgwTC9Rc05HQzBMalF1Q0RRdjlDKzBZTFJnTkMxMExIUXVOR0MwTFhRdTlDMTBMa3NJTkN3d3FEUmd0Q3cwTHJRdHRDMUlOQzMwTERRdXRHQTBMWFF2OUM3MExYUXZkQzQwTFVnMExqQ29OQzAwTERRdTlHTTBMM1F0ZEM1MFlqUXRkQzFJTkdBMExEUXQ5Q3kwTGpSZ3RDNDBMVWcwTC9RdnRDMzBMalJodEM0MExnZzBMM1FzTUtnMFlEUmk5QzkwTHJRdFM0bk8xeHlYRzU5WEhKY2JpNW1iM0p0WDE5c1lXSmxiQzF5WldKeVlXNWthVzVuSUM1bWIzSnRYMTkwYjI5c2RHbHdPanBoWm5SbGNpQjdYSEpjYmlBZ1kyOXVkR1Z1ZERvZ0o5Q2UwTEhRdmRDKzBMTFF1OUMxMEwzUXVOQzFJTkdEMExiUXRjS2cwTGpRdk5DMTBZN1JpZEM0MFlYUmdkR1BJTkM2MEw3UXZkR0cwTFhRdjlHQzBMN1FzaURRdU1LZzBZRFF0ZEN3MEx2UXVOQzMwTDdRc3RDdzBMM1F2ZEdMMFlVZzBMalF0TkMxMExrZzBMM1FzTUtnMEw3UmdkQzkwTDdRc3RDMUlOQy8wTDdRdTlHRDBZZlF0ZEM5MEwzUXZ0Q3owTDRnMEw3UXY5R0wwWUxRc0NEUXV0QyswTHpRdjlDdzBMM1F1TkM0SU5DOTBMRENvTkdBMFl2UXZkQzYwTFVzSU5DeXdxRFJndEMrMEx6Q29OR0gwTGpSZ2RDNzBMVWcwTGpDb05DLzBMN1F1OUM5MEw3UXRTRFJnTkMxMExyUXZ0QzkwWUhSZ3RHQTBZUFF1dEdHMExqUmp5RFF2dEN4MFlEUXNOQzMwTEFnMExyUXZ0QzgwTC9Rc05DOTBMalF1Q0RSZ2NLZzBMM1JnOUM3MFk4dUp6dGNjbHh1ZlZ4eVhHNHVabTl5YlY5ZmJHRmlaV3d0Y21WMFlXbHNMV0p5WVc1a2FXNW5JQzVtYjNKdFgxOTBiMjlzZEdsd09qcGhablJsY2lCN1hISmNiaUFnWTI5dWRHVnVkRG9nSjlDZjBZRFF2dEMxMExyUmd0QzQwWURRdnRDeTBMRFF2ZEM0MExVZzBMakNvTkMrMEwvUmd0QzQwTHpRdU5DMzBMRFJodEM0MFk4ZzBZTFF2dEdBMExQUXZ0Q3kwTDdRczlDK0lOQy8wWURRdnRHQjBZTFJnTkN3MEwzUmdkR0MwTExRc0N3ZzBZRFFzTkMzMExMUXVOR0MwTGpRdFNEUXV0Q3cwWWZRdGRHQjBZTFFzdEN3SU5DeTBMZlFzTkM0MEx6UXZ0QzAwTFhRdWRHQjBZTFFzdEM0MFk4ZzBZTFF2dEdBMExQUXZ0Q3kwWXZSaFNEUmd0QyswWWZRdGRDNklOR0J3cURRdXRDNzBMalF0ZEM5MFlMUXNOQzgwTGd1Snp0Y2NseHVmVnh5WEc0dVptOXliVjlmYkdGaVpXd3RiRzlqWVd4cGVtRjBhVzl1SUM1bWIzSnRYMTkwYjI5c2RHbHdPanBoWm5SbGNpQjdYSEpjYmlBZ1kyOXVkR1Z1ZERvZ0o5Q2YwTFhSZ05DMTBMTFF2dEMwSU5DNElOQ3cwTFRRc05DLzBZTFF1TkdBMEw3UXN0Q3cwTDNRdU5DMUlOQzQwTDNRdnRHQjBZTFJnTkN3MEwzUXZkQyswTGtnMEwvUmdOQyswTFRSZzlDNjBZYlF1TkM0SU5DLzBMN1F0Q0RRb05DKzBZSFJnZEM0MExuUmdkQzYwTGpRdVNEUmdkQzEwTFBRdk5DMTBMM1JnaUFvMExJZzBZTFF2dEM4SU5HSDBMalJnZEM3MExVZzBML1F2aURRdjlHQTBMN1FzOUdBMExEUXZOQzgwTFVnMExqUXZOQy8wTDdSZ05HQzBMN1F0OUN3MEx6UXRkR0owTFhRdmRDNDBZOHBMaWM3WEhKY2JuMWNjbHh1WEhKY2JpOHFJTkNZMEtIUW9kQ2IwSlhRbE5DZTBKTFFrTkNkMEpqUWxTQXFMMXh5WEc0dVptOXliVjlmYkdGaVpXd3RiV0Z5YTJWMGFXNW5MV0Z1WVd4NWMybHpJQzVtYjNKdFgxOTBiMjlzZEdsd09qcGhablJsY2lCN1hISmNiaUFnWTI5dWRHVnVkRG9nSjlDZjBZRFF2dEN5MEw3UXROQzQwWUxSZ2RHUElOQy8wTDdRdTlDOTBZdlF1U0RRc05DOTBMRFF1OUM0MExjZzBMTFF0OUN3MExqUXZOQyswTFRRdGRDNTBZSFJndEN5MExqUmp5RFF2TkMxMExiUXROR0R3cURRc2RHQTBMWFF2ZEMwMEw3UXZDRFF1TUtnMExyUXU5QzQwTFhRdmRHQzBMN1F2Q3dnMEwzUXNOQy8wWURSajlDODBZUFJqaURRc3RDNzBMalJqOUdPMFluUXVOQzVJTkM5MExEQ29OR0QwWURRdnRDeTBMWFF2ZEdNSU5DNjBMdlF1TkMxMEwzUmd0R0IwTHJRdnRDejBMNGcwTDdRdjlHTDBZTFFzQzRnMEpMUXV0QzcwWTdSaDlDdzBMWFJnaURRc3NLZzBZSFF0ZEN4MFk4ZzBMTFF0ZEdCMFl3ZzBML1JnOUdDMFl3ZzBMclF1OUM0MExYUXZkR0MwTEFnMEw3UmdzS2cwTC9RdnRHQzBZRFF0ZEN4MEwzUXZ0R0IwWUxRdUNEUXROQyt3cURSZ05DMTBMZlJnOUM3MFl6Umd0Q3cwWUxRc0NBb1kzVnpkRzl0WlhJZ2FtOTFjbTVsZVNrc0lOQ3kwWUhRdGNLZzBZTFF2dEdIMExyUXVDRFF1dEMrMEwzUmd0Q3cwTHJSZ3RDd0lOQzYwTHZRdU5DMTBMM1JndEN3SU5HQndxRFFzZEdBMExYUXZkQzAwTDdRdkNBb1luSmhibVFnZEc5MVkyaHdiMmx1ZEhNcExDRFFzTUtnMFlMUXNOQzYwTGJRdFNEUXZ0QzYwWURSZzlDMjBMWFF2ZEM0MExVZzBML1JnTkM0d3FEUXN0QzMwTERRdU5DODBMN1F0TkMxMExuUmdkR0MwTExRdU5DNElDaGxiblpwY205dWJXVnVkQ2t1Snp0Y2NseHVmVnh5WEc0dVptOXliVjlmYkdGaVpXd3RZMnB0SUM1bWIzSnRYMTkwYjI5c2RHbHdPanBoWm5SbGNpQjdYSEpjYmlBZ1kyOXVkR1Z1ZERvZ0o5Q2YwWURRdnRDeTBMN1F0TkM0MFlMUmdkR1BJTkMvMEw3UXU5QzkwWXZRdVNEUXNOQzkwTERRdTlDNDBMY2cwTExRdDlDdzBMalF2TkMrMExUUXRkQzUwWUhSZ3RDeTBMalJqeURRdk5DMTBMYlF0TkdEd3FEUXNkR0EwTFhRdmRDMDBMN1F2Q0RRdU1LZzBMclF1OUM0MExYUXZkR0MwTDdRdkN3ZzBMM1FzTkMvMFlEUmo5QzgwWVBSamlEUXN0QzcwTGpSajlHTzBZblF1TkM1SU5DOTBMRENvTkdEMFlEUXZ0Q3kwTFhRdmRHTUlOQzYwTHZRdU5DMTBMM1JndEdCMExyUXZ0Q3owTDRnMEw3UXY5R0wwWUxRc0M0ZzBKTFF1dEM3MFk3Umg5Q3cwTFhSZ2lEUXNzS2cwWUhRdGRDeDBZOGcwTExRdGRHQjBZd2cwTC9SZzlHQzBZd2cwTHJRdTlDNDBMWFF2ZEdDMExBZzBMN1Jnc0tnMEwvUXZ0R0MwWURRdGRDeDBMM1F2dEdCMFlMUXVDRFF0TkMrd3FEUmdOQzEwTGZSZzlDNzBZelJndEN3MFlMUXNDQW9ZM1Z6ZEc5dFpYSWdhbTkxY201bGVTa3NJTkN5MFlIUXRjS2cwWUxRdnRHSDBMclF1Q0RRdXRDKzBMM1JndEN3MExyUmd0Q3dJTkM2MEx2UXVOQzEwTDNSZ3RDd0lOR0J3cURRc2RHQTBMWFF2ZEMwMEw3UXZDQW9ZbkpoYm1RZ2RHOTFZMmh3YjJsdWRITXBMQ0RRc01LZzBZTFFzTkM2MExiUXRTRFF2dEM2MFlEUmc5QzIwTFhRdmRDNDBMVWcwTC9SZ05DNHdxRFFzdEMzMExEUXVOQzgwTDdRdE5DMTBMblJnZEdDMExMUXVOQzRJQ2hsYm5acGNtOXViV1Z1ZENrdUp6dGNjbHh1ZlZ4eVhHNHVabTl5YlY5ZmJHRmlaV3d0WTNWemRHOXRaWEl0Wlhod1pYSnBaVzVqWlNBdVptOXliVjlmZEc5dmJIUnBjRG82WVdaMFpYSWdlMXh5WEc0Z0lHTnZiblJsYm5RNklDZlFuOUdBMEw3UXN0QyswTFRRdU5HQzBZSFJqeURRdjlDKzBMdlF2ZEdMMExrZzBMRFF2ZEN3MEx2UXVOQzNJTkN5MExmUXNOQzQwTHpRdnRDMDBMWFF1ZEdCMFlMUXN0QzQwWThnMEx6UXRkQzIwTFRSZzhLZzBMSFJnTkMxMEwzUXROQyswTHdnMExqQ29OQzYwTHZRdU5DMTBMM1JndEMrMEx3c0lOQzkwTERRdjlHQTBZL1F2TkdEMFk0ZzBMTFF1OUM0MFkvUmp0R0owTGpRdVNEUXZkQ3d3cURSZzlHQTBMN1FzdEMxMEwzUmpDRFF1dEM3MExqUXRkQzkwWUxSZ2RDNjBMN1FzOUMrSU5DKzBML1JpOUdDMExBdUlOQ1MwTHJRdTlHTzBZZlFzTkMxMFlJZzBMTENvTkdCMExYUXNkR1BJTkN5MExYUmdkR01JTkMvMFlQUmd0R01JTkM2MEx2UXVOQzEwTDNSZ3RDd0lOQyswWUxDb05DLzBMN1JndEdBMExYUXNkQzkwTDdSZ2RHQzBMZ2cwTFRRdnNLZzBZRFF0ZEMzMFlQUXU5R00wWUxRc05HQzBMQWdLR04xYzNSdmJXVnlJR3B2ZFhKdVpYa3BMQ0RRc3RHQjBMWENvTkdDMEw3Umg5QzYwTGdnMExyUXZ0QzkwWUxRc05DNjBZTFFzQ0RRdXRDNzBMalF0ZEM5MFlMUXNDRFJnY0tnMExIUmdOQzEwTDNRdE5DKzBMd2dLR0p5WVc1a0lIUnZkV05vY0c5cGJuUnpLU3dnMExEQ29OR0MwTERRdXRDMjBMVWcwTDdRdXRHQTBZUFF0dEMxMEwzUXVOQzFJTkMvMFlEUXVNS2cwTExRdDlDdzBMalF2TkMrMExUUXRkQzUwWUhSZ3RDeTBMalF1Q0FvWlc1MmFYSnZibTFsYm5RcExpYzdYSEpjYm4xY2NseHVMbVp2Y20xZlgyeGhZbVZzTFdKeVlXNWtMV0YxWkdsMElDNW1iM0p0WDE5MGIyOXNkR2x3T2pwaFpuUmxjaUI3WEhKY2JpQWdZMjl1ZEdWdWREb2dKOUNRMFlQUXROQzQwWUlnMExIUmdOQzEwTDNRdE5Dd3dxRGlnSlFnMEw3UXROQzQwTDBnMExqUXQ4S2cwWUhRc05DODBZdlJoU0RRdmRDdzBMVFJrZEMyMEwzUmk5R0ZJTkM4MExYUmd0QyswTFRRdnRDeUlOQ3cwTDNRc05DNzBMalF0OUN3SU5HQjBMN1JnZEdDMExEUXN0QzcwWS9SanRHSjBMalJoU0RRc2RHQTBMWFF2ZEMwMExBc0lOQ3d3cURRdU5DODBMWFF2ZEM5MEw0NklOQzEwTFBRdnNLZzBMclF2dEM5MExyUmc5R0EwTFhRdmRHQzBMN1JnZEMvMEw3UmdkQyswTEhRdmRDKzBZSFJndEM0TENEUmd0QzEwTHJSZzlHSjBMWFFzOUMrSU5DLzBMN1F1OUMrMExiUXRkQzkwTGpSanlEUXNkR0EwTFhRdmRDMDBMQWcwTDNRc01LZzBZRFJpOUM5MExyUXRTd2cwTExRdXRDNzBZN1JoOUN3MFk4ZzBMalJnZEdCMEx2UXRkQzAwTDdRc3RDdzBMM1F1TkMxSU5DLzBMN1JndEMxMEwzUmh0QzQwTERRdTlDd0lOQzAwTHZSajhLZzBMWFFzOUMrd3FEUXROQ3cwTHZSak5DOTBMWFF1ZEdJMExYUXM5QytJTkdBMExEUXQ5Q3kwTGpSZ3RDNDBZOHVKenRjY2x4dWZWeHlYRzR1Wm05eWJWOWZiR0ZpWld3dGMzUnlkV04wZFhKcGJtY3RiMll0ZEdobExYSmxZMlZwZG1Wa0xXUmhkR0VnTG1admNtMWZYM1J2YjJ4MGFYQTZPbUZtZEdWeUlIdGNjbHh1SUNCamIyNTBaVzUwT2lBbjBKTFJnZEMxd3FEUXY5QyswTHZSZzlHSDBMWFF2ZEM5MFl2UXRTRFF0TkN3MEwzUXZkR0wwTFVnMExmUXNOR0MwTFhRdkNEUmdkR0MwWURSZzlDNjBZTFJnOUdBMExqUmdOR0QwWTdSZ3RHQjBZOGcwTFRRdTlHUHdxRFF2OUMrMExUUXNkQyswWURRc0NEUXZ0Qy8wWUxRdU5DODBMRFF1OUdNMEwzUXZ0QzVJTkdCMFlMUmdOQ3cwWUxRdGRDejBMalF1Q0RRdjlDKzBMZlF1TkdHMExqUXZ0QzkwTGpSZ05DKzBMTFFzTkM5MExqUmp5d2cwWUhRdGRDejBMelF0ZEM5MFlMUXVOR0EwTDdRc3RDdzBMM1F1TkdQSU5DNjBMdlJqdEdIMExYUXN0R0wwWVVnMExQUmdOR0QwTC9RdnlEUmh0QzEwTHZRdGRDeTBMN1F1U0RRc05HRDBMVFF1TkdDMEw3UmdOQzQwTGdzSU5DeTBZdlJqOUN5MEx2UXRkQzkwTGpRdUNEUmdkQzQwTHZSak5DOTBZdlJoU0RRdU1LZzBZSFF1OUN3MExIUmk5R0ZJTkdCMFlMUXZ0R0EwTDdRdlNEUXY5QyswTGZRdU5HRzBMalF2dEM5MExqUmdOQyswTExRc05DOTBMalJqeURRc2RHQTBMWFF2ZEMwMExBZzBMN1JndEM5MEw3UmdkQzQwWUxRdGRDNzBZelF2ZEMrSU5DNjBMN1F2ZEM2MFlQUmdOQzEwTDNSZ3RDKzBMSXVJTkNjMFl2Q29OQzQwWUhRdjlDKzBMdlJqTkMzMFlQUXRkQzhJTkdCMEw3UXNkR0IwWUxRc3RDMTBMM1F2ZEdMMExVZzBMakNvTkM4MExYUXR0QzAwWVBRdmRDdzBZRFF2dEMwMEwzUmk5QzFJTkM4MExYUmd0QyswTFRRdU5DNjBMZ2cwTGpRdDlHRDBZZlF0ZEM5MExqUmp5RFFzZEdBMExYUXZkQzAwTDdRc2l3ZzBML1JnTkM0MEx6UXRkQzkwWS9SanlEUmdkQ3cwTHpSaTlDMUlOR0EwTFhRdDlHRDBMdlJqTkdDMExEUmd0QzQwTExRdmRHTDBMVWcwTHpRdnRDMDBMWFF1OUM0TGljN1hISmNibjFjY2x4dUlpd2lMeThnUTI5c2IzSnpYSEpjYmk4dklOQzAwTHZSanlEUXZkQzEwTG5Rdk5DNDBMM1FzOUN3SU5HRzBMTFF0ZEdDMEw3UXNpRFF1TkdCMEwvUXZ0QzcwWXpRdDlHRDBMWFF2Q0JvZEhSd2N6b3ZMM2QzZHk1b2RHMXNZM056WTI5c2IzSXVZMjl0TDJobGVDOHpNelEwT0RKY2NseHVYSEpjYmk4dklFUmxabUYxYkhSY2NseHVKR052Ykc5eUxXSnNZV05yT2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSXpCbE1HVXdaVHRjY2x4dUpHTnZiRzl5TFhkb2FYUmxPaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJMlptWm1abVpqdGNjbHh1WEhKY2JpOHZJRkJ5YjJwbFkzUmNjbHh1WEhKY2JseHlYRzR2THlCV2FXVjNjRzl5ZEhOY2NseHVKSFp3TFRNeU1Eb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTXpJd2NIZzdYSEpjYmlSMmNDMDNOamc2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEYzJPSEI0TzF4eVhHNGtkbkF0TVRBeU5Eb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F4TURJMGNIZzdYSEpjYmlSMmNDMHhNamd3T2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lERXlPREJ3ZUR0Y2NseHVKSFp3TFRFME5EQTZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTVRRME1IQjRPMXh5WEc0a2RuQXRNVGt5TURvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXhPVEl3Y0hnN1hISmNibHh5WEc0dkx5QkdiMjUwYzF4eVhHNGtZbUZ6WlMxbWIyNTBMWE5wZW1VNklDQWdJQ0FnSUNBZ0lDQWdJQ0F5TVhCNE8xeHlYRzRrWW1GelpTMW1iMjUwTFdaaGJXbHNlVG9nSUNBZ0lDQWdJQ0FnSUNCY0lrbHVkR1Z5WENJc0lGd2lUVk1nVTJGdWN5QlRaWEpwWmx3aUxDQnpZVzV6TFhObGNtbG1PMXh5WEc0aUxDSXVhR1ZoWkdWeUlIdGNjbHh1SUNCdFlYSm5hVzR0ZEc5d09pQXlOM0I0TzF4eVhHNGdJRzFoY21kcGJpMWliM1IwYjIwNklERXdjSGc3WEhKY2JseHlYRzRnSUM1M2NtRndjR1Z5SUh0Y2NseHVJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYSEpjYmlBZ0lDQm1iR1Y0TFdScGNtVmpkR2x2YmpvZ2NtOTNPMXh5WEc0Z0lDQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQnpjR0ZqWlMxaVpYUjNaV1Z1TzF4eVhHNGdJQ0FnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2NseHVJQ0I5WEhKY2JseHlYRzRnSUNaZlgyNWhkaUI3WEhKY2JpQWdJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHlYRzRnSUNBZ1pteGxlQzEzY21Gd09pQjNjbUZ3TzF4eVhHNGdJQ0FnWjJGd09pQTFNSEI0TzF4eVhHNGdJQ0FnWVd4cFoyNHRhWFJsYlhNNklHSmhjMlZzYVc1bE8xeHlYRzRnSUgxY2NseHVYSEpjYmlBZ1lTQjdYSEpjYmlBZ0lDQm1iMjUwTFdaaGJXbHNlVG9nSkdKaGMyVXRabTl1ZEMxbVlXMXBiSGs3WEhKY2JpQWdJQ0JtYjI1MExYTnBlbVU2SURFMmNIZzdYSEpjYmlBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nTWpBd08xeHlYRzRnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREU1Y0hnN1hISmNiaUFnSUNCc1pYUjBaWEl0YzNCaFkybHVaem9nTUdWdE8xeHlYRzRnSUNBZ2RHVjRkQzFoYkdsbmJqb2diR1ZtZER0Y2NseHVJQ0FnSUdOdmJHOXlPaUJ5WjJKaEtEQXNJREFzSURBc0lERXBPMXh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdjQ0I3WEhKY2JpQWdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3WEhKY2JpQWdmVnh5WEc1OVhISmNiaUlzSWk1d2NtVm1iM0p0SUh0Y2NseHVJQ0JtYjI1MExYTnBlbVU2SURRd2NIZzdYSEpjYmlBZ2JHbHVaUzFvWldsbmFIUTZJRFE0Y0hnN1hISmNiaUFnYldGeVoybHVMWFJ2Y0RvZ09EaHdlRHRjY2x4dUlDQnRZWEpuYVc0dFltOTBkRzl0T2lBeE1IQjRPMXh5WEc1Y2NseHVJQ0F1ZDNKaGNIQmxjaUI3WEhKY2JpQWdJQ0JrYVhOd2JHRjVPaUJuY21sa08xeHlYRzRnSUNBZ1ozSnBaQzEwWlcxd2JHRjBaUzFqYjJ4MWJXNXpPaUF6Wm5JZ01XWnlPMXh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdjQ0I3WEhKY2JpQWdJQ0JtYjI1MExYZGxhV2RvZERvZ01qQXdPMXh5WEc0Z0lDQWdiV0Z5WjJsdU9pQXdPMXh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdjM0JoYmlCN1hISmNiaUFnSUNCbWIyNTBMWGRsYVdkb2REb2dOekF3TzF4eVhHNGdJSDFjY2x4dVhISmNiaUFnWW5WMGRHOXVJSHRjY2x4dUlDQWdJRnh5WEc0Z0lHcDFjM1JwWm5rdFkyOXVkR1Z1ZERvZ1pteGxlQzF6ZEdGeWREdGNjbHh1SUNCaGJHbG5iaTFwZEdWdGN6b2daVzVrTzF4eVhHNGdJRnh5WEc0Z0lHRnNhV2R1TFhObGJHWTZJR1Z1WkR0Y2NseHVJQ0I5WEhKY2JuMWNjbHh1SWl3aUxuQnliMnBsWTNSeklIdGNjbHh1SUNBdExXMTBMV2x1YzJsa1pTMWpZWEprT2lBeE1IQjRPMXh5WEc1Y2NseHVJQ0FtWDE5dVlYWWdlMXh5WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNRHRjY2x4dUlDQWdJRzFoY21kcGJqb2dNRHRjY2x4dUlDQWdJR1JwYzNCc1lYazZJR2R5YVdRN1hISmNiaUFnSUNCbmNtbGtMWFJsYlhCc1lYUmxMV052YkhWdGJuTTZJSEpsY0dWaGRDaGhkWFJ2TFdacGRDd2diV2x1YldGNEtERXdNSEI0TENBeFpuSXBLVHRjY2x4dUlDQWdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjY2x4dUlDQWdJR2RoY0RvZ05UQndlRHRjY2x4dUlDQWdJRzFoY21kcGJpMTBiM0E2SURJd2NIZzdYSEpjYmlBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBMU1IQjRPMXh5WEc1Y2NseHVJQ0FnSUdFZ2UxeHlYRzRnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREUyY0hnN1hISmNiaUFnSUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUF5TURBN1hISmNiaUFnSUNBZ0lHeHBibVV0YUdWcFoyaDBPaUF4T1hCNE8xeHlYRzRnSUNBZ0lDQmpiMnh2Y2pvZ0pHTnZiRzl5TFdKc1lXTnJPMXh5WEc0Z0lDQWdJQ0IzYVdSMGFEb2dNVEF3SlR0Y2NseHVYSEpjYmlBZ0lDQWdJQ1piWVhKcFlTMXpaV3hsWTNSbFpEMWNJblJ5ZFdWY0lsMHNYSEpjYmlBZ0lDQWdJQ1k2YUc5MlpYSWdlMXh5WEc0Z0lDQWdJQ0FnSUdadmJuUXRkMlZwWjJoME9pQTNNREE3WEhKY2JpQWdJQ0FnSUgxY2NseHVJQ0JjY2x4dUlDQWdJQ0FnSmpwbWIyTjFjeTEyYVhOcFlteGxJSHRjY2x4dUlDQWdJQ0FnSUNCbWIyNTBMWGRsYVdkb2REb2dOekF3TzF4eVhHNGdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNiaUFnZlZ4eVhHNWNjbHh1SUNCc2FTQjdYSEpjYmlBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4eVhHNGdJQ0FnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2NseHVJQ0FnSUcxcGJpMW9aV2xuYUhRNklETXdjSGc3WEhKY2JpQWdJQ0JpYjNKa1pYSTZJREZ3ZUNCemIyeHBaQ0FrWTI5c2IzSXRZbXhoWTJzN1hISmNiaUFnSUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUE0TkhCNE8xeHlYRzRnSUgxY2NseHVYSEpjYmlBZ0psOWZZMkZ5WkNCN1hISmNiaUFnSUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hISmNiaUFnSUNCd1lXUmthVzVuT2lBMk1IQjRJREE3WEhKY2JpQWdJQ0JpYjNKa1pYSXRkRzl3T2lBeGNIZ2djMjlzYVdRZ0pHTnZiRzl5TFdKc1lXTnJPMXh5WEc1Y2NseHVJQ0FnSUZ4eVhHNGdJQ0FnY0NCN1hISmNiaUFnSUNBZ0lHWnZiblF0YzJsNlpUb2dNalJ3ZUR0Y2NseHVJQ0FnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRGN3TUR0Y2NseHVJQ0FnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREk1Y0hnN1hISmNiaUFnSUNBZ0lHTnZiRzl5T2lBa1kyOXNiM0l0WW14aFkyczdYSEpjYmlBZ0lDQWdJRzFoY21kcGJpMTBiM0E2SUhaaGNpZ3RMVzEwTFdsdWMybGtaUzFqWVhKa0tUdGNjbHh1SUNBZ0lIMWNjbHh1SUNCOVhISmNibHh5WEc0Z0lDWmZYMk4wWVNCN1hISmNiaUFnSUNCa2FYTndiR0Y1T2lCbmNtbGtPMXh5WEc0Z0lDQWdaM0pwWkMxMFpXMXdiR0YwWlMxamIyeDFiVzV6T2lBeU1EQndlQ0ExTUhCNElHRjFkRzhnTWpBd2NIZzdYSEpjYmlBZ0lDQnFkWE4wYVdaNUxXTnZiblJsYm5RNklITjBZWEowTzF4eVhHNGdJQ0FnWjJGd09pQTBOWEI0TzF4eVhHNGdJSDFjY2x4dVhISmNiaUFnYURNZ2UxeHlYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXlOSEI0TzF4eVhHNGdJQ0FnWm05dWRDMTNaV2xuYUhRNklEY3dNRHRjY2x4dUlDQWdJR3hwYm1VdGFHVnBaMmgwT2lBeU9YQjRPMXh5WEc0Z0lDQWdZMjlzYjNJNklDUmpiMnh2Y2kxaWJHRmphenRjY2x4dUlDQWdJRzFoY21kcGJpMTBiM0E2SUhaaGNpZ3RMVzEwTFdsdWMybGtaUzFqWVhKa0tUdGNjbHh1SUNBZ0lHMWhlQzEzYVdSMGFEb2dNakF3Y0hnN1hISmNiaUFnSUNCMFpYaDBMV0ZzYVdkdU9pQnNaV1owTzF4eVhHNGdJSDFjY2x4dVhISmNiaUFnYURRZ2UxeHlYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXlOSEI0TzF4eVhHNGdJQ0FnWm05dWRDMTNaV2xuYUhRNklESXdNRHRjY2x4dUlDQWdJR3hwYm1VdGFHVnBaMmgwT2lBeU9YQjRPMXh5WEc0Z0lDQWdZMjlzYjNJNklDUmpiMnh2Y2kxaWJHRmphenRjY2x4dUlDQWdJRzFoY21kcGJpMTBiM0E2SUhaaGNpZ3RMVzEwTFdsdWMybGtaUzFqWVhKa0tUdGNjbHh1SUNBZ0lHMWhlQzEzYVdSMGFEb2dNVGd3Y0hnN1hISmNiaUFnSUNCMFpYaDBMV0ZzYVdkdU9pQmxibVE3WEhKY2JpQWdmVnh5WEc1OUlpd2lMblpwWkdWdlgxOXBkR1Z0SUh0Y2NseHVYSFIzYVdSMGFEb2dNVEF3SlR0Y2NseHVYSFJvWldsbmFIUTZJREV3TUNVN1hISmNibHgwYjJKcVpXTjBMV1pwZERvZ1kyOTJaWEk3WEhKY2JuMWNjbHh1SWl3aVFHbHRjRzl5ZENCY0luWmxibVJ2Y2k5dWIzSnRZV3hwZW1VdWMyTnpjMXdpTzF4eVhHNUFhVzF3YjNKMElGd2laMnh2WW1Gc0wyWnZiblJ6TG5OamMzTmNJanRjYmtCcGJYQnZjblFnWENKbmJHOWlZV3d2ZFhScGJHbHpMbk5qYzNOY0lqdGNia0JwYlhCdmNuUWdYQ0puYkc5aVlXd3ZkbUZ5YVdGaWJHVnpMbk5qYzNOY0lqdGNjbHh1UUdsdGNHOXlkQ0JjSW1Kc2IyTnJMMlp2Y20wdWMyTnpjMXdpTzF4dVFHbHRjRzl5ZENCY0ltSnNiMk5yTDJobFlXUmxjaTV6WTNOelhDSTdYRzVBYVcxd2IzSjBJRndpWW14dlkyc3ZjSEpsWm05eWJTNXpZM056WENJN1hHNUFhVzF3YjNKMElGd2lZbXh2WTJzdmNISnZhbVZqZEhNdWMyTnpjMXdpTzF4dVFHbHRjRzl5ZENCY0ltSnNiMk5yTDNacFpHVnZMbk5qYzNOY0lqdGNjbHh1WEhKY2Jpb2dlMXh5WEc0Z0lHSnZlQzF6YVhwcGJtYzZJR0p2Y21SbGNpMWliM2c3WEhKY2JuMWNjbHh1WEhKY2JtSnZaSGtnZTF4eVhHNGdJR1p2Ym5RdGMybDZaVG9nSkdKaGMyVXRabTl1ZEMxemFYcGxPMXh5WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUFrWW1GelpTMW1iMjUwTFdaaGJXbHNlVHRjY2x4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTWpBd08xeHlYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQXhMalU3WEhKY2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dKR052Ykc5eUxYZG9hWFJsTzF4eVhHNTlYSEpjYmlKZGZRPT0gKi8iLCIvKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXHJcbi8qIERvY3VtZW50XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxyXG4gKi9cclxuLyogU2VjdGlvbnNcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cclxuICovXHJcbi8qKlxyXG4gKiBSZW5kZXIgdGhlIGBtYWluYCBlbGVtZW50IGNvbnNpc3RlbnRseSBpbiBJRS5cclxuICovXHJcbi8qKlxyXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXHJcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXHJcbiAqL1xyXG4vKiBHcm91cGluZyBjb250ZW50XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcbi8qKlxyXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxyXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cclxuICovXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG4vKipcclxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxyXG4gKi9cclxuLyoqXHJcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctXHJcbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXHJcbiAqL1xyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cclxuICovXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG4vKipcclxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXHJcbiAqIGFsbCBicm93c2Vycy5cclxuICovXHJcbi8qIEVtYmVkZGVkIGNvbnRlbnRcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAuXHJcbiAqL1xyXG4vKiBGb3Jtc1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG4vKipcclxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cclxuICovXHJcbi8qKlxyXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cclxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cclxuICovXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cclxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxyXG4gKi9cclxuLyoqXHJcbiAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXHJcbiAqL1xyXG4vKipcclxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cclxuICovXHJcbi8qKlxyXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXHJcbiAqL1xyXG4vKipcclxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxyXG4gKi9cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXHJcbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cclxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxyXG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cclxuICovXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxyXG4gKi9cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxyXG4gKi9cclxuLyoqXHJcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxyXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXHJcbiAqL1xyXG4vKipcclxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxyXG4gKi9cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxyXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cclxuICovXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXHJcbiAqL1xyXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cclxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxyXG4gKi9cclxuLyogSW50ZXJhY3RpdmVcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuLypcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cclxuICovXHJcbi8qXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cclxuICovXHJcbi8qIE1pc2NcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cclxuICovXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC5cclxuICovXHJcbmh0bWwge1xyXG5cdGxpbmUtaGVpZ2h0OiAxLjE1O1xyXG5cdC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcclxufVxyXG5ib2R5IHtcclxuXHRtYXJnaW46IDA7XHJcbn1cclxubWFpbiB7XHJcblx0ZGlzcGxheTogYmxvY2s7XHJcbn1cclxuaDEge1xyXG5cdGZvbnQtc2l6ZTogMmVtO1xyXG5cdG1hcmdpbjogMC42N2VtIDA7XHJcbn1cclxuaHIge1xyXG5cdGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xyXG5cdGhlaWdodDogMDtcclxuXHRvdmVyZmxvdzogdmlzaWJsZTtcclxufVxyXG5wcmUge1xyXG5cdGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcclxuXHRmb250LXNpemU6IDFlbTtcclxufVxyXG5hIHtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxufVxyXG5hYmJyW3RpdGxlXSB7XHJcblx0Ym9yZGVyLWJvdHRvbTogbm9uZTtcclxuXHR0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuXHR0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XHJcbn1cclxuYiB7XHJcblx0Zm9udC13ZWlnaHQ6IGJvbGRlcjtcclxufVxyXG5zdHJvbmcge1xyXG5cdGZvbnQtd2VpZ2h0OiBib2xkZXI7XHJcbn1cclxuY29kZSB7XHJcblx0Zm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xyXG5cdGZvbnQtc2l6ZTogMWVtO1xyXG59XHJcbmtiZCB7XHJcblx0Zm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xyXG5cdGZvbnQtc2l6ZTogMWVtO1xyXG59XHJcbnNhbXAge1xyXG5cdGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcclxuXHRmb250LXNpemU6IDFlbTtcclxufVxyXG5zbWFsbCB7XHJcblx0Zm9udC1zaXplOiA4MCU7XHJcbn1cclxuc3ViIHtcclxuXHRmb250LXNpemU6IDc1JTtcclxuXHRsaW5lLWhlaWdodDogMDtcclxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0dmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xyXG5cdGJvdHRvbTogLTAuMjVlbTtcclxufVxyXG5zdXAge1xyXG5cdGZvbnQtc2l6ZTogNzUlO1xyXG5cdGxpbmUtaGVpZ2h0OiAwO1xyXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHR2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XHJcblx0dG9wOiAtMC41ZW07XHJcbn1cclxuaW1nIHtcclxuXHRib3JkZXItc3R5bGU6IG5vbmU7XHJcbn1cclxuYnV0dG9uIHtcclxuXHRmb250LWZhbWlseTogaW5oZXJpdDtcclxuXHRmb250LXNpemU6IDEwMCU7XHJcblx0bGluZS1oZWlnaHQ6IDEuMTU7XHJcblx0bWFyZ2luOiAwO1xyXG5cdG92ZXJmbG93OiB2aXNpYmxlO1xyXG5cdHRleHQtdHJhbnNmb3JtOiBub25lO1xyXG5cdGJhY2tncm91bmQ6IG5vbmU7XHJcblx0Ym9yZGVyOiBub25lO1xyXG5cdGN1cnNvcjogcG9pbnRlcjtcclxuXHQtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcclxuXHQmOjotbW96LWZvY3VzLWlubmVyIHtcclxuXHRcdGJvcmRlci1zdHlsZTogbm9uZTtcclxuXHRcdHBhZGRpbmc6IDA7XHJcblx0fVxyXG5cdCY6LW1vei1mb2N1c3Jpbmcge1xyXG5cdFx0b3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xyXG5cdH1cclxufVxyXG5pbnB1dCB7XHJcblx0Zm9udC1mYW1pbHk6IGluaGVyaXQ7XHJcblx0Zm9udC1zaXplOiAxMDAlO1xyXG5cdGxpbmUtaGVpZ2h0OiAxLjE1O1xyXG5cdG1hcmdpbjogMDtcclxuXHRvdmVyZmxvdzogdmlzaWJsZTtcclxufVxyXG5vcHRncm91cCB7XHJcblx0Zm9udC1mYW1pbHk6IGluaGVyaXQ7XHJcblx0Zm9udC1zaXplOiAxMDAlO1xyXG5cdGxpbmUtaGVpZ2h0OiAxLjE1O1xyXG5cdG1hcmdpbjogMDtcclxufVxyXG5zZWxlY3Qge1xyXG5cdGZvbnQtZmFtaWx5OiBpbmhlcml0O1xyXG5cdGZvbnQtc2l6ZTogMTAwJTtcclxuXHRsaW5lLWhlaWdodDogMS4xNTtcclxuXHRtYXJnaW46IDA7XHJcblx0dGV4dC10cmFuc2Zvcm06IG5vbmU7XHJcbn1cclxudGV4dGFyZWEge1xyXG5cdGZvbnQtZmFtaWx5OiBpbmhlcml0O1xyXG5cdGZvbnQtc2l6ZTogMTAwJTtcclxuXHRsaW5lLWhlaWdodDogMS4xNTtcclxuXHRtYXJnaW46IDA7XHJcblx0b3ZlcmZsb3c6IGF1dG87XHJcbn1cclxuW3R5cGU9XCJidXR0b25cIl0ge1xyXG5cdC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xyXG5cdCY6Oi1tb3otZm9jdXMtaW5uZXIge1xyXG5cdFx0Ym9yZGVyLXN0eWxlOiBub25lO1xyXG5cdFx0cGFkZGluZzogMDtcclxuXHR9XHJcblx0JjotbW96LWZvY3VzcmluZyB7XHJcblx0XHRvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XHJcblx0fVxyXG59XHJcblt0eXBlPVwicmVzZXRcIl0ge1xyXG5cdC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xyXG5cdCY6Oi1tb3otZm9jdXMtaW5uZXIge1xyXG5cdFx0Ym9yZGVyLXN0eWxlOiBub25lO1xyXG5cdFx0cGFkZGluZzogMDtcclxuXHR9XHJcblx0JjotbW96LWZvY3VzcmluZyB7XHJcblx0XHRvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XHJcblx0fVxyXG59XHJcblt0eXBlPVwic3VibWl0XCJdIHtcclxuXHQtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcclxuXHQmOjotbW96LWZvY3VzLWlubmVyIHtcclxuXHRcdGJvcmRlci1zdHlsZTogbm9uZTtcclxuXHRcdHBhZGRpbmc6IDA7XHJcblx0fVxyXG5cdCY6LW1vei1mb2N1c3Jpbmcge1xyXG5cdFx0b3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xyXG5cdH1cclxufVxyXG5maWVsZHNldCB7XHJcblx0cGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtO1xyXG59XHJcbmxlZ2VuZCB7XHJcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcclxuXHRjb2xvcjogaW5oZXJpdDtcclxuXHRkaXNwbGF5OiB0YWJsZTtcclxuXHRtYXgtd2lkdGg6IDEwMCU7XHJcblx0cGFkZGluZzogMDtcclxuXHR3aGl0ZS1zcGFjZTogbm9ybWFsO1xyXG59XHJcbnByb2dyZXNzIHtcclxuXHR2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XHJcbn1cclxuW3R5cGU9XCJjaGVja2JveFwiXSB7XHJcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcclxuXHRwYWRkaW5nOiAwO1xyXG59XHJcblt0eXBlPVwicmFkaW9cIl0ge1xyXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcblx0cGFkZGluZzogMDtcclxufVxyXG5bdHlwZT1cIm51bWJlclwiXSB7XHJcblx0Jjo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbiB7XHJcblx0XHRoZWlnaHQ6IGF1dG87XHJcblx0fVxyXG5cdCY6Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xyXG5cdFx0aGVpZ2h0OiBhdXRvO1xyXG5cdH1cclxufVxyXG5bdHlwZT1cInNlYXJjaFwiXSB7XHJcblx0LXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XHJcblx0b3V0bGluZS1vZmZzZXQ6IC0ycHg7XHJcblx0Jjo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XHJcblx0XHQtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcblx0fVxyXG4gICY6Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcclxuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xyXG4gICAgZm9udDogaW5oZXJpdDtcclxuICB9XHJcbn1cclxuZGV0YWlscyB7XHJcblx0ZGlzcGxheTogYmxvY2s7XHJcbn1cclxuc3VtbWFyeSB7XHJcblx0ZGlzcGxheTogbGlzdC1pdGVtO1xyXG59XHJcbnRlbXBsYXRlIHtcclxuXHRkaXNwbGF5OiBub25lO1xyXG59XHJcbltoaWRkZW5dIHtcclxuXHRkaXNwbGF5OiBub25lO1xyXG59XHJcbi8qXHJcbkNVU1RPTSBTRVRUSU5HU1xyXG4qL1xyXG4qOjpiZWZvcmUsXHJcbio6OmFmdGVyIHtcclxuXHRwYWRkaW5nOiAwO1xyXG5cdG1hcmdpbjogMDtcclxuXHRib3JkZXI6IDA7XHJcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcclxufVxyXG5hIHtcclxuXHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxudWwsXHJcbm9sLFxyXG5saSB7XHJcblx0bGlzdC1zdHlsZTogbm9uZTtcclxufVxyXG4iLCIudmlzdWFsbHktaGlkZGVuIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcblxyXG4gIHdpZHRoOiAxcHg7XHJcbiAgaGVpZ2h0OiAxcHg7XHJcbiAgbWFyZ2luOiAtMXB4O1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuXHJcbiAgYm9yZGVyOiAwO1xyXG5cclxuICBjbGlwOiByZWN0KDAgMCAwIDApO1xyXG4gIGNsaXAtcGF0aDogaW5zZXQoMTAwJSk7XHJcbn1cclxuXHJcbi50aXRsZSB7XHJcbiAgZm9udC1zaXplOiA0MHB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgbGluZS1oZWlnaHQ6IDQ4cHg7XHJcbiAgbGV0dGVyLXNwYWNpbmc6IDBlbTtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIG1hcmdpbi10b3A6IDA7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxufVxyXG5cclxuLndyYXBwZXIge1xyXG4gIG1heC13aWR0aDogMTQ0MHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gIG1hcmdpbi1yaWdodDogYXV0bztcclxuICBwYWRkaW5nLWxlZnQ6IDE2cHg7XHJcbiAgcGFkZGluZy1yaWdodDogMTZweDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuXHJcbi5pcy1hY3RpdmUge1xyXG5mb250LXdlaWdodDogNzAwO1xyXG5mb250LXNpemU6IDE4cHg7XHJcbmxpbmUtaGVpZ2h0OiAyMnB4O1xyXG5sZXR0ZXItc3BhY2luZzogMGVtO1xyXG50ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcblxyXG4uYnRuIHtcclxuICAmLWFycm93IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICB3aWR0aDogMTAwcHg7XHJcbiAgICBoZWlnaHQ6IDEwMHB4O1xyXG4gIH1cclxuXHJcbiAgJi13aGl0ZSB7XHJcbiAgICBmb250LXNpemU6IDQwcHg7XHJcbiAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgbGluZS1oZWlnaHQ6IDQ4cHg7XHJcbiAgfVxyXG59XHJcbiIsIkBmb250LWZhY2Uge1xyXG4gIGZvbnQtZmFtaWx5OiBcIkludGVyXCI7XHJcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gIGZvbnQtd2VpZ2h0OiAyMDA7XHJcbiAgc3JjOiB1cmwoXCIvZm9udC9JbnRlci1FeHRyYUxpZ2h0LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpO1xyXG4gIGZvbnQtZGlzcGxheTogc3dhcDtcclxufVxyXG5cclxuQGZvbnQtZmFjZSB7XHJcbiAgZm9udC1mYW1pbHk6IFwiSW50ZXJcIjtcclxuICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICBzcmM6IHVybChcIi9mb250L0ludGVyLVJlZ3VsYXIud29mZjJcIikgZm9ybWF0KFwid29mZjJcIik7XHJcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuICBmb250LWZhbWlseTogXCJJbnRlclwiO1xyXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICBmb250LXdlaWdodDogNzAwO1xyXG4gIHNyYzogdXJsKFwiL2ZvbnQvSW50ZXItQm9sZC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcclxuICBmb250LWRpc3BsYXk6IHN3YXA7XHJcbn1cclxuXHJcblxyXG4vLyDRgNCw0LHQvtGC0LDQtdGCXHJcbi8vIEBtaXhpbiBmb250LWZhY2UoJGZhbWlseSwgJHVybCwgJHdlaWdodDogNDAwKSB7XHJcbi8vICAgQGZvbnQtZmFjZSB7XHJcbi8vICAgICBmb250LWZhbWlseTogJGZhbWlseTtcclxuLy8gICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuLy8gICAgIGZvbnQtd2VpZ2h0OiAkd2VpZ2h0O1xyXG4vLyAgICAgc3JjOiB1cmwoXCIjeyR1cmx9LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIjeyR1cmx9LndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcclxuLy8gICAgIGZvbnQtZGlzcGxheTogc3dhcDtcclxuLy8gICB9XHJcbi8vIH1cclxuXHJcbi8vIEBpbmNsdWRlIGZvbnQtZmFjZShcIkludGVyLUV4dHJhTGlnaHRcIiwgXCIuLi9mb250L0ludGVyLUV4dHJhTGlnaHRcIiwgMjAwKTtcclxuLy8gQGluY2x1ZGUgZm9udC1mYWNlKFwiSW50ZXItUmVndWxhclwiLCBcIi4uL2ZvbnQvSW50ZXItUmVndWxhclwiKTtcclxuLy8gQGluY2x1ZGUgZm9udC1mYWNlKFwiSW50ZXItQm9sZFwiLCBcIi4uL2ZvbnQvSW50ZXItQm9sZFwiLCA3MDApO1xyXG4iLCIuZm9ybSB7XHJcbiAgbWFyZ2luLXRvcDogODhweDtcclxuXHJcbiAgJl9faW50cm8ge1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDMsIDFmcik7XHJcbiAgXHJcbiAgICBoMiB7XHJcbiAgICAgIGdyaWQtY29sdW1uOiAyIC8gMztcclxuICAgICAganVzdGlmeS1zZWxmOiBjZW50ZXI7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBidXR0b24ge1xyXG4gICAgICBncmlkLWNvbHVtbjogMyAvIDQ7XHJcbiAgICAgIGp1c3RpZnktc2VsZjogZW5kO1xyXG4gICAgICBqdXN0aWZ5LWl0ZW1zOiBiYXNlbGluZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGZvcm0ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgfVxyXG5cclxuICBmaWVsZHNldCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyNXB4O1xyXG5cclxuICAgICY6bm90KDpmaXJzdC1vZi10eXBlKSB7XHJcbiAgICAgIG1hcmdpbi10b3A6IDI1cHg7XHJcbiAgICB9XHJcblxyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmciA2MHB4IDFmciAxZnI7XHJcbiAgICBnYXA6IDUwcHg7XHJcblxyXG4gICAgaDQge1xyXG4gICAgICBncmlkLWNvbHVtbjogMiAvIDM7XHJcbiAgICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgICAgZm9udC13ZWlnaHQ6IDIwMDtcclxuICAgICAgbGluZS1oZWlnaHQ6IDI5cHg7XHJcbiAgICAgIHRleHQtYWxpZ246IGVuZDtcclxuICAgICAgbWFyZ2luLXRvcDogOHB4O1xyXG4gICAgfVxyXG5cclxuICAgIHAge1xyXG4gICAgICBtYXJnaW4tdG9wOiA4cHg7XHJcbiAgICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJl9fc3RhZ2Uge1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMmZyIDVmcjtcclxuXHJcbiAgICBoMyB7XHJcbiAgICAgIGdyaWQtY29sdW1uOiAxIC8gMjtcclxuICAgICAgZ3JpZC1yb3c6IDEgLyAyO1xyXG4gICAgfVxyXG5cclxuICAgIHNtYWxsIHtcclxuICAgICAgZ3JpZC1jb2x1bW46IDEgLyAyO1xyXG4gICAgICBncmlkLXJvdzogMiAvIDM7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgICAgbGluZS1oZWlnaHQ6IDE3cHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uZm9ybV9fbGlzdCB7XHJcbiAgZ3JpZC1jb2x1bW46IDQgLyAtMTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgZ2FwOiA4cHg7XHJcbiAgd2lkdGg6IGZpdC1jb250ZW50O1xyXG5cclxuICBsYWJlbCB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGJhc2VsaW5lO1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDIwMDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxOXB4O1xyXG5cclxuICAgIC5mb3JtX190b29sdGlwIHtcclxuICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gICAgICB3aWR0aDogMTk3cHg7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICAgICAgYm94LXNoYWRvdzogNnB4IDZweCAxNnB4IDhweCByZ2JhKDE3NCwgMTc0LCAxOTIsIDAuMzUpO1xyXG4gICAgICB0ZXh0LWFsaWduOiBpbml0aWFsO1xyXG4gICAgICBwYWRkaW5nOiAyMnB4IDE0cHg7XHJcbiAgICAgIGJvcmRlci1yYWRpdXM6IDZweDtcclxuICAgICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgxNzUsIDE4NSwgMTkzLCAwLjY5KTtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB6LWluZGV4OiAxO1xyXG4gICAgICB0b3A6IC01cHg7XHJcbiAgICAgIGxlZnQ6IDEwNSU7IFxyXG5cclxuICAgICAgZm9udC1zaXplOiAxMHB4O1xyXG4gICAgICBmb250LXdlaWdodDogMjAwO1xyXG4gICAgICBsaW5lLWhlaWdodDogMTJweDtcclxuICAgICAgY29sb3I6ICRjb2xvci1ibGFjaztcclxuICAgIH1cclxuXHJcbiAgICAmOmhvdmVyIC5mb3JtX190b29sdGlwIHtcclxuICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGlucHV0IHtcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICB9XHJcbn1cclxuXHJcbi5mb3JtX19idXR0b25zIHtcclxuICBkaXNwbGF5OiBncmlkO1xyXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDMsIDFmcik7XHJcblxyXG4gIC5idG4td2hpdGUge1xyXG4gICAgZ3JpZC1jb2x1bW46IDIgLyAzO1xyXG4gICAgYm9yZGVyOiAzcHggc29saWQgJGNvbG9yLWJsYWNrO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNjBweDtcclxuICB9XHJcblxyXG4gIC5idG4tYXJyb3cge1xyXG4gICAgZ3JpZC1jb2x1bW46IDMgLyA0O1xyXG4gICAganVzdGlmeS1zZWxmOiBlbmQ7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcclxuICB9XHJcbn1cclxuXHJcbi8qINCS0JjQlCDQoNCQ0JfQoNCQ0JHQntCi0JrQmCAqL1xyXG4uZm9ybV9fbGFiZWwtYnJhbmRpbmcgLmZvcm1fX3Rvb2x0aXA6OmFmdGVyIHtcclxuICBjb250ZW50OiAn0JjQt9GD0YfQtdC90LjQtSDQsdGA0LXQvdC00LAg0LTQu9GPwqDRgNC10YjQtdC90LjRjyDQutC+0L3QutGA0LXRgtC90YvRhSDQvNCw0YDQutC10YLQuNC90LPQvtCy0YvRhSDQt9Cw0LTQsNGHLCDQssKg0YLQvtC8wqDRh9C40YHQu9C1INC/0L7QstGL0YjQtdC90LjQtSDQutC+0L3QutGD0YDQtdC90YLQvdC+0YHQv9C+0YHQvtCx0L3QvtGB0YLQuCwg0YTQvtGA0LzQuNGA0L7QstCw0L3QuNC1INGD0L3QuNC60LDQu9GM0L3QvtCz0L4g0L7QsdGA0LDQt9CwLCDQv9C+0LLRi9GI0LXQvdC40LUg0YHQuNC80L/QsNGC0LjQuCDQv9C+0YLRgNC10LHQuNGC0LXQu9C10LksINCwwqDRgtCw0LrQttC1INC30LDQutGA0LXQv9C70LXQvdC40LUg0LjCoNC00LDQu9GM0L3QtdC50YjQtdC1INGA0LDQt9Cy0LjRgtC40LUg0L/QvtC30LjRhtC40Lgg0L3QsMKg0YDRi9C90LrQtS4nO1xyXG59XHJcbi5mb3JtX19sYWJlbC1yZWJyYW5kaW5nIC5mb3JtX190b29sdGlwOjphZnRlciB7XHJcbiAgY29udGVudDogJ9Ce0LHQvdC+0LLQu9C10L3QuNC1INGD0LbQtcKg0LjQvNC10Y7RidC40YXRgdGPINC60L7QvdGG0LXQv9GC0L7QsiDQuMKg0YDQtdCw0LvQuNC30L7QstCw0L3QvdGL0YUg0LjQtNC10Lkg0L3QsMKg0L7RgdC90L7QstC1INC/0L7Qu9GD0YfQtdC90L3QvtCz0L4g0L7Qv9GL0YLQsCDQutC+0LzQv9Cw0L3QuNC4INC90LDCoNGA0YvQvdC60LUsINCywqDRgtC+0LzCoNGH0LjRgdC70LUg0LjCoNC/0L7Qu9C90L7QtSDRgNC10LrQvtC90YHRgtGA0YPQutGG0LjRjyDQvtCx0YDQsNC30LAg0LrQvtC80L/QsNC90LjQuCDRgcKg0L3Rg9C70Y8uJztcclxufVxyXG4uZm9ybV9fbGFiZWwtcmV0YWlsLWJyYW5kaW5nIC5mb3JtX190b29sdGlwOjphZnRlciB7XHJcbiAgY29udGVudDogJ9Cf0YDQvtC10LrRgtC40YDQvtCy0LDQvdC40LUg0LjCoNC+0L/RgtC40LzQuNC30LDRhtC40Y8g0YLQvtGA0LPQvtCy0L7Qs9C+INC/0YDQvtGB0YLRgNCw0L3RgdGC0LLQsCwg0YDQsNC30LLQuNGC0LjQtSDQutCw0YfQtdGB0YLQstCwINCy0LfQsNC40LzQvtC00LXQudGB0YLQstC40Y8g0YLQvtGA0LPQvtCy0YvRhSDRgtC+0YfQtdC6INGBwqDQutC70LjQtdC90YLQsNC80LguJztcclxufVxyXG4uZm9ybV9fbGFiZWwtbG9jYWxpemF0aW9uIC5mb3JtX190b29sdGlwOjphZnRlciB7XHJcbiAgY29udGVudDogJ9Cf0LXRgNC10LLQvtC0INC4INCw0LTQsNC/0YLQuNGA0L7QstCw0L3QuNC1INC40L3QvtGB0YLRgNCw0L3QvdC+0Lkg0L/RgNC+0LTRg9C60YbQuNC4INC/0L7QtCDQoNC+0YHRgdC40LnRgdC60LjQuSDRgdC10LPQvNC10L3RgiAo0LIg0YLQvtC8INGH0LjRgdC70LUg0L/QviDQv9GA0L7Qs9GA0LDQvNC80LUg0LjQvNC/0L7RgNGC0L7Qt9Cw0LzQtdGJ0LXQvdC40Y8pLic7XHJcbn1cclxuXHJcbi8qINCY0KHQodCb0JXQlNCe0JLQkNCd0JjQlSAqL1xyXG4uZm9ybV9fbGFiZWwtbWFya2V0aW5nLWFuYWx5c2lzIC5mb3JtX190b29sdGlwOjphZnRlciB7XHJcbiAgY29udGVudDogJ9Cf0YDQvtCy0L7QtNC40YLRgdGPINC/0L7Qu9C90YvQuSDQsNC90LDQu9C40Lcg0LLQt9Cw0LjQvNC+0LTQtdC50YHRgtCy0LjRjyDQvNC10LbQtNGDwqDQsdGA0LXQvdC00L7QvCDQuMKg0LrQu9C40LXQvdGC0L7QvCwg0L3QsNC/0YDRj9C80YPRjiDQstC70LjRj9GO0YnQuNC5INC90LDCoNGD0YDQvtCy0LXQvdGMINC60LvQuNC10L3RgtGB0LrQvtCz0L4g0L7Qv9GL0YLQsC4g0JLQutC70Y7Rh9Cw0LXRgiDQssKg0YHQtdCx0Y8g0LLQtdGB0Ywg0L/Rg9GC0Ywg0LrQu9C40LXQvdGC0LAg0L7RgsKg0L/QvtGC0YDQtdCx0L3QvtGB0YLQuCDQtNC+wqDRgNC10LfRg9C70YzRgtCw0YLQsCAoY3VzdG9tZXIgam91cm5leSksINCy0YHQtcKg0YLQvtGH0LrQuCDQutC+0L3RgtCw0LrRgtCwINC60LvQuNC10L3RgtCwINGBwqDQsdGA0LXQvdC00L7QvCAoYnJhbmQgdG91Y2hwb2ludHMpLCDQsMKg0YLQsNC60LbQtSDQvtC60YDRg9C20LXQvdC40LUg0L/RgNC4wqDQstC30LDQuNC80L7QtNC10LnRgdGC0LLQuNC4IChlbnZpcm9ubWVudCkuJztcclxufVxyXG4uZm9ybV9fbGFiZWwtY2ptIC5mb3JtX190b29sdGlwOjphZnRlciB7XHJcbiAgY29udGVudDogJ9Cf0YDQvtCy0L7QtNC40YLRgdGPINC/0L7Qu9C90YvQuSDQsNC90LDQu9C40Lcg0LLQt9Cw0LjQvNC+0LTQtdC50YHRgtCy0LjRjyDQvNC10LbQtNGDwqDQsdGA0LXQvdC00L7QvCDQuMKg0LrQu9C40LXQvdGC0L7QvCwg0L3QsNC/0YDRj9C80YPRjiDQstC70LjRj9GO0YnQuNC5INC90LDCoNGD0YDQvtCy0LXQvdGMINC60LvQuNC10L3RgtGB0LrQvtCz0L4g0L7Qv9GL0YLQsC4g0JLQutC70Y7Rh9Cw0LXRgiDQssKg0YHQtdCx0Y8g0LLQtdGB0Ywg0L/Rg9GC0Ywg0LrQu9C40LXQvdGC0LAg0L7RgsKg0L/QvtGC0YDQtdCx0L3QvtGB0YLQuCDQtNC+wqDRgNC10LfRg9C70YzRgtCw0YLQsCAoY3VzdG9tZXIgam91cm5leSksINCy0YHQtcKg0YLQvtGH0LrQuCDQutC+0L3RgtCw0LrRgtCwINC60LvQuNC10L3RgtCwINGBwqDQsdGA0LXQvdC00L7QvCAoYnJhbmQgdG91Y2hwb2ludHMpLCDQsMKg0YLQsNC60LbQtSDQvtC60YDRg9C20LXQvdC40LUg0L/RgNC4wqDQstC30LDQuNC80L7QtNC10LnRgdGC0LLQuNC4IChlbnZpcm9ubWVudCkuJztcclxufVxyXG4uZm9ybV9fbGFiZWwtY3VzdG9tZXItZXhwZXJpZW5jZSAuZm9ybV9fdG9vbHRpcDo6YWZ0ZXIge1xyXG4gIGNvbnRlbnQ6ICfQn9GA0L7QstC+0LTQuNGC0YHRjyDQv9C+0LvQvdGL0Lkg0LDQvdCw0LvQuNC3INCy0LfQsNC40LzQvtC00LXQudGB0YLQstC40Y8g0LzQtdC20LTRg8Kg0LHRgNC10L3QtNC+0Lwg0LjCoNC60LvQuNC10L3RgtC+0LwsINC90LDQv9GA0Y/QvNGD0Y4g0LLQu9C40Y/RjtGJ0LjQuSDQvdCwwqDRg9GA0L7QstC10L3RjCDQutC70LjQtdC90YLRgdC60L7Qs9C+INC+0L/Ri9GC0LAuINCS0LrQu9GO0YfQsNC10YIg0LLCoNGB0LXQsdGPINCy0LXRgdGMINC/0YPRgtGMINC60LvQuNC10L3RgtCwINC+0YLCoNC/0L7RgtGA0LXQsdC90L7RgdGC0Lgg0LTQvsKg0YDQtdC30YPQu9GM0YLQsNGC0LAgKGN1c3RvbWVyIGpvdXJuZXkpLCDQstGB0LXCoNGC0L7Rh9C60Lgg0LrQvtC90YLQsNC60YLQsCDQutC70LjQtdC90YLQsCDRgcKg0LHRgNC10L3QtNC+0LwgKGJyYW5kIHRvdWNocG9pbnRzKSwg0LDCoNGC0LDQutC20LUg0L7QutGA0YPQttC10L3QuNC1INC/0YDQuMKg0LLQt9Cw0LjQvNC+0LTQtdC50YHRgtCy0LjQuCAoZW52aXJvbm1lbnQpLic7XHJcbn1cclxuLmZvcm1fX2xhYmVsLWJyYW5kLWF1ZGl0IC5mb3JtX190b29sdGlwOjphZnRlciB7XHJcbiAgY29udGVudDogJ9CQ0YPQtNC40YIg0LHRgNC10L3QtNCwwqDigJQg0L7QtNC40L0g0LjQt8Kg0YHQsNC80YvRhSDQvdCw0LTRkdC20L3Ri9GFINC80LXRgtC+0LTQvtCyINCw0L3QsNC70LjQt9CwINGB0L7RgdGC0LDQstC70Y/RjtGJ0LjRhSDQsdGA0LXQvdC00LAsINCwwqDQuNC80LXQvdC90L46INC10LPQvsKg0LrQvtC90LrRg9GA0LXQvdGC0L7RgdC/0L7RgdC+0LHQvdC+0YHRgtC4LCDRgtC10LrRg9GJ0LXQs9C+INC/0L7Qu9C+0LbQtdC90LjRjyDQsdGA0LXQvdC00LAg0L3QsMKg0YDRi9C90LrQtSwg0LLQutC70Y7Rh9Cw0Y8g0LjRgdGB0LvQtdC00L7QstCw0L3QuNC1INC/0L7RgtC10L3RhtC40LDQu9CwINC00LvRj8Kg0LXQs9C+wqDQtNCw0LvRjNC90LXQudGI0LXQs9C+INGA0LDQt9Cy0LjRgtC40Y8uJztcclxufVxyXG4uZm9ybV9fbGFiZWwtc3RydWN0dXJpbmctb2YtdGhlLXJlY2VpdmVkLWRhdGEgLmZvcm1fX3Rvb2x0aXA6OmFmdGVyIHtcclxuICBjb250ZW50OiAn0JLRgdC1wqDQv9C+0LvRg9GH0LXQvdC90YvQtSDQtNCw0L3QvdGL0LUg0LfQsNGC0LXQvCDRgdGC0YDRg9C60YLRg9GA0LjRgNGD0Y7RgtGB0Y8g0LTQu9GPwqDQv9C+0LTQsdC+0YDQsCDQvtC/0YLQuNC80LDQu9GM0L3QvtC5INGB0YLRgNCw0YLQtdCz0LjQuCDQv9C+0LfQuNGG0LjQvtC90LjRgNC+0LLQsNC90LjRjywg0YHQtdCz0LzQtdC90YLQuNGA0L7QstCw0L3QuNGPINC60LvRjtGH0LXQstGL0YUg0LPRgNGD0L/QvyDRhtC10LvQtdCy0L7QuSDQsNGD0LTQuNGC0L7RgNC40LgsINCy0YvRj9Cy0LvQtdC90LjQuCDRgdC40LvRjNC90YvRhSDQuMKg0YHQu9Cw0LHRi9GFINGB0YLQvtGA0L7QvSDQv9C+0LfQuNGG0LjQvtC90LjRgNC+0LLQsNC90LjRjyDQsdGA0LXQvdC00LAg0L7RgtC90L7RgdC40YLQtdC70YzQvdC+INC60L7QvdC60YPRgNC10L3RgtC+0LIuINCc0YvCoNC40YHQv9C+0LvRjNC30YPQtdC8INGB0L7QsdGB0YLQstC10L3QvdGL0LUg0LjCoNC80LXQttC00YPQvdCw0YDQvtC00L3Ri9C1INC80LXRgtC+0LTQuNC60Lgg0LjQt9GD0YfQtdC90LjRjyDQsdGA0LXQvdC00L7Qsiwg0L/RgNC40LzQtdC90Y/RjyDRgdCw0LzRi9C1INGA0LXQt9GD0LvRjNGC0LDRgtC40LLQvdGL0LUg0LzQvtC00LXQu9C4Lic7XHJcbn1cclxuIiwiLmhlYWRlciB7XHJcbiAgbWFyZ2luLXRvcDogMjdweDtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG5cclxuICAud3JhcHBlciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgfVxyXG5cclxuICAmX19uYXYge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIGdhcDogNTBweDtcclxuICAgIGFsaWduLWl0ZW1zOiBiYXNlbGluZTtcclxuICB9XHJcblxyXG4gIGEge1xyXG4gICAgZm9udC1mYW1pbHk6ICRiYXNlLWZvbnQtZmFtaWx5O1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDIwMDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxOXB4O1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IDBlbTtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAxKTtcclxuICB9XHJcblxyXG4gIHAge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxufVxyXG4iLCIucHJlZm9ybSB7XHJcbiAgZm9udC1zaXplOiA0MHB4O1xyXG4gIGxpbmUtaGVpZ2h0OiA0OHB4O1xyXG4gIG1hcmdpbi10b3A6IDg4cHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuXHJcbiAgLndyYXBwZXIge1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogM2ZyIDFmcjtcclxuICB9XHJcblxyXG4gIHAge1xyXG4gICAgZm9udC13ZWlnaHQ6IDIwMDtcclxuICAgIG1hcmdpbjogMDtcclxuICB9XHJcblxyXG4gIHNwYW4ge1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICB9XHJcblxyXG4gIGJ1dHRvbiB7XHJcbiAgICBcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgYWxpZ24taXRlbXM6IGVuZDtcclxuICBcclxuICBhbGlnbi1zZWxmOiBlbmQ7XHJcbiAgfVxyXG59XHJcbiIsIi5wcm9qZWN0cyB7XHJcbiAgLS1tdC1pbnNpZGUtY2FyZDogMTBweDtcclxuXHJcbiAgJl9fbmF2IHtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCgxMDBweCwgMWZyKSk7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBnYXA6IDUwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNTBweDtcclxuXHJcbiAgICBhIHtcclxuICAgICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgICBmb250LXdlaWdodDogMjAwO1xyXG4gICAgICBsaW5lLWhlaWdodDogMTlweDtcclxuICAgICAgY29sb3I6ICRjb2xvci1ibGFjaztcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcblxyXG4gICAgICAmW2FyaWEtc2VsZWN0ZWQ9XCJ0cnVlXCJdLFxyXG4gICAgICAmOmhvdmVyIHtcclxuICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgICB9XHJcbiAgXHJcbiAgICAgICY6Zm9jdXMtdmlzaWJsZSB7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgbGkge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBtaW4taGVpZ2h0OiAzMHB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgJGNvbG9yLWJsYWNrO1xyXG4gICAgYm9yZGVyLXJhZGl1czogODRweDtcclxuICB9XHJcblxyXG4gICZfX2NhcmQge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgcGFkZGluZzogNjBweCAwO1xyXG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRjb2xvci1ibGFjaztcclxuXHJcbiAgICBcclxuICAgIHAge1xyXG4gICAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICAgIGxpbmUtaGVpZ2h0OiAyOXB4O1xyXG4gICAgICBjb2xvcjogJGNvbG9yLWJsYWNrO1xyXG4gICAgICBtYXJnaW4tdG9wOiB2YXIoLS1tdC1pbnNpZGUtY2FyZCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmX19jdGEge1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMjAwcHggNTBweCBhdXRvIDIwMHB4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzdGFydDtcclxuICAgIGdhcDogNDVweDtcclxuICB9XHJcblxyXG4gIGgzIHtcclxuICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICBsaW5lLWhlaWdodDogMjlweDtcclxuICAgIGNvbG9yOiAkY29sb3ItYmxhY2s7XHJcbiAgICBtYXJnaW4tdG9wOiB2YXIoLS1tdC1pbnNpZGUtY2FyZCk7XHJcbiAgICBtYXgtd2lkdGg6IDIwMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICB9XHJcblxyXG4gIGg0IHtcclxuICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgIGZvbnQtd2VpZ2h0OiAyMDA7XHJcbiAgICBsaW5lLWhlaWdodDogMjlweDtcclxuICAgIGNvbG9yOiAkY29sb3ItYmxhY2s7XHJcbiAgICBtYXJnaW4tdG9wOiB2YXIoLS1tdC1pbnNpZGUtY2FyZCk7XHJcbiAgICBtYXgtd2lkdGg6IDE4MHB4O1xyXG4gICAgdGV4dC1hbGlnbjogZW5kO1xyXG4gIH1cclxufSIsIi52aWRlb19faXRlbSB7XHJcblx0d2lkdGg6IDEwMCU7XHJcblx0aGVpZ2h0OiAxMDAlO1xyXG5cdG9iamVjdC1maXQ6IGNvdmVyO1xyXG59XHJcbiIsIkBpbXBvcnQgXCJ2ZW5kb3Ivbm9ybWFsaXplLnNjc3NcIjtcclxuQGltcG9ydCBcImdsb2JhbC9mb250cy5zY3NzXCI7XG5AaW1wb3J0IFwiZ2xvYmFsL3V0aWxpcy5zY3NzXCI7XG5AaW1wb3J0IFwiZ2xvYmFsL3ZhcmlhYmxlcy5zY3NzXCI7XHJcbkBpbXBvcnQgXCJibG9jay9mb3JtLnNjc3NcIjtcbkBpbXBvcnQgXCJibG9jay9oZWFkZXIuc2Nzc1wiO1xuQGltcG9ydCBcImJsb2NrL3ByZWZvcm0uc2Nzc1wiO1xuQGltcG9ydCBcImJsb2NrL3Byb2plY3RzLnNjc3NcIjtcbkBpbXBvcnQgXCJibG9jay92aWRlby5zY3NzXCI7XHJcblxyXG4qIHtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG5ib2R5IHtcclxuICBmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZTtcclxuICBmb250LWZhbWlseTogJGJhc2UtZm9udC1mYW1pbHk7XHJcbiAgZm9udC13ZWlnaHQ6IDIwMDtcclxuICBsaW5lLWhlaWdodDogMS41O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci13aGl0ZTtcclxufVxyXG4iXX0= */