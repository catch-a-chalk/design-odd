@charset "UTF-8";
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0;scroll-behavior:smooth;font:200 21px/1.5 "Inter","MS Sans Serif",sans-serif;background:#fff}details,main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font:1em monospace,monospace}a,button{background:0 0}a{text-decoration:none}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none;-o-object-fit:contain;object-fit:contain}button{font:100%/1.15 inherit;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content;margin:0;overflow:visible;text-transform:none;border:0;cursor:pointer;-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}input{font:100%/1.15 inherit;margin:0;overflow:visible}input[type=checkbox]+span{content:url(../img/check-off.svg);opacity:.8}input[type=checkbox]+span:focus,input[type=checkbox]+span:focus-within,input[type=checkbox]+span:hover{opacity:1}input[type=checkbox]:checked+span{content:url(../img/check-on.svg)}input[type=checkbox]:disabled+span,input[type=checkbox]:disabled~small{opacity:.5;cursor:default}optgroup,select,textarea{font:100%/1.15 inherit;margin:0}select{text-transform:none}textarea{overflow:auto}[type=button],[type=reset],[type=submit]{-webkit-appearance:button}fieldset{padding:.35em .75em .625em}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{vertical-align:baseline}[type=checkbox],[type=radio],legend{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button{height:auto}[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}[type=search]::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}::after,::before{padding:0;margin:0;border:0;-webkit-box-sizing:border-box;box-sizing:border-box}li,ol,ul{list-style:none}@font-face{font-family:"Inter";font-style:normal;font-weight:200;src:url(/font/Inter-ExtraLight.woff2) format("woff2");font-display:swap}@font-face{font-family:"Inter";font-style:normal;font-weight:400;src:url(/font/Inter-Regular.woff2) format("woff2");font-display:swap}@font-face{font-family:"Inter";font-style:normal;font-weight:700;src:url(/font/Inter-Bold.woff2) format("woff2");font-display:swap}body.on-modal{overflow:hidden}.visually-hidden{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;white-space:nowrap;border:0;clip:rect(0 0 0 0);-webkit-clip-path:inset(100%);clip-path:inset(100%)}.title{font-size:40px;font-weight:700;line-height:48px;letter-spacing:0;text-align:left;margin-top:0;margin-bottom:20px}.btn-arrow,.wrapper{display:-webkit-box;display:-ms-flexbox;display:flex}.wrapper{max-width:1440px;margin-left:auto;margin-right:auto;padding-left:150px;padding-right:150px;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.btn-arrow{width:75px;height:75px}.btn-white,.dev__web-inbox p{font:700 40px/48px "Inter","MS Sans Serif",sans-serif}.btn-black,.btn-white{display:-webkit-box;display:-ms-flexbox;display:flex;cursor:pointer}.btn-white{background:#fff;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:5px 12px;border:2px solid #0e0e0e;border-radius:40px;color:#0e0e0e}.btn-white:active{color:#282828;border:2px solid #282828}.btn-white:before{content:"оставить заявку"}.btn-black{background:#0e0e0e;font:700 24px/29px "Inter","MS Sans Serif",sans-serif;padding:5px 36px;border-radius:25px;color:#fff}.btn-black--order,.btn-black--send{justify-self:center}.btn-black--order:before{content:"Заказать"}.btn-black--add:before{content:"Добавить"}.btn-black--review:before{content:"Обзор.."}.btn-black--send:before{content:"Отправить"}.btn-black--add:active,.btn-black--order:active,.btn-black--send:active{width:39px;height:39px;padding:0}.btn-black--order:active:after,.btn-black--order:active:before{background:#fff;content:"";width:21px;height:2px;-webkit-transform:translate(10px,18px) rotate(45deg);-ms-transform:translate(10px,18px) rotate(45deg);transform:translate(10px,18px) rotate(45deg)}.btn-black--order:active:after{-webkit-transform:translate(-10px,18px) rotate(-45deg);-ms-transform:translate(-10px,18px) rotate(-45deg);transform:translate(-10px,18px) rotate(-45deg)}.btn-black--add:active:before,.btn-black--send:active:before{background:#fff;content:"";width:21px;height:2px;-webkit-transform:translate(0,2px) rotate(45deg);-ms-transform:translate(0,2px) rotate(45deg);transform:translate(0,2px) rotate(45deg)}.btn-black--add:active:after,.btn-black--send:active:after{background:#fff;content:"";width:21px;height:2px;-webkit-transform:translate(0,0) rotate(-45deg);-ms-transform:translate(0,0) rotate(-45deg);transform:translate(0,0) rotate(-45deg)}.dev__web-container{padding-top:88px;padding-bottom:10px;display:grid;grid-template-columns:10fr 2fr;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.dev__web-inbox,.dev__web-services{display:-webkit-box;display:-ms-flexbox;display:flex}.dev__web-inbox{-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;justify-self:flex-end;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:60px}.dev__web-inbox p{margin-top:0;margin-bottom:20px;justify-self:flex-end}.dev__web-inbox a{width:60px;justify-self:end}.dev__web-services{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0;margin:120px 0 30px;gap:100px}.dev__web-services fieldset{padding:0;display:grid;grid-template-columns:250px 70px auto 200px;grid-template-rows:50px auto;gap:10px;border:0;grid-template-areas:"title number description price" "title number description button"}.dev__web-services fieldset label{grid-area:button;justify-self:center}.dev__web-services fieldset input:checked+span,.form__ready-container input:checked+span{outline:2px solid #0e0e0e;outline-offset:3px}.dev__web-services .btn-white{width:418px;-ms-flex-item-align:center;align-self:center}.dev__web-title{font:200 24px/29px "Inter","MS Sans Serif",sans-serif;grid-area:title;text-align:end;word-break:break-word}.dev__web-number{font:700 24px/29px "Inter","MS Sans Serif",sans-serif;grid-area:number;justify-self:center}.dev__web-description,.dev__web-price{margin-bottom:0}.dev__web-description{font:200 24px/29px "Inter","MS Sans Serif",sans-serif;grid-area:description;padding-right:20px}.dev__web-description span,.dev__web-price,.dev__web-promotion,.footer__contacts p{font:700 24px/29px "Inter","MS Sans Serif",sans-serif}.dev__web-price{grid-area:price}.dev__web-promotion{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:385px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-item-align:center;align-self:center;border:1px solid #d3d3d3;border-radius:20px;margin-top:30px;margin-bottom:0;padding:30px 10px}.dev__web-promotion p:first-child{word-break:break-word;text-align:center;margin-top:0;margin-bottom:50px}.dev__web-promotion--active{border:1px solid #0e0e0e}.footer{background:#fff;max-width:1440px;margin-left:auto;margin-right:auto;padding:80px 150px 0;position:relative;z-index:2}.footer__contacts{display:grid;grid-template-columns:repeat(4,1fr);gap:30px;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:0;margin-top:84px}.footer__contacts a{font:200 24px/29px "Inter","MS Sans Serif",sans-serif;color:#0e0e0e}.footer__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.footer__item:nth-child(2n+1) a{text-decoration:underline}.footer__item:not(:first-child),.footer__item:not(:last-child){justify-self:center}.footer__item:first-child{justify-self:baseline}.footer__item:last-child{justify-self:end}.footer img{display:block;width:100%;aspect-ratio:1440/396;max-height:294px}.form,.form .wrapper,.form__boooooox,.ordering__container label button{position:relative}.form fieldset{padding:0;border:0}.form fieldset input{position:absolute;width:1px;height:1px;overflow:hidden;clip:rect(0 0 0 0)}.form__boooooox{border:0;display:grid;grid-template-columns:1fr 1fr 60px 1fr 1fr;gap:50px}.form__boooooox h4{font:200 24px/29px "Inter","MS Sans Serif",sans-serif;grid-column:3/1;text-align:end;margin-top:0}.form__option{background:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none'%3E%3Crect width='15' height='15' x='.5' y='.5' fill='%23fff' rx='3.5'/%3E%3Crect width='15' height='15' x='.5' y='.5' stroke='%23E8E7E7' rx='3.5'/%3E%3C/svg%3E") no-repeat;cursor:pointer;width:16px;height:16px}fieldset input:checked+.form__option,fieldset input:checked:hover+.form__option{background:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none'%3E%3Crect width='15' height='15' x='.5' y='.5' fill='%23fff' rx='3.5'/%3E%3Cpath stroke='%23000' d='M4 7.143 7.2 10 12 5'/%3E%3Crect width='15' height='15' x='.5' y='.5' stroke='%23000' rx='3.5'/%3E%3C/svg%3E") no-repeat}.form__intro{background:#fff;padding-top:70px;display:grid;grid-template-columns:repeat(3,1fr)}.form__intro h2{grid-column:2/3;justify-self:center;margin-bottom:30px}.form__progress{background:#eaecf0;position:absolute;width:6px;height:120em;-webkit-box-shadow:1px 1px 2px 0 #a6abbd inset;box-shadow:1px 1px 2px 0 #a6abbd inset;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-item-align:center;align-self:center;top:150px;z-index:-2;border-radius:6px}.form__progress-bar{background:#0e0e0e;position:fixed;width:6px;height:50vh;top:0;bottom:50vh;z-index:-1}.form__progress-overlay-bottom,.form__progress-overlay-top{position:absolute;top:0;bottom:auto;left:0;right:0;z-index:1}.form__progress-overlay-top{background:#0e0e0e;width:6px}.form__progress-overlay-bottom{background:linear-gradient(top,#040404 50%,#fff 50%);width:100%;height:25vh}.form__stages{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;position:relative}.form__stages::after{content:"";position:fixed;bottom:0;left:0;width:100%;height:50%;background:-webkit-gradient(linear,left top,left bottom,from(rgba(255,255,255,0)),to(#fff));background:-o-linear-gradient(top,rgba(255,255,255,0),#fff);background:linear-gradient(to bottom,rgba(255,255,255,0),#fff);pointer-events:none;z-index:1}.form__stages-container{display:grid;grid-template-columns:2fr 5fr;overflow:hidden}.form__stages-container h3{grid-column:1/2;grid-row:1/2}.form__stages-container small{font:400 14px/17px "Inter","MS Sans Serif",sans-serif;grid-column:1/2;grid-row:2/3;-webkit-transform:translateX(-150%);-ms-transform:translateX(-150%);transform:translateX(-150%);-webkit-transition:-webkit-transform .5s;-o-transition:transform .5s;transition:transform .5s;transition:transform .5s,-webkit-transform .5s}.form__stages-container h3:hover+small{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0);-webkit-transition-delay:.5s;-o-transition-delay:.5s;transition-delay:.5s}.form__stages h4:not(:first-of-type){background:#fff}.form__stages fieldset,.form__stages-toggle{display:-webkit-box;display:-ms-flexbox;display:flex}.form__stages-toggle{background:#eaecf0;margin:0;border-radius:30px;width:58px;height:58px;-webkit-transform:translateZ(0);transform:translateZ(0);position:static;top:50vh;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-shadow:3px 3px 3px 0 #aeb8c0 inset;box-shadow:3px 3px 3px 0 #aeb8c0 inset;border:4px solid #fff}.form__stages-toggle--active{background:#000;font:700 24px/29px "Inter","MS Sans Serif",sans-serif;color:#fff;-webkit-box-shadow:none;box-shadow:none;position:sticky}.form__stages fieldset{margin-top:30px;margin-bottom:25px;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:60px}.form__stages fieldset:not(:first-of-type){margin-top:25px}.form__stages-btn{background:#fff;display:grid;grid-template-columns:repeat(3,1fr);padding-top:50px;justify-items:center}.form__ready-cards a,.form__ready-cards button,.form__stages-btn .btn-white{grid-column:2/3}.form__stages-btn,.form__stages-btn .btn-arrow{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.form__stages-btn .btn-arrow{grid-column:3/4;justify-self:end;-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.form__stages-list{grid-column:4/-1;display:grid;gap:8px;grid-template-columns:minmax(190px,380px)}.form__stages-list label{font:200 16px/19px "Inter","MS Sans Serif",sans-serif;position:relative;display:grid;grid-template-columns:-webkit-min-content minmax(auto,322px) auto;grid-template-columns:min-content minmax(auto,322px) auto;gap:10px;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline}.form__stages-list label:hover{font-weight:700;font-size:16px}.form__stages-list label:hover .form__stages-tooltip{visibility:visible}.form__stages-tooltip{background:#fff;grid-column:2/3;visibility:hidden;width:197px;-webkit-box-shadow:6px 6px 16px 8px rgba(174,174,192,.35);box-shadow:6px 6px 16px 8px rgba(174,174,192,.35);text-align:initial;padding:22px 14px;border-radius:6px;border:1px solid rgba(175,185,193,.69);position:absolute;z-index:1;left:110%;white-space:normal;font:200 10px/12px "Inter","MS Sans Serif",sans-serif;color:#0e0e0e}.form__stages-tooltip:not(:last-child){bottom:-100%}.form__ready{background:#fff;padding-top:83px;position:relative;z-index:2}.form__ready h3{padding-left:100px}.form__ready-cards{display:grid;grid-template-columns:repeat(3,minmax(200px,360px));gap:30px;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin-top:83px}.form__ready-cards fieldset{display:grid;grid-template-rows:1fr 60px;border:0}.form__ready-card{display:grid;grid-template-rows:80px minmax(auto,1fr) auto;gap:10px;justify-items:center;padding:8px 30px 43px;border:2px solid #d3d3d3;border-radius:20px;overflow:hidden}.form__ready-card:active,.form__ready-card:focus,.form__ready-card:focus-within,.form__ready-card:hover,.ordering__about textarea:active,.ordering__about textarea:focus,.ordering__about textarea:focus-within,.ordering__required:active,.ordering__required:focus,.ordering__required:focus-within{border:2px solid #0e0e0e}.form__ready-card h4,.form__ready-container p{font:700 24px/29px "Inter","MS Sans Serif",sans-serif;text-align:center}.form__ready-card h4{margin-top:10px;margin-bottom:10px}.form__ready-card label{display:-webkit-box;display:-ms-flexbox;display:flex}.form__ready-card label input{margin-right:10px}.form__ready-card label p{font:200 16px/19px "Inter","MS Sans Serif",sans-serif;margin:0}.form__ready-list{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:8px;padding:20px}.form__ready-list label{display:grid;grid-template-columns:16px 1fr;gap:10px}.form__ready-commentary,.form__ready-container,.form__ready-list{display:-webkit-box;display:-ms-flexbox;display:flex}.form__ready-container{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.form__ready-container p{margin:5px 0}.form__ready-commentary{font:200 16px/19px "Inter","MS Sans Serif",sans-serif;width:auto;margin-top:10px;margin-bottom:10px}.form__stages-modal{background:#fff;display:none;position:fixed;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);border:2px solid #000;padding:20px;-webkit-box-shadow:0 4px 8px rgba(0,0,0,.1);box-shadow:0 4px 8px rgba(0,0,0,.1);z-index:1000;max-width:80%;max-height:80%;overflow-y:auto}.form__stages-actions button.btn-arrow{background:0 0;border:0;cursor:pointer;display:block;margin-left:auto}.form__stages-content{margin-top:20px;padding:10px;border-top:1px solid #ccc}.form__stages-question{background:red;cursor:pointer;width:20px;height:20px}.header{background:#fff;padding-top:27px;padding-bottom:10px;position:relative;z-index:3;min-height:121px}.navbar,.navbar__wrap{display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.navbar{gap:30px;background:#fff}.navbar__wrap{-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:100px}.hamb,.ordering input[type=file],.popupp{display:none}.logo img{display:block}.menu>li>a{font:200 18px/22px "Inter","MS Sans Serif",sans-serif;letter-spacing:0;text-align:left;color:#000}.menu{-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;gap:30px}.navbar__wrap .menu>li{-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch}.menu,.navbar__wrap .menu>li,.navbar__wrap .menu>li>a,.ordering__form p{display:-webkit-box;display:-ms-flexbox;display:flex}.navbar__wrap .menu>li>a{-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 20px;color:#000}.navbar__wrap .menu>li>a.active{font:700 18px/21px "Inter","MS Sans Serif",sans-serif}.ordering{margin-top:70px}.ordering input,.ordering label,.ordering textarea{font:200 24px/29px "Inter","MS Sans Serif",sans-serif;cursor:pointer;outline:0;caret-color:#0e0e0e;-webkit-tap-highlight-color:transparent;-webkit-appearance:none}.ordering__form{display:grid;grid-template-columns:repeat(2,1fr);grid-template-areas:"info details" "info about" "file about" "promo discount" "buttons buttons";-webkit-column-gap:100px;-moz-column-gap:100px;column-gap:100px;row-gap:26px;position:relative}.ordering__form p{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.ordering__form input{max-height:35px}.ordering__info{grid-area:info}.ordering__info p:first-child{margin-top:0}.ordering__info p:last-child{margin-bottom:0}.ordering__promo{grid-area:promo;border:2px solid #151719;border-radius:25px;padding:5px 20px;display:grid;grid-template-columns:1fr 1fr;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:10px}.ordering__buttons strong,.ordering__promo label,.preform span,.projects__nav a:hover,.projects__nav a[aria-selected=true]{font-weight:700}.ordering__promo input{border:0;width:100%;text-align:center;outline:0}.ordering__about textarea,.ordering__required{border:2px solid #151719;border-radius:25px;padding:5px 20px;margin-top:12px;margin-bottom:12px}.ordering__file{grid-area:file}.ordering__file label{display:grid;grid-template-columns:1fr 3fr;gap:15px;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline}.ordering__file-label{grid-column:1/-1;grid-row:1/2}.ordering__file-btn{font:700 24px/29px "Inter","MS Sans Serif",sans-serif;grid-column:1/2;grid-row:2/3;text-align:center;padding:3px 30px;border-radius:25px}.ordering__file-text{grid-column:2/3;grid-row:2/3;text-align:center}.ordering__about,.ordering__details{grid-area:details;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.ordering__details h3{font:200 24px/29px "Inter","MS Sans Serif",sans-serif;text-align:center;margin-top:0;margin-bottom:12px}.ordering__about{grid-area:about}.ordering__about textarea{resize:none;margin-top:10px;margin-bottom:26px;border-radius:20px;height:225px}.ordering__container{display:grid;grid-template-columns:1fr 1fr;-webkit-column-gap:30px;-moz-column-gap:30px;column-gap:30px;row-gap:10px}.ordering__container label{font:700 14px/17px "Inter","MS Sans Serif",sans-serif}.ordering__cross{cursor:pointer;position:absolute;right:20px;top:10px}.ordering__cross:after,.ordering__cross:before{content:"";position:absolute;width:12px;height:2px;background:#a6abbd}.ordering__cross:before{-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg)}.ordering__cross:after{-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg)}.ordering__discount{grid-area:discount;width:80%;border:2px solid #151719;border-radius:25px;padding:5px 20px;display:grid;grid-template-columns:1fr 1fr;gap:10px}.ordering__discount input,.ordering__discount label{font:700 24px/29px "Inter","MS Sans Serif",sans-serif;margin:0;padding:0}.ordering__discount input{width:inherit;border:0}.ordering__buttons{grid-area:buttons;display:grid;grid-template-columns:repeat(5,1fr);gap:20px}.ordering__buttons label{line-height:12px;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content;position:relative;display:grid;grid-template-columns:21px auto;gap:10px;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.ordering__buttons label:first-of-type{grid-column:1/2}.ordering__buttons label:last-of-type{grid-column:2/3}.ordering__buttons small{font:200 10px/12px "Inter","MS Sans Serif",sans-serif}.ordering__buttons .btn-black{margin-top:50px}.ordering__buttons input[type=checkbox]+span{width:21px;height:21px}.popup{position:fixed;bottom:100px;right:100px;z-index:10;display:grid;grid-template-columns:271px 60px;-webkit-box-align:end;-ms-flex-align:end;align-items:end;gap:10px;color:#fff}.popup p input,.popup__window{background:#0e0e0e;border-radius:20px}.popup__window{min-height:283px;visibility:hidden}.popup__window--active{visibility:visible}.popup__form,.popup__meet{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.popup__meet{padding:54px 20px;display:-webkit-box;display:-ms-flexbox;display:flex;gap:20px}.popup a{font:200 18px/22px "Inter","MS Sans Serif",sans-serif;color:#fff}.popup__form{font:200 24px/29px "Inter","MS Sans Serif",sans-serif;padding:15px;gap:5px;display:none}.popup__form button{font:700 24px/29px "Inter","MS Sans Serif",sans-serif;color:#fff}.popup__form .popup__personal{font:200 12px/14px "Inter","MS Sans Serif",sans-serif;display:grid;grid-template-columns:16px auto;gap:5px}.popup p{margin:0}.popup p input{border:2px solid #fff;width:100%}.popup__btn{background:#fff;width:60px;height:60px;padding:0;border-radius:20px}.popup__failed,.popup__success{padding:20px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:none}.preform{background:#fff;font-size:40px;line-height:48px;padding-top:88px;padding-bottom:10px;position:relative}.preform .wrapper{display:grid;grid-template-columns:3fr 1fr}.preform p{font-weight:200;margin:0}.preform a{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;-webkit-box-align:end;-ms-flex-align:end;align-items:end;-ms-flex-item-align:end;align-self:end}.projects{--mt-inside-card:10px;overflow:hidden}.projects__nav{padding:0;display:grid;grid-template-columns:repeat(auto-fit,minmax(145px,1fr));text-align:center;gap:50px;margin:20px 0 50px}.projects__nav a{font:200 16px/19px "Inter","MS Sans Serif",sans-serif;color:#0e0e0e;width:100%}.projects__nav a:focus-visible{font-weight:700}.projects li{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;min-height:30px;border:1px solid #0e0e0e;border-radius:84px}.projects li:hover{background:0 0}.projects__card{text-align:center;padding:30px 0 40px;position:relative}.projects__card:before{background:#0e0e0e;content:"";width:120%;height:1px;position:absolute;display:block}.projects__cta{display:grid;grid-template-columns:200px 50px auto 200px;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;gap:45px;margin-top:60px}.projects__cta img{display:block;width:100%;margin-top:10px;aspect-ratio:658/401;-webkit-transition:1s;-o-transition:1s;transition:1s}.projects__cta img:hover{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1);border-radius:10px}.projects h3,.projects h4,.projects__card p{color:#0e0e0e;margin-top:var(--mt-inside-card)}.projects h3,.projects__card p{font:700 24px/29px "Inter","MS Sans Serif",sans-serif}.projects h3{max-width:200px;text-align:left}.projects h4{font:200 24px/29px "Inter","MS Sans Serif",sans-serif;text-align:end}.video__item{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}*{-webkit-box-sizing:border-box;box-sizing:border-box}@media (max-width:1439px){.wrapper{padding-left:20px;padding-right:20px}.title{font:700 24px/29px "Inter","MS Sans Serif",sans-serif;margin-bottom:10px}.btn-black{font:700 18px/21px "Inter","MS Sans Serif",sans-serif;padding:7px 20px}.btn-black--review:before{content:"обзор"}.btn-black--order:active,.btn-black--send:active{width:35px;height:35px;padding:0}.btn-black--order:active:before{-webkit-transform:translate(9px,16px) rotate(45deg);-ms-transform:translate(9px,16px) rotate(45deg);transform:translate(9px,16px) rotate(45deg)}.btn-black--order:active:after{-webkit-transform:translate(-8px,16px) rotate(-45deg);-ms-transform:translate(-8px,16px) rotate(-45deg);transform:translate(-8px,16px) rotate(-45deg)}.btn-black--send:active:before{-webkit-transform:translate(0,2px) rotate(45deg);-ms-transform:translate(0,2px) rotate(45deg);transform:translate(0,2px) rotate(45deg)}.btn-black--send:active:after{-webkit-transform:translate(0,0) rotate(-45deg);-ms-transform:translate(0,0) rotate(-45deg);transform:translate(0,0) rotate(-45deg)}.btn-black--add:active{width:31px;height:31px;padding:0}.btn-black--add:active:after,.btn-black--add:active:before{width:17px}.btn-white{font:700 20px/29px "Inter","MS Sans Serif",sans-serif;border:2px solid #0e0e0e;border-radius:25px}.btn-arrow{width:60px;height:60px}.btn-arrow svg{width:30px;height:37px}.dev__web-container{padding-top:45px}.dev__web-inbox p{font:700 24px/29px "Inter","MS Sans Serif",sans-serif}.dev__web-inbox a,.form__stages-btn .btn-arrow svg{width:30px}.dev__web-services{margin:30px 0;gap:60px}.dev__web-services fieldset{grid-template-columns:150px 50px auto 160px;grid-template-rows:40px auto}.dev__web-services .btn-white{width:270px}.dev__web-title{text-align:start}.dev__web-description,.dev__web-title{font:200 18px/22px "Inter","MS Sans Serif",sans-serif}.dev__web-description span,.dev__web-number,.dev__web-price,.dev__web-promotion p,.form__ready-card h4{font:700 18px/21px "Inter","MS Sans Serif",sans-serif}.dev__web-price{text-align:center}.dev__web-promotion{padding:10px}.dev__web-promotion p{margin-bottom:5px}.dev__web-promotion p:first-child{margin-bottom:20px}.footer{padding:40px 20px 0}.footer__contacts{grid-template-columns:repeat(2,1fr);margin-top:40px}.footer__item{justify-self:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.footer__item:first-child{justify-self:center;-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.footer__item:last-child{justify-self:center;-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2}.footer__item:nth-child(2){-webkit-box-ordinal-group:4;-ms-flex-order:3;order:3}.footer__item:nth-child(3){-webkit-box-ordinal-group:5;-ms-flex-order:4;order:4}.footer img{aspect-ratio:768/228}.form__intro{padding-top:50px}.form__progress,.form__progress-bar,.form__progress-overlay-bottom,.form__progress-overlay-top{width:4px}.form__progress-bar{height:51vh;bottom:49vh}.form__progress-overlay-top{height:0}.form__stages-container{position:relative;grid-template-columns:2fr 7fr}.form__stages-container small{position:absolute}.form__stages-toggle{font:200 24px/29px "Inter","MS Sans Serif",sans-serif;width:45px;height:45px;justify-self:center}.form__stages-toggle--active{font-weight:700}.form__stages fieldset{gap:30px;margin-top:0}.form__stages fieldset h4{font:200 18px/22px "Inter","MS Sans Serif",sans-serif;margin-top:0}.form__stages-list label{grid-template-columns:16px minmax(auto,205px)}.form__stages-tooltip{top:50px;left:0}.form__stages-btn{padding-top:18px}.form__ready{padding-top:68px}.form__ready h3{padding-left:0}.form__ready-cards{gap:15px;margin-top:21px}.form__ready-card{padding:8px;grid-template-rows:70px minmax(auto,1fr) auto}.form__ready-list{padding:0}.form__ready-list label{grid-template-columns:16px minmax(auto,165px);font:200 16px/19px "Inter","MS Sans Serif",sans-serif}.header{min-height:90px}.navbar__wrap{gap:10px}.logo img{width:125px}.ordering__form{grid-template-areas:"info details" "info details" "about about" "file promo" "file discount" "buttons buttons";-webkit-column-gap:60px;-moz-column-gap:60px;column-gap:60px}.ordering__details h3,.ordering__form label,.projects h4{font:200 18px/22px "Inter","MS Sans Serif",sans-serif}.ordering__container{grid-template-columns:1fr}.ordering__container label{font:700 18px/21px "Inter","MS Sans Serif",sans-serif}.ordering__promo label{grid-template-columns:2fr 1fr}.ordering__promo input{text-align:start}.ordering__discount{width:100%;grid-template-columns:repeat(2,1fr)}.ordering__discount input,.ordering__discount label,.ordering__promo input,.ordering__promo label,.projects h3,.projects__card p{font:700 18px/21px "Inter","MS Sans Serif",sans-serif}.ordering__buttons{grid-template-columns:repeat(4,1fr)}.ordering__buttons button{grid-column:1/-1;grid-row:2/3;justify-self:center;margin-top:20px}.preform{font-size:25px;line-height:30px;letter-spacing:0;padding-top:45px}.projects__nav{padding:0 50px}.projects__card{padding:10px 0 20px}.projects__cta{grid-template-columns:150px 30px auto 150px;margin-top:20px}.projects__cta img{aspect-ratio:381/233}}@media (max-width:767px){.title{margin-top:10px}.btn-black,.btn-white,.title{font:700 18px/21px "Inter","MS Sans Serif",sans-serif}.btn-arrow{width:30px;height:30px}.btn-arrow svg{width:16px;height:21px}.dev__web-container{grid-template-columns:1fr}.dev__web-container:first-child{padding-top:0}.dev__web-services{gap:40px;margin:15px 0}.dev__web-services fieldset{grid-template-columns:auto 20px 120px;grid-template-rows:auto auto;grid-template-areas:"title number price" "description description button";gap:5px}.dev__web-services button{font:700 14px/17px "Inter","MS Sans Serif",sans-serif}.dev__web-inbox{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;justify-self:flex-start;gap:20px;grid-row:1/2}.dev__web-title{font-size:15px;line-height:18px;margin-top:12px}.dev__web-number{font:700 14px/17px "Inter","MS Sans Serif",sans-serif}.dev__web-description{font:200 12px/14px "Inter","MS Sans Serif",sans-serif;margin:0;padding:0;position:relative}.dev__web-price,.dev__web-promotion p,.popupp .menu>li>a.active{font:700 14px/17px "Inter","MS Sans Serif",sans-serif}.dev__web-promotion{width:280px;margin-top:30px;margin-bottom:30px}.footer{padding:30px 20px 0}.footer__contacts{gap:10px}.dev__web-description span,.footer__item p{font:700 12px/15px "Inter","MS Sans Serif",sans-serif}.footer__item a{font:200 12px/14px "Inter","MS Sans Serif",sans-serif}.footer img{aspect-ratio:320/86;max-height:195px}.form::after{height:15%}.form__stages-question{display:block;width:42px;height:42px;grid-column:3/4}.form__stages-content h5{font:200 18px/22px "Inter","MS Sans Serif",sans-serif;margin-top:20px;margin-bottom:10px;padding-left:20px}.form__stages-content p{font:200 10px/12px "Inter","MS Sans Serif",sans-serif}.form__stages-actions{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;position:relative;top:50px;padding:.5rem 1rem}.form__stages-actions button{border:0;background:#d3d3d3;border-radius:5px;padding:.5rem 1rem;font-size:.8rem;line-height:1;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg)}.form__boooooox{grid-template-columns:50px 1fr;gap:10px}.form__intro{padding-top:22px}.form__intro h2{grid-column:1/-1;margin-bottom:18px}.form__progress{-ms-flex-item-align:start;align-self:flex-start;left:46px}.form__stages-container{grid-template-columns:50px auto 40px 40px;width:100%;gap:10px;align-self:center;overflow:inherit}.form__stages-container small{display:none}.form__stages-container:last-child(:last-of-type){display:none}.form__stages-container h3{grid-column:2/3}.form__stages fieldset{grid-template-columns:45px 1fr;gap:15px}.form__stages fieldset h4{grid-column:2/3;text-align:start;margin-top:10px;margin-bottom:10px;align-self:center}.form__stages-toggle{grid-column:1/2;grid-row:1/2;font:200 18px/22px "Inter","MS Sans Serif",sans-serif}.form__stages-toggle--active{font:700 18px/21px "Inter","MS Sans Serif",sans-serif}.form__stages-list{grid-column:2/3}.form__ready-list label,.form__stages fieldset h4,.form__stages-list label,.form__stages-list label:hover{font-size:15px;line-height:18px}.form__stages-tooltip{display:none}.form__stages-btn{grid-template-columns:repeat(8,1fr);justify-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.form__stages-btn .btn-white{grid-column:2/8}.form__stages-btn .btn-arrow{grid-column:8/9}.form__ready{padding-top:39px}.form__ready-cards{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin-top:60px;gap:5px}.form__ready-card{grid-template-rows:35px auto auto;min-height:auto;padding:5px}.form__ready-card h4{font:700 14px/17px "Inter","MS Sans Serif",sans-serif;padding:5px}.form__ready-list{display:grid;grid-template-columns:repeat(2,auto);gap:8px;height:auto;padding:0}.form__ready-list label{gap:8px}.form__ready-container p{font-weight:700;font-size:20px;line-height:24px}.form__label-ready-s-two-logotypes{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.form__label-ready-s-corporate-style{-webkit-box-ordinal-group:4;-ms-flex-order:3;order:3}.form__label-ready-s-three-carriers{-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2}.form__label-ready-s-package{-webkit-box-ordinal-group:5;-ms-flex-order:4;order:4}.form__label-ready-i-two-logotypes{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.form__label-ready-i-corporate-style{-webkit-box-ordinal-group:4;-ms-flex-order:3;order:3}.form__label-ready-i-five-carriers{-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2}.form__label-ready-i-brandbook{-webkit-box-ordinal-group:6;-ms-flex-order:5;order:5}.form__label-ready-i-package{-webkit-box-ordinal-group:5;-ms-flex-order:4;order:4}.form__label-ready-bi-two-types-of-naming{-webkit-box-ordinal-group:4;-ms-flex-order:3;order:3}.form__label-ready-bi-two-logotypes{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.form__label-ready-bi-corporate-style{-webkit-box-ordinal-group:8;-ms-flex-order:7;order:7}.form__label-ready-bi-five-carriers{-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2}.form__label-ready-bi-brandbook{-webkit-box-ordinal-group:5;-ms-flex-order:4;order:4}.form__label-ready-bi-brand-platform{-webkit-box-ordinal-group:6;-ms-flex-order:5;order:5}.form__label-ready-bi-package{-webkit-box-ordinal-group:7;-ms-flex-order:6;order:6}.navbar{position:fixed;left:0;top:0;width:100%;height:75px}.logo img{width:60px;margin-left:16px}.navbar__wrap .menu{display:none}.hamb{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.hamb__field{padding:16px 20px;cursor:pointer}.bar{display:block;width:30px;height:2px;margin:6px auto;background-color:#000;-webkit-transition:.2s;-o-transition:.2s;transition:.2s}.popupp{position:fixed;top:75px;left:-100%;height:100%;background-color:#fff;z-index:100;-webkit-transition:.3s;-o-transition:.3s;transition:.3s}.popupp.open{left:0}.popupp,.popupp .menu,.popupp .menu>li>a{display:-webkit-box;display:-ms-flexbox;display:flex}.popupp .menu,.popupp .menu>li>a{width:100%}.popupp .menu{height:100%;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;padding:10px 0;overflow:auto}.popupp,.popupp .menu>li{width:100%}.popupp .menu>li>a{font:200 16px/19px "Inter","MS Sans Serif",sans-serif;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:20px 0}.popupp .menu>li>a:hover{background-color:rgba(122,82,179,.1)}.hamb__field.active .bar:nth-child(2){opacity:0}.hamb__field.active .bar:nth-child(1){-webkit-transform:translateY(8px) rotate(45deg);-ms-transform:translateY(8px) rotate(45deg);transform:translateY(8px) rotate(45deg)}.hamb__field.active .bar:nth-child(3){-webkit-transform:translateY(-8px) rotate(-45deg);-ms-transform:translateY(-8px) rotate(-45deg);transform:translateY(-8px) rotate(-45deg)}body.noscroll{overflow:hidden}.ordering{margin-top:0}.ordering__form{grid-template-columns:1fr;grid-template-areas:"info" "about" "file" "promo" "discount" "buttons"}.ordering__about textarea,.ordering__form input,.ordering__form label{font:200 12px/14px "Inter","MS Sans Serif",sans-serif}.ordering__discount p,.ordering__promo input,.ordering__promo label,.projects__card p{font:700 12px/15px "Inter","MS Sans Serif",sans-serif}.ordering__details{display:none}.ordering__buttons{grid-template-columns:1fr}.ordering__buttons label:first-of-type{grid-column:1/2;grid-row:1/2}.ordering__buttons label:last-of-type{grid-column:1/2;grid-row:2/3}.ordering__buttons button{grid-column:1/2;grid-row:3/4}.preform{font-size:15px;line-height:18px;letter-spacing:0;padding-top:10px}.preform a{-webkit-box-pack:end;-ms-flex-pack:end;justify-content:end;justify-self:end}.projects__nav{padding:0;-webkit-column-gap:50px;-moz-column-gap:50px;column-gap:50px;row-gap:10px;margin:10px 0}.projects__card{padding:10px 0}.projects__cta{grid-template-columns:60px 20px auto 70px;gap:10px;margin-top:10px}.projects h3{font:700 9px/11px "Inter","MS Sans Serif",sans-serif}.projects h4{font:200 9px/11px "Inter","MS Sans Serif",sans-serif}}@media (max-width:469px){.projects li:nth-child(4n+2){width:136px;justify-self:end}.projects li:nth-child(4n+3){width:136px}.projects__nav{grid-template-columns:repeat(auto-fit,minmax(113px,1fr))}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */