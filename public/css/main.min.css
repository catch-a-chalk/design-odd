/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0;font:21px/1.5 "Inter-ExtraLight","MS Sans Serif",sans-serif;background:#fff}details,main{display:block}h1{font-size:2em;margin:.67em 0}button,hr{overflow:visible}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0}code,kbd,pre,samp{font:1em monospace,monospace}a{background:0 0;text-decoration:none}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button{font:100%/1.15 inherit;margin:0;text-transform:none;-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}input{font:100%/1.15 inherit;margin:0;overflow:visible}optgroup,select,textarea{font:100%/1.15 inherit;margin:0}select{text-transform:none}textarea{overflow:auto}[type=button],[type=reset],[type=submit]{-webkit-appearance:button}fieldset{padding:.35em .75em .625em}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{vertical-align:baseline}[type=checkbox],[type=radio],legend{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button{height:auto}[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}[type=search]::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}.visually-hidden,::after,::before{padding:0;margin:0;border:0}li,ol,ul{list-style:none}@font-face{font-family:"Inter-ExtraLight";font-style:normal;font-weight:200;src:url(../fonts/Inter-ExtraLight.woff2) format("woff2"),url(../fonts/Inter-ExtraLight.woff) format("woff");font-display:swap}@font-face{font-family:"Inter-Regular";font-style:normal;font-weight:400;src:url(../fonts/Inter-Regular.woff2) format("woff2"),url(../fonts/Inter-Regular.woff) format("woff");font-display:swap}@font-face{font-family:"Inter-Bold";font-style:normal;font-weight:700;src:url(../fonts/Inter-Bold.woff2) format("woff2"),url(../fonts/Inter-Bold.woff) format("woff");font-display:swap}.visually-hidden{position:absolute;width:1px;height:1px;margin:-1px;overflow:hidden;white-space:nowrap;clip:rect(0 0 0 0);-webkit-clip-path:inset(100%);clip-path:inset(100%)}.title{font-size:40px;font-weight:700;line-height:48px;letter-spacing:0;text-align:left}.wrapper{max-width:1170px;margin-left:auto;margin-right:auto;padding-left:16px;padding-right:16px}.header a,.is-active{letter-spacing:0;text-align:left}.is-active{font-weight:700;font-size:18px;line-height:22px}.header{margin-top:27px}.header .wrapper,.header__nav{display:-webkit-box;display:-ms-flexbox;display:flex}.header .wrapper{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__nav{-ms-flex-wrap:wrap;flex-wrap:wrap;gap:50px;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline}.header a{font:16px/19px "Inter-ExtraLight","MS Sans Serif",sans-serif;color:#000}.header p{text-align:center}.video__item{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */