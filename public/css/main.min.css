@charset "UTF-8";
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0;font:200 21px/1.5 "Inter","MS Sans Serif",sans-serif;background:#fff}.header .wrapper img,.logo img,details,main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font:1em monospace,monospace}a,button{background:0 0}a{text-decoration:none}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none;-o-object-fit:contain;object-fit:contain}button{font:100%/1.15 inherit;margin:0;overflow:visible;text-transform:none;border:0;cursor:pointer;-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}input{font:100%/1.15 inherit;margin:0;overflow:visible}optgroup,select,textarea{font:100%/1.15 inherit;margin:0}select{text-transform:none}textarea{overflow:auto}[type=button],[type=reset],[type=submit]{-webkit-appearance:button}fieldset{padding:.35em .75em .625em}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{vertical-align:baseline}[type=checkbox],[type=radio],legend{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button{height:auto}[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}[type=search]::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}::after,::before{padding:0;margin:0;border:0;-webkit-box-sizing:border-box;box-sizing:border-box}li,ol,ul{list-style:none}@font-face{font-family:"Inter";font-style:normal;font-weight:200;src:url(/font/Inter-ExtraLight.woff2) format("woff2");font-display:swap}@font-face{font-family:"Inter";font-style:normal;font-weight:400;src:url(/font/Inter-Regular.woff2) format("woff2");font-display:swap}@font-face{font-family:"Inter";font-style:normal;font-weight:700;src:url(/font/Inter-Bold.woff2) format("woff2");font-display:swap}.visually-hidden{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;white-space:nowrap;border:0;clip:rect(0 0 0 0);-webkit-clip-path:inset(100%);clip-path:inset(100%)}.dev__web-container p,.title{margin-top:0;margin-bottom:20px}.title{font-size:40px;font-weight:700;line-height:48px;letter-spacing:0;text-align:left}.wrapper{max-width:1440px;margin-left:auto;margin-right:auto;padding-left:16px;padding-right:16px;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.btn-arrow,.dev__web-services ul,.wrapper{display:-webkit-box;display:-ms-flexbox;display:flex}.btn-arrow{width:75px;height:75px}.btn-white{background:#fff;font-size:40px;font-weight:700;line-height:48px;color:#0e0e0e}.btn-black{background:#0e0e0e;font-size:24px;font-weight:700;line-height:29px;color:#fff}.dev__web-container{padding-top:88px;padding-bottom:10px;display:grid;grid-template-columns:10fr 1fr 1fr;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.dev__web-container p{font:700 40px/48px "Inter","MS Sans Serif",sans-serif}.dev__web-container button{width:60px;justify-self:end}.dev__web-services ul{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0;margin:120px 0;gap:100px}.dev__web-services li{display:grid;grid-template-columns:250px 70px auto 250px;gap:20px}.dev__web-title{font:200 24px/29px "Inter","MS Sans Serif",sans-serif;text-align:end}.dev__web-number{font:700 24px/29px "Inter","MS Sans Serif",sans-serif;justify-self:center}.dev__web-description{font:200 24px/29px "Inter","MS Sans Serif",sans-serif;padding-right:20px}.dev__web-description span,.dev__web-order p{font:700 24px/29px "Inter","MS Sans Serif",sans-serif}.dev__web-order{justify-self:end}.dev__web-order button{padding:5px 45px;border-radius:50px}.form .wrapper{position:relative}.form fieldset{padding:0}.form fieldset input{position:absolute;width:1px;height:1px;overflow:hidden;clip:rect(0 0 0 0)}.form__option{background:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none'%3E%3Crect width='15' height='15' x='.5' y='.5' fill='%23fff' rx='3.5'/%3E%3Crect width='15' height='15' x='.5' y='.5' stroke='%23E8E7E7' rx='3.5'/%3E%3C/svg%3E") no-repeat;cursor:pointer;width:16px;height:16px;margin-right:10px}fieldset input:checked+.form__option,fieldset input:checked:hover+.form__option{background:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none'%3E%3Crect width='15' height='15' x='.5' y='.5' fill='%23fff' rx='3.5'/%3E%3Cpath stroke='%23000' d='M4 7.143 7.2 10 12 5'/%3E%3Crect width='15' height='15' x='.5' y='.5' stroke='%23000' rx='3.5'/%3E%3C/svg%3E") no-repeat}.form__intro{background:#fff;padding-top:88px;display:grid;grid-template-columns:repeat(3,1fr)}.form__intro h2{grid-column:2/3;justify-self:center}.form__progress{background:#eaecf0;position:absolute;width:6px;height:100vw;-webkit-box-shadow:1px 1px 2px 0 #a6abbd inset;box-shadow:1px 1px 2px 0 #a6abbd inset;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-item-align:center;align-self:center;top:150px;z-index:-2;border-radius:6px}.form__progress-bar{background:#0e0e0e;position:fixed;width:6px;height:50vh;top:0;bottom:50vh;z-index:-1}.form__progress-overlay-bottom,.form__progress-overlay-top{position:absolute;top:0;bottom:auto;left:0;right:0;z-index:1}.form__progress-overlay-top{background:#0e0e0e;width:6px;height:20vh}.form__progress-overlay-bottom{background:linear-gradient(top,#040404 50%,#fff 50%);width:100%;height:25vh}.form__stages{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.form__stages-container{display:grid;grid-template-columns:2fr 5fr}.form__stages-container h3{grid-column:1/2;grid-row:1/2}.form__stages-container small{font:400 14px/17px "Inter","MS Sans Serif",sans-serif;grid-column:1/2;grid-row:2/3}.form__stages-toggle{background:#eaecf0;margin-top:0;border-radius:30px;width:58px;height:58px;position:sticky;top:50vh;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-shadow:3px 3px 3px 0 #aeb8c0 inset;box-shadow:3px 3px 3px 0 #aeb8c0 inset}.form__stages-toggle--active{background:#000;font:700 24px/29px "Inter","MS Sans Serif",sans-serif;color:#fff;-webkit-box-shadow:none;box-shadow:none}.form__stages fieldset{margin-bottom:25px;position:relative;border:0;display:grid;grid-template-columns:1fr 1fr 60px 1fr 1fr;gap:50px}.form__stages fieldset:not(:first-of-type){margin-top:25px}.form__stages fieldset h4{font:200 24px/29px "Inter","MS Sans Serif",sans-serif;grid-column:2/3;text-align:end;margin-top:14px}.form__stages-btn{background:#fff;display:grid;grid-template-columns:repeat(3,1fr);padding-top:50px}.form__stages-btn .btn-white{grid-column:2/3;border:3px solid #0e0e0e;border-radius:60px}.form__stages-btn .btn-arrow{grid-column:3/4;justify-self:end;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.form__stages-list{grid-column:4/-1;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:8px;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.form__ready-card label p,.form__stages-list label{font:200 16px/19px "Inter","MS Sans Serif",sans-serif}.form__stages-list,.form__stages-list label{display:-webkit-box;display:-ms-flexbox;display:flex}.form__stages-list label{position:relative;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline}.form__stages-list label:hover{font-weight:700;line-height:19px}.form__stages-list label:hover .form__stages-tooltip{visibility:visible}.form__ready-card label input,.form__stages-list input{margin-right:10px}.form__stages-tooltip{background:#fff;visibility:hidden;width:197px;-webkit-box-shadow:6px 6px 16px 8px rgba(174,174,192,.35);box-shadow:6px 6px 16px 8px rgba(174,174,192,.35);text-align:initial;padding:22px 14px;border-radius:6px;border:1px solid rgba(175,185,193,.69);position:absolute;z-index:1;top:-5px;left:105%;font:200 10px/12px "Inter","MS Sans Serif",sans-serif;color:#0e0e0e}.form__label-stages-branding .form__stages-tooltip::after{content:"Изучение бренда для решения конкретных маркетинговых задач, в том числе повышение конкурентноспособности, формирование уникального образа, повышение симпатии потребителей, а также закрепление и дальнейшее развитие позиции на рынке."}.form__label-stages-rebranding .form__stages-tooltip::after{content:"Обновление уже имеющихся концептов и реализованных идей на основе полученного опыта компании на рынке, в том числе и полное реконструкция образа компании с нуля."}.form__label-stages-retail-branding .form__stages-tooltip::after{content:"Проектирование и оптимизация торгового пространства, развитие качества взаимодействия торговых точек с клиентами."}.form__label-stages-localization .form__stages-tooltip::after{content:"Перевод и адаптирование иностранной продукции под Российский сегмент (в том числе по программе импортозамещения)."}.form__label-stages-cjm .form__stages-tooltip::after,.form__label-stages-customer-experience .form__stages-tooltip::after,.form__label-stages-marketing-analysis .form__stages-tooltip::after{content:"Проводится полный анализ взаимодействия между брендом и клиентом, напрямую влияющий на уровень клиентского опыта. Включает в себя весь путь клиента от потребности до результата (customer journey), все точки контакта клиента с брендом (brand touchpoints), а также окружение при взаимодействии (environment)."}.form__label-stages-brand-audit .form__stages-tooltip::after{content:"Аудит бренда — один из самых надёжных методов анализа составляющих бренда, а именно: его конкурентоспособности, текущего положения бренда на рынке, включая исследование потенциала для его дальнейшего развития."}.form__label-stages-structuring-of-the-received-data .form__stages-tooltip::after{content:"Все полученные данные затем структурируются для подбора оптимальной стратегии позиционирования, сегментирования ключевых групп целевой аудитории, выявлении сильных и слабых сторон позиционирования бренда относительно конкурентов. Мы используем собственные и международные методики изучения брендов, применяя самые результативные модели."}.form__ready{background:#fff;padding-top:83px}.form__ready h3{padding-left:100px;max-width:755px}.form__ready-cards{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.form__ready-cards fieldset{border:0}.form__ready-card{aspect-ratio:314/451;height:451px;display:grid;grid-template-rows:70px auto auto;justify-items:center;padding:8px 30px 43px;border:2px solid #d3d3d3;border-radius:7px;overflow:hidden}.form__ready-card h4,.form__ready-container p{font:700 24px/29px "Inter","MS Sans Serif",sans-serif;text-align:center}.form__ready-card h4{margin-top:10px;margin-bottom:13px}.form__ready-card label,.form__ready-list{display:-webkit-box;display:-ms-flexbox;display:flex}.form__ready-card label p{margin:0}.form__ready-list{height:210px;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:8px;margin-top:24px;margin-bottom:0;padding:20px}.form__ready-list label{display:grid;grid-template-columns:auto 1fr}.form__ready-container{margin-top:20px}.form__ready-container p{margin:5px 0}.form__ready-container button{padding:5px 36px;border-radius:84px}.form__ready-commentary{font:200 16px/19px "Inter","MS Sans Serif",sans-serif;display:-webkit-box;display:-ms-flexbox;display:flex;width:314px}.header{background:#fff}.header .wrapper,.header__list,.header__nav{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.header .wrapper{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:170px}.header__list,.header__nav{width:100%}.header__nav{-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline}.header__nav a,.menu>li>a{font:200 18px/22px "Inter","MS Sans Serif",sans-serif;letter-spacing:0;text-align:left;color:#000}.header__nav p{text-align:center}.header__list{gap:30px}.header__button{display:none}.header{padding-top:27px;padding-bottom:10px;position:relative;z-index:1;min-height:121px}.navbar{width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;gap:30px;background:#fff}.navbar__wrap,.navbar__wrap .menu>li>a{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.navbar__wrap{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;gap:100px;width:100%;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.hamb,.ordering input[type=file],.popup{display:none}.menu{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;gap:30px}.navbar__wrap .menu>li{-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch}.navbar__wrap .menu>li>a{padding:0 20px;color:#000}.navbar__wrap .menu>li>a:hover{color:#000}.ordering{margin-top:50px}.ordering input,.ordering label,.ordering textarea{font:200 24px/29px "Inter","MS Sans Serif",sans-serif;cursor:pointer}.ordering__form{display:grid;grid-template-columns:1fr 1fr;gap:100px}.ordering__info{grid-column:1/2}.navbar__wrap .menu>li,.navbar__wrap .menu>li>a,.ordering__info p{display:-webkit-box;display:-ms-flexbox;display:flex}.ordering__info p:not(:last-of-type){-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.ordering__info p:last-of-type{outline:2px solid #0e0e0e;border-radius:25px;padding:5px 20px}.ordering__info p:last-of-type label{font-weight:700}.ordering__info p:last-of-type input{border:0;width:100%;text-align:center}.ordering__required{outline:2px solid #0e0e0e;border-radius:25px;padding:5px 20px;margin-top:12px;margin-bottom:12px}.ordering__details textarea:active,.ordering__details textarea:focus,.ordering__details textarea:focus-within,.ordering__required:active,.ordering__required:focus,.ordering__required:focus-within{outline:3px solid #0e0e0e}.ordering__file{display:grid;grid-template-columns:1fr 3fr;gap:15px}.ordering__file-label{grid-column:1/-1;grid-row:1/2}.ordering__file-btn{font:700 24px/29px "Inter","MS Sans Serif",sans-serif;grid-column:1/2;grid-row:2/3;text-align:center;padding:3px 30px;border-radius:25px}.ordering__file-text{grid-column:2/3;grid-row:2/3;text-align:center}.ordering__details{grid-column:2/3;display:-webkit-box;display:-ms-flexbox;display:flex}.ordering__details h3{font:200 24px/29px "Inter","MS Sans Serif",sans-serif;text-align:center;margin-top:20px;margin-bottom:12px}.ordering__details,.ordering__details p{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.ordering__details textarea{resize:none;margin-top:10px;margin-bottom:26px;outline:2px solid #0e0e0e;border-radius:20px;padding:5px 20px;height:225px}.ordering__container{min-height:170px}.ordering__container ul{padding:0;margin:0;display:grid;grid-template-columns:repeat(2,1fr);gap:10px}.ordering__container li{-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content}.ordering__container span{font:700 14px/17px "Inter","MS Sans Serif",sans-serif;margin-left:10px}.ordering__buttons label,.ordering__container li,.ordering__details p,.ordering__discount{display:-webkit-box;display:-ms-flexbox;display:flex}.ordering__discount{-ms-flex-pack:distribute;justify-content:space-around;width:70%;margin:21px 0;outline:2px solid #0e0e0e;border-radius:25px}.ordering__discount p{font:700 24px/29px "Inter","MS Sans Serif",sans-serif;margin:0;padding:5px 30px}.ordering__buttons{grid-column:1/-1;display:grid;grid-template-columns:repeat(5,1fr)}.ordering__buttons label{line-height:12px;position:relative;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.ordering__buttons label:first-of-type{grid-column:1/2}.ordering__buttons label:last-of-type{grid-column:2/3}.ordering__buttons small{font:200 10px/12px "Inter","MS Sans Serif",sans-serif}.ordering__buttons strong,.preform span,.projects__nav a:hover,.projects__nav a[aria-selected=true]{font-weight:700}.ordering__buttons button{grid-column:3/4;border-radius:25px}.ordering__buttons input[type=checkbox]+span{width:21px;height:21px;margin-right:9px;content:url(../img/icon-radio-off.svg);opacity:.8}.ordering__buttons input[type=checkbox]+span:focus,.ordering__buttons input[type=checkbox]+span:focus-within,.ordering__buttons input[type=checkbox]+span:hover{opacity:1}.ordering__buttons input[type=checkbox]:checked+span{content:url(../img/icon-radio-on.svg)}.ordering__buttons input[type=checkbox]:disabled+span,.ordering__buttons input[type=checkbox]:disabled~small{opacity:.5;cursor:default}.preform{background:#fff;font-size:40px;line-height:48px;padding-top:88px;padding-bottom:10px;position:relative;z-index:1}.preform .wrapper{display:grid;grid-template-columns:3fr 1fr}.preform p{font-weight:200;margin:0}.preform button{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;-webkit-box-align:end;-ms-flex-align:end;align-items:end;-ms-flex-item-align:end;align-self:end}.projects{--mt-inside-card:10px;overflow:hidden}.projects__nav{padding:0;display:grid;grid-template-columns:repeat(auto-fit,minmax(145px,1fr));text-align:center;gap:50px;margin:20px 0 50px}.projects__nav a{font:200 16px/19px "Inter","MS Sans Serif",sans-serif;color:#0e0e0e;width:100%}.projects__nav a:focus-visible{font-weight:700}.projects li{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;min-height:30px;border:1px solid #0e0e0e;border-radius:84px}.projects__card{text-align:center;padding:40px 0;position:relative}.projects__card:before{background:#0e0e0e;content:"";width:120%;height:1px;position:absolute;display:block}.projects__cta{display:grid;grid-template-columns:200px 50px auto 200px;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;gap:45px;margin-top:60px}.projects__cta img{display:block;width:100%;margin-top:10px;aspect-ratio:658/401}.projects h3,.projects h4,.projects__card p{color:#0e0e0e;margin-top:var(--mt-inside-card)}.projects h3,.projects__card p{font:700 24px/29px "Inter","MS Sans Serif",sans-serif}.projects h3{max-width:200px;text-align:left}.projects h4{font:200 24px/29px "Inter","MS Sans Serif",sans-serif;max-width:180px;text-align:end}.video__item{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}*{-webkit-box-sizing:border-box;box-sizing:border-box}@media (max-width:1439px){.header .wrapper img,.logo img{width:125px}.header{min-height:90px}.navbar__wrap{gap:10px}}@media (max-width:1023px){.projects__nav{padding:0 50px}.projects h3,.projects__card p{font:700 18px/21px "Inter","MS Sans Serif",sans-serif}.projects__cta img{aspect-ratio:381/233}.projects__cta{grid-template-columns:150px 30px auto 150px}.projects h4{font:200 18px/22px "Inter","MS Sans Serif",sans-serif}}@media (max-width:767px){.header .wrapper{gap:20px;padding:0}.header .wrapper img,.logo img{width:60px;margin-left:16px}.header__list,.header__nav{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;position:absolute}.header__nav{z-index:1;-webkit-box-align:end;-ms-flex-align:end;align-items:end}.header__list{display:none;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;margin-top:50px;padding:10px 16px;width:100%;background-color:#f5f5f5}.header__button{z-index:2;display:block;padding:0;border:0;background-color:transparent;justify-self:end;margin:0 16px 0 0}.navbar{position:fixed;left:0;top:0;width:100%;height:75px}.navbar__wrap .menu{display:none}.hamb{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.hamb__field{padding:16px 20px;cursor:pointer}.bar{display:block;width:30px;height:2px;margin:6px auto;background-color:#000;-webkit-transition:.2s;-o-transition:.2s;transition:.2s}.popup{position:fixed;top:75px;left:-100%;height:100%;background-color:#fff;z-index:100;-webkit-transition:.3s;-o-transition:.3s;transition:.3s}.popup.open{left:0}.popup,.popup .menu,.popup .menu>li>a{display:-webkit-box;display:-ms-flexbox;display:flex}.popup .menu,.popup .menu>li>a{width:100%}.popup .menu{height:100%;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;padding:50px 0;overflow:auto}.popup,.popup .menu>li{width:100%}.popup .menu>li>a{font:200 16px/19px "Inter","MS Sans Serif",sans-serif;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:20px 0}.popup .menu>li>a:hover{background-color:rgba(122,82,179,.1)}.hamb__field.active .bar:nth-child(2){opacity:0}.hamb__field.active .bar:nth-child(1){-webkit-transform:translateY(8px) rotate(45deg);-ms-transform:translateY(8px) rotate(45deg);transform:translateY(8px) rotate(45deg)}.hamb__field.active .bar:nth-child(3){-webkit-transform:translateY(-8px) rotate(-45deg);-ms-transform:translateY(-8px) rotate(-45deg);transform:translateY(-8px) rotate(-45deg)}body.noscroll{overflow:hidden}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */